{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}},"post_list":[{"title":"Linux-iptables学习","uid":"8fa7fefe6aa0f69b9eef61d9ade88e6e","slug":"linux/Linux-iptables学习","date":"2023-06-15T05:43:19.000Z","updated":"2023-06-16T01:23:53.390Z","comments":true,"path":"api/articles/linux/Linux-iptables学习.json","keywords":"chriswood blogs sharing","cover":null,"text":"iptables介绍iptables组成Linux平台下的包过滤防火墙，与大多数的Linux软件一样，这个包过滤防火墙是免费的，在安装系统的时候就已经自带 基础概念1.规则（rules）规则（rules）其实就是网络管理员预定义的条件，规则一般的定义为“如果数据包头符合这样的条件...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"15 mins."},"categories":[{"name":"Linux","slug":"Linux","count":1,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":1,"path":"api/tags/Linux.json"},{"name":"iptables","slug":"iptables","count":1,"path":"api/tags/iptables.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"k3s部署rancher","uid":"ed36a2a5be80ea11d6c25858e6e2bac9","slug":"kubernetes/k3s部署rancher","date":"2023-06-15T00:50:21.000Z","updated":"2023-06-16T01:23:53.390Z","comments":true,"path":"api/articles/kubernetes/k3s部署rancher.json","keywords":"chriswood blogs sharing","cover":null,"text":"简易版rancher版本2.7.4 部署k3s server节点如果是windows环境，推荐使用k3d在docker中安装k3s k3d cluster create --config local-k3s.yaml # k3d configuration file, saved...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"rancher","slug":"rancher","count":1,"path":"api/categories/rancher.json"}],"tags":[{"name":"rancher","slug":"rancher","count":1,"path":"api/tags/rancher.json"},{"name":"k3s","slug":"k3s","count":1,"path":"api/tags/k3s.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"shell脚本编辑","uid":"26dd4557ea6b40d458e20ec9154add38","slug":"linux/shell脚本编辑","date":"2023-06-09T06:44:00.000Z","updated":"2023-06-16T01:23:53.390Z","comments":true,"path":"api/articles/linux/shell脚本编辑.json","keywords":"chriswood blogs sharing","cover":null,"text":"shell 脚本语法1.demo.sh#!&#x2F;bin&#x2F;bash echo hello world! 给shell脚本可运行权限 chmod +x demo.sh 2.read命令#!&#x2F;bin&#x2F;bash echo &quot;please in...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"shell","slug":"shell","count":1,"path":"api/categories/shell.json"}],"tags":[{"name":"shell","slug":"shell","count":1,"path":"api/tags/shell.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"docker-entrypoint.sh脚本","uid":"bd89df672fae4e3ad93a3365c0b7431d","slug":"docker/docker-entrypoint-sh脚本","date":"2023-06-09T06:13:44.000Z","updated":"2023-06-16T01:23:53.386Z","comments":true,"path":"api/articles/docker/docker-entrypoint-sh脚本.json","keywords":"chriswood blogs sharing","cover":null,"text":"出处很多著名库的Dockerfile文件中，通常都是ENTRYPOINT字段是这样： ENTRYPOINT [&quot;docker-entrypoint.sh&quot;] 用处我们参考分析下MySQL的Dockerfile文件，来认识下docker-entrypoint.s...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"docker","slug":"docker","count":6,"path":"api/categories/docker.json"}],"tags":[{"name":"docker","slug":"docker","count":5,"path":"api/tags/docker.json"},{"name":"docker-entrypoint.sh","slug":"docker-entrypoint-sh","count":1,"path":"api/tags/docker-entrypoint-sh.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"kubectl多集群环境切换","uid":"a04e64b279ef00352d55ff2b0588cef8","slug":"kubernetes/kubectl多集群环境切换","date":"2023-06-09T03:05:35.000Z","updated":"2023-06-16T01:23:53.390Z","comments":true,"path":"api/articles/kubernetes/kubectl多集群环境切换.json","keywords":"chriswood blogs sharing","cover":null,"text":"官网Referencehttps://kubernetes.io/docs/reference/kubectl/https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands 查看配置文件kubect...","link":"","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"18 mins."},"categories":[{"name":"kubernetes","slug":"kubernetes","count":5,"path":"api/categories/kubernetes.json"}],"tags":[{"name":"kubernetes","slug":"kubernetes","count":5,"path":"api/tags/kubernetes.json"},{"name":"kubectl","slug":"kubectl","count":1,"path":"api/tags/kubectl.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"kubernetes在阿里云上的应用","uid":"53f7dd1efa70a226f7a8abd166f55336","slug":"kubernetes/kubernetes在阿里云上的应用","date":"2023-06-07T09:34:32.000Z","updated":"2023-06-16T01:23:53.390Z","comments":true,"path":"api/articles/kubernetes/kubernetes在阿里云上的应用.json","keywords":"chriswood blogs sharing","cover":null,"text":"阿里云部署jeepayConfigMap--- apiVersion: v1 kind: ConfigMap metadata: name: pay-mysql-config namespace: pay data: # replace your filename of prop...","link":"","photos":[],"count_time":{"symbolsCount":"184k","symbolsTime":"2:47"},"categories":[{"name":"kubernetes","slug":"kubernetes","count":5,"path":"api/categories/kubernetes.json"}],"tags":[{"name":"kubernetes","slug":"kubernetes","count":5,"path":"api/tags/kubernetes.json"},{"name":"aliyun","slug":"aliyun","count":1,"path":"api/tags/aliyun.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"batch命令","uid":"b1ff30b25dc544eb8f6f0dca1a68289c","slug":"windows/batch命令","date":"2023-05-25T08:49:26.000Z","updated":"2023-06-16T01:23:53.394Z","comments":true,"path":"api/articles/windows/batch命令.json","keywords":"chriswood blogs sharing","cover":null,"text":"echo &amp; @回显命令：命令行中要不要显示在bat脚本中输入的语句 @ 关闭单行回显 echo off 从下一行开始关闭回显 @echo off 从本行开始关闭回显（一般的脚本都以这个开头） echo on 从下一行开始打开回显 echo 显示当前是echo off 还...","link":"","photos":[],"count_time":{"symbolsCount":"5.1k","symbolsTime":"5 mins."},"categories":[{"name":"batch","slug":"batch","count":1,"path":"api/categories/batch.json"}],"tags":[{"name":"windows","slug":"windows","count":1,"path":"api/tags/windows.json"},{"name":"batch","slug":"batch","count":1,"path":"api/tags/batch.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"kubernetes常用模板","uid":"c6c4eb3658a2985f9be6afa8980c8ae8","slug":"kubernetes/kubernetes常用模板","date":"2023-05-18T06:56:26.000Z","updated":"2023-06-16T01:23:53.390Z","comments":true,"path":"api/articles/kubernetes/kubernetes常用模板.json","keywords":"chriswood blogs sharing","cover":null,"text":"DeploymentDeployment是Kubernetes系统的⼀个核⼼概念，主要职责和RC⼀样的都是保证Pod的数量和健康， 二者⼤部分功能都是完全⼀致，可以看成是⼀个升级版的RC控制器 确保 Pod 数量 确保 Pod 健康 事件和状态查看 回滚 版本记录 暂停和启动 a...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"kubernetes","slug":"kubernetes","count":5,"path":"api/categories/kubernetes.json"}],"tags":[{"name":"kubernetes","slug":"kubernetes","count":5,"path":"api/tags/kubernetes.json"},{"name":"template","slug":"template","count":1,"path":"api/tags/template.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"maven项目pom.xml配置说明","uid":"2af2a4517d6bfc676756f25e15eedeab","slug":"java/maven/maven项目pom-xml配置说明","date":"2023-05-18T05:06:21.000Z","updated":"2023-06-16T01:23:53.386Z","comments":true,"path":"api/articles/java/maven/maven项目pom-xml配置说明.json","keywords":"chriswood blogs sharing","cover":null,"text":"settings.xml 用来设置maven参数的配置文件 settings.xml是maven的全局配置文件。pom.xml文件是所在项目的局部配置 settings.xml中包含本地仓储位置、修改远程仓储服务器、认证信息等配置 https://maven.apache.org...","link":"","photos":[],"count_time":{"symbolsCount":"59k","symbolsTime":"54 mins."},"categories":[{"name":"maven","slug":"maven","count":1,"path":"api/categories/maven.json"}],"tags":[{"name":"Java","slug":"Java","count":2,"path":"api/tags/Java.json"},{"name":"maven","slug":"maven","count":1,"path":"api/tags/maven.json"},{"name":"pom","slug":"pom","count":1,"path":"api/tags/pom.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"EditorConfig配置","uid":"e5462aee6cc573fa0fc698b06c8bed09","slug":"ide/EditorConfig配置","date":"2023-05-18T00:08:20.000Z","updated":"2023-06-16T01:23:53.386Z","comments":true,"path":"api/articles/ide/EditorConfig配置.json","keywords":"chriswood blogs sharing","cover":null,"text":"1 EditorConfig插件https://editorconfig.org/#pre-installed 2 .editorconfig 配置文件 .editorconfig 自定义文件是用来定义编辑器的编码格式规范，编辑器的行为会与 .editorconfig 文件中定义...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"IDE","slug":"IDE","count":1,"path":"api/categories/IDE.json"}],"tags":[{"name":"IDE","slug":"IDE","count":1,"path":"api/tags/IDE.json"},{"name":"EditorConfig","slug":"EditorConfig","count":1,"path":"api/tags/EditorConfig.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"kubernetes安装dashboard","uid":"0ce9642686c176c4110b6a4972f4afa9","slug":"kubernetes/kubernetes安装dashboard","date":"2023-05-17T07:07:11.000Z","updated":"2023-06-16T01:23:53.390Z","comments":true,"path":"api/articles/kubernetes/kubernetes安装dashboard.json","keywords":"chriswood blogs sharing","cover":null,"text":"安装dashboard1.根据recommended.yaml安装 kubectl apply -f https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;kubernetes&#x2F;dashboard&#x2F;v2.7.0&#x...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"kubernetes","slug":"kubernetes","count":5,"path":"api/categories/kubernetes.json"}],"tags":[{"name":"kubernetes","slug":"kubernetes","count":5,"path":"api/tags/kubernetes.json"},{"name":"dashboard","slug":"dashboard","count":1,"path":"api/tags/dashboard.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"kubeadm搭建k8s集群","uid":"669d7131d7ad49abb2aa1f107e0ec654","slug":"kubernetes/kubeadmin搭建k8s","date":"2023-05-16T05:42:11.000Z","updated":"2023-06-16T01:23:53.390Z","comments":true,"path":"api/articles/kubernetes/kubeadmin搭建k8s.json","keywords":"chriswood blogs sharing","cover":null,"text":"环境准备# 临时 systemctl stop firewalld # 永久 systemctl disable firewalld # 永久 sed -i &#39;s&#x2F;enforcing&#x2F;disabled&#x2F;&#39; &#x2F;etc&#x2F...","link":"","photos":[],"count_time":{"symbolsCount":"6.8k","symbolsTime":"6 mins."},"categories":[{"name":"kubernetes","slug":"kubernetes","count":5,"path":"api/categories/kubernetes.json"}],"tags":[{"name":"kubeadm","slug":"kubeadm","count":1,"path":"api/tags/kubeadm.json"},{"name":"kubernetes","slug":"kubernetes","count":5,"path":"api/tags/kubernetes.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SuppressWarnings注解","uid":"dc3f996edbdbecb4bee8138ad43dfb31","slug":"java/annotation/SuppressWarnings注解","date":"2023-04-04T05:25:46.000Z","updated":"2023-06-16T01:23:53.386Z","comments":true,"path":"api/articles/java/annotation/SuppressWarnings注解.json","keywords":"chriswood blogs sharing","cover":null,"text":"SuppressWarnings注解标准用法对应表 关键字 用途 all to suppress all warnings boxing to suppress warnings relative to boxing&#x2F;unboxing operations cast t...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"Java","slug":"Java","count":2,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":2,"path":"api/tags/Java.json"},{"name":"SuppressWarnings","slug":"SuppressWarnings","count":1,"path":"api/tags/SuppressWarnings.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"RedisTemplate的opsFor操作","uid":"9a127567f79009a5dd921fb33be17694","slug":"java/redisson/RedisTemplate的opsFor操作","date":"2023-03-07T02:04:31.000Z","updated":"2023-06-16T01:23:53.390Z","comments":true,"path":"api/articles/java/redisson/RedisTemplate的opsFor操作.json","keywords":"chriswood blogs sharing","cover":null,"text":"一、opsForValueKey-Value操作 1、set(K key, V value)向Redis新增一个key-value，k-v可以是泛型。 redisTemplate.opsForValue().set(obj1,obj2); 2.get(Object key)&#x...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"Redis","slug":"Redis","count":1,"path":"api/categories/Redis.json"}],"tags":[{"name":"Redisson","slug":"Redisson","count":1,"path":"api/tags/Redisson.json"},{"name":"RedisTemplate","slug":"RedisTemplate","count":1,"path":"api/tags/RedisTemplate.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"docker-compose","uid":"9744696a0b3b0998bf3993789981c178","slug":"docker/docker-compose","date":"2023-03-02T02:09:40.000Z","updated":"2023-06-15T06:03:05.000Z","comments":true,"path":"api/articles/docker/docker-compose.json","keywords":"chriswood blogs sharing","cover":null,"text":"环境云服务器centOS 7.6 64位 docker-compose安装curl -L &quot;https:&#x2F;&#x2F;github.com&#x2F;docker&#x2F;compose&#x2F;releases&#x2F;download&#x2F;v2...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"13 mins."},"categories":[{"name":"docker","slug":"docker","count":6,"path":"api/categories/docker.json"}],"tags":[{"name":"docker","slug":"docker","count":5,"path":"api/tags/docker.json"},{"name":"docker-compose","slug":"docker-compose","count":1,"path":"api/tags/docker-compose.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"docker安装及远程CA证书制作","uid":"cebf02140ec9de3ceef8bc16f1ce1f74","slug":"docker/docker安装及CA证书制作","date":"2023-03-01T07:37:24.000Z","updated":"2023-06-15T06:26:11.000Z","comments":true,"path":"api/articles/docker/docker安装及CA证书制作.json","keywords":"chriswood blogs sharing","cover":null,"text":"环境云服务器centOS 7.6 64位 安装步骤docker安装sudo yum install -y yum-utils sudo yum-config-manager --add-repo https:&#x2F;&#x2F;download.docker.com&#x2F...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"docker","slug":"docker","count":6,"path":"api/categories/docker.json"}],"tags":[{"name":"docker","slug":"docker","count":5,"path":"api/tags/docker.json"},{"name":"docker远程CA证书","slug":"docker远程CA证书","count":1,"path":"api/tags/docker远程CA证书.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"docker-repository","uid":"6e09d1f5d84f92c2bc7207691b14094e","slug":"docker/docker-repository","date":"2023-02-09T03:12:06.000Z","updated":"2023-06-16T01:23:53.386Z","comments":true,"path":"api/articles/docker/docker-repository.json","keywords":"chriswood blogs sharing","cover":null,"text":"docker镜像制作alpine_java8_zhv1.0.01.dockerfileFROM openjdk:8-jdk-alpine # 添加timeZone RUN echo &#39;http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;al...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"docker","slug":"docker","count":6,"path":"api/categories/docker.json"}],"tags":[{"name":"docker-repository","slug":"docker-repository","count":1,"path":"api/tags/docker-repository.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"docker镜像构建方式","uid":"05c6b7bccc0f16753e9101299bf620c9","slug":"docker/docker镜像构建方式","date":"2023-02-08T03:04:06.000Z","updated":"2023-06-16T01:23:53.386Z","comments":true,"path":"api/articles/docker/docker镜像构建方式.json","keywords":"chriswood blogs sharing","cover":null,"text":"创建镜像的方法主要有三种： 基于已有镜像的容器创建 基于本地模板导入 基于Dockerfile创建（*推荐） 一、基于容器创建镜像基于已有容器构建镜像主要是通过docker commit命令来构建新的镜像，语法规则如下： docker commit [OPTIONS] CONTA...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"docker","slug":"docker","count":6,"path":"api/categories/docker.json"}],"tags":[{"name":"docker镜像构建","slug":"docker镜像构建","count":1,"path":"api/tags/docker镜像构建.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"springboot日志配置","uid":"6bb5feb5ebe53be9e2c2838a6f221b1e","slug":"springboot/springboot日志配置","date":"2023-02-07T06:59:47.000Z","updated":"2023-06-16T01:23:53.394Z","comments":true,"path":"api/articles/springboot/springboot日志配置.json","keywords":"chriswood blogs sharing","cover":null,"text":"默认日志 Logback默认情况下，Spring Boot会用Logback来记录日志，并用INFO级别输出到控制台。 spring-boot-starter其中包含了 spring-boot-starter-logging，该依赖内容就是 Spring Boot默认的日志框架 ...","link":"","photos":[],"count_time":{"symbolsCount":"18k","symbolsTime":"16 mins."},"categories":[{"name":"springboot","slug":"springboot","count":2,"path":"api/categories/springboot.json"}],"tags":[{"name":"springboot","slug":"springboot","count":2,"path":"api/tags/springboot.json"},{"name":"springboot配置","slug":"springboot配置","count":2,"path":"api/tags/springboot配置.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"docker部署hbase","uid":"f55822a9843defac7c7cd98d8f77df10","slug":"hbase/docker部署hbase","date":"2023-02-06T07:22:50.000Z","updated":"2023-06-16T01:23:53.386Z","comments":true,"path":"api/articles/hbase/docker部署hbase.json","keywords":"chriswood blogs sharing","cover":null,"text":"docker搭建hbase环境Linux系统：centos 7.6 Hbase：harisekhon&#x2F;hbase Hbase1.拉取镜像 并部署启动 方式一 手动分配所有端口 docker run -d -p 2181:2181 \\ -p 8080:8080 -p 80...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"hbase","slug":"hbase","count":1,"path":"api/categories/hbase.json"}],"tags":[{"name":"docker","slug":"docker","count":5,"path":"api/tags/docker.json"},{"name":"hbase","slug":"hbase","count":1,"path":"api/tags/hbase.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"kafka学习","uid":"61a9c9a9f7385f264375e290c4106594","slug":"kafka/kafka学习","date":"2023-02-02T08:21:26.000Z","updated":"2023-06-16T01:23:53.390Z","comments":true,"path":"api/articles/kafka/kafka学习.json","keywords":"chriswood blogs sharing","cover":null,"text":"安装启动ZooKeeper（单机模式）1.下载解压镜像地址下载zookeeper，tar -zxvf 解压至&#x2F;opt2.配置环境变量 vim &#x2F;etc&#x2F;profile export ZOOKEEPER_HOME&#x3D;&#x2F;opt&#x2F...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"kafka","slug":"kafka","count":2,"path":"api/categories/kafka.json"}],"tags":[{"name":"kafka","slug":"kafka","count":2,"path":"api/tags/kafka.json"},{"name":"zookeeper","slug":"zookeeper","count":1,"path":"api/tags/zookeeper.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"docker部署kafka集群","uid":"08e8e341bc5995ad32cb07dac198cc20","slug":"kafka/docker部署kafka集群","date":"2023-02-02T07:28:39.000Z","updated":"2023-06-16T01:23:53.390Z","comments":true,"path":"api/articles/kafka/docker部署kafka集群.json","keywords":"chriswood blogs sharing","cover":null,"text":"docker搭建Zookeeper单机+kafka集群环境Linux系统：centos 7.6Zookeeper：wurstmeister&#x2F;zookeeperKafka：wurstmeister&#x2F;kafka Zookeeper单机docker pull wur...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"kafka","slug":"kafka","count":2,"path":"api/categories/kafka.json"}],"tags":[{"name":"docker","slug":"docker","count":5,"path":"api/tags/docker.json"},{"name":"kafka","slug":"kafka","count":2,"path":"api/tags/kafka.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"近代史","uid":"16f10664209103c56b5fcc131366977c","slug":"master/Politics/近代史","date":"2022-10-29T14:08:50.000Z","updated":"2023-06-16T01:23:53.390Z","comments":true,"path":"api/articles/master/Politics/近代史.json","keywords":"chriswood blogs sharing","cover":null,"text":"近代史重大纪念意义的历史事件 中国共产主义青年团成立100周年（1922-2022） 《在延安文艺座谈会上的讲话》《整顿党的作风》《反对党八股》发表80周年（1942-2022） 邓小平南方谈话、十四大召开30周年（1992-2022） 中美上海公报、中日邦交正常化50周年（19...","link":"","photos":[],"count_time":{"symbolsCount":"35k","symbolsTime":"31 mins."},"categories":[{"name":"考研政治","slug":"考研政治","count":4,"path":"api/categories/考研政治.json"}],"tags":[{"name":"考研政治","slug":"考研政治","count":4,"path":"api/tags/考研政治.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"思修法基","uid":"ecf4d918a8a59daf742ceb61bc860e91","slug":"master/Politics/思修法基","date":"2022-10-25T11:59:59.000Z","updated":"2023-06-16T01:23:53.390Z","comments":true,"path":"api/articles/master/Politics/思修法基.json","keywords":"chriswood blogs sharing","cover":null,"text":"思修法基绪论一、我们处于中国特色社会主义新时代二、时代新人要以民族复兴为己任 1.做有理想有本领有担当的时代新人 要有崇高的理想信念，牢记使命，自信自励 要有高强的本领才干，勤奋学习，全面发展 要天下兴亡匹夫有责的担当精神，讲求奉献，实干进取 2.提升思想道德素质与法治素养 第一...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"12 mins."},"categories":[{"name":"考研政治","slug":"考研政治","count":4,"path":"api/categories/考研政治.json"}],"tags":[{"name":"考研政治","slug":"考研政治","count":4,"path":"api/tags/考研政治.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"毛中特","uid":"520d9ef32d48d23e17dd506965fbbd26","slug":"master/Politics/毛中特","date":"2022-10-23T11:35:25.000Z","updated":"2023-06-16T01:23:53.390Z","comments":true,"path":"api/articles/master/Politics/毛中特.json","keywords":"chriswood blogs sharing","cover":null,"text":"毛中特1 毛泽东思想及其历史地位一、毛泽东思想的形成和发展毛泽东思想形成发展的历史条件时代背景：帝国主义战争和无产阶级革命 实践基础： 中共的革命实践和建设实践 毛泽东思想形成发展的过程1.初步形成：农村包围城市、武装夺取政权的思想——土地革命战争时期 1927-1937年 逐步...","link":"","photos":[],"count_time":{"symbolsCount":"24k","symbolsTime":"22 mins."},"categories":[{"name":"考研政治","slug":"考研政治","count":4,"path":"api/categories/考研政治.json"}],"tags":[{"name":"考研政治","slug":"考研政治","count":4,"path":"api/tags/考研政治.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"马克思主义基本原理","uid":"0c2bac51f883840de61216bf9cb02da8","slug":"master/Politics/马克思主义基本原理","date":"2022-10-21T13:19:36.000Z","updated":"2023-06-16T01:23:53.394Z","comments":true,"path":"api/articles/master/Politics/马克思主义基本原理.json","keywords":"chriswood blogs sharing","cover":null,"text":"马克思主义基本原理导论（8&#x2F;1）第一章马克思主义的创立和发展什么是马克思主义 马克思主义是由马克思、恩格斯创立并为后继者所不断发展的科学理论体系，是关于自然、社会人类思维发展一般规律的学说，是关于社会主义必然代替资本主义、最终实现共产主义的学说，是关于无产阶级解放、全人...","link":"","photos":[],"count_time":{"symbolsCount":"33k","symbolsTime":"30 mins."},"categories":[{"name":"考研政治","slug":"考研政治","count":4,"path":"api/categories/考研政治.json"}],"tags":[{"name":"考研政治","slug":"考研政治","count":4,"path":"api/tags/考研政治.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"英语词根词缀整理","uid":"a2fa7d6a410e794ddee545d12d179c3a","slug":"master/English/英语词根词缀整理","date":"2022-10-19T23:49:39.000Z","updated":"2023-06-16T01:23:53.390Z","comments":true,"path":"api/articles/master/English/英语词根词缀整理.json","keywords":"chriswood blogs sharing","cover":null,"text":"ag ＝to do 做 做；代理；引导-ent n. ＝person 人 agent ［ag ＝to do 做；-ent n. ＝person 人→“person who does 办事者”→］ n. person who works for another person or ...","link":"","photos":[],"count_time":{"symbolsCount":"9.1k","symbolsTime":"8 mins."},"categories":[{"name":"考研英语","slug":"考研英语","count":1,"path":"api/categories/考研英语.json"}],"tags":[{"name":"考研英语","slug":"考研英语","count":1,"path":"api/tags/考研英语.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Nginx日志按天切割","uid":"2daf5b5a74686be842f9f5c6d964e1fb","slug":"nginx/Nginx日志按天切割","date":"2022-10-18T08:20:26.000Z","updated":"2023-06-16T01:23:53.394Z","comments":true,"path":"api/articles/nginx/Nginx日志按天切割.json","keywords":"chriswood blogs sharing","cover":null,"text":"Nginx日志按天切割Nginx默认的发布不支持对日志文件按日期或者按日志量来分割，此处实现的功能：在每天凌晨00:00把前⼀天的Nginx⽇志（access.log和error.log）分别重命名为access-yyyy-mm-dd.log和log-xxxx-xx-xx.log...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"Nginx","slug":"Nginx","count":2,"path":"api/categories/Nginx.json"}],"tags":[{"name":"Nginx","slug":"Nginx","count":2,"path":"api/tags/Nginx.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"开发环境配置","uid":"f608ca61f1cd18e3f4abde5dcaf441ba","slug":"common/开发环境配置","date":"2022-10-16T02:36:44.000Z","updated":"2023-06-16T01:23:53.386Z","comments":true,"path":"api/articles/common/开发环境配置.json","keywords":"chriswood blogs sharing","cover":null,"text":"开发环境配置篇nodewindowsnvm for windows GitHub地址: https://github.com/coreybutler/nvm-windows/releases推荐使用nvm-setup.exe 自动创建环境变量NVM_HOME和NVM_SYMLIN...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"Common","slug":"Common","count":1,"path":"api/categories/Common.json"}],"tags":[{"name":"python","slug":"python","count":1,"path":"api/tags/python.json"},{"name":"node","slug":"node","count":1,"path":"api/tags/node.json"},{"name":"java","slug":"java","count":1,"path":"api/tags/java.json"},{"name":"golang","slug":"golang","count":1,"path":"api/tags/golang.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"docker环境部署集群前后端分离项目","uid":"fd6db9879e8a7f6e92c3104daa24218a","slug":"docker/docker环境部署集群前后端分离项目","date":"2022-10-12T08:05:29.000Z","updated":"2023-06-16T01:23:53.386Z","comments":true,"path":"api/articles/docker/docker环境部署集群前后端分离项目.json","keywords":"chriswood blogs sharing","cover":null,"text":"docker环境部署集群前后端分离项目一、基础1.Docker虚拟机常用命令1.先更新软件包 scriptyum -y update 2.安装Docker虚拟机 scriptyum install -y docker 3.运行、重启、关闭Docker虚拟机 scriptservi...","link":"","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[{"name":"docker","slug":"docker","count":6,"path":"api/categories/docker.json"}],"tags":[{"name":"docker环境部署","slug":"docker环境部署","count":1,"path":"api/tags/docker环境部署.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Java高并发专题-JUC线程池","uid":"ab71b7b05749a5527c735a9fb6d5af98","slug":"java/concurrent/Java高并发专题-JUC线程池","date":"2022-10-08T08:55:43.000Z","updated":"2023-06-16T01:23:53.386Z","comments":true,"path":"api/articles/java/concurrent/Java高并发专题-JUC线程池.json","keywords":"chriswood blogs sharing","cover":null,"text":"线程池Executor框架接口 Executors.newCachedThreadPool() 创建缓存线程池public class ThreadPoolExample1 &#123; public static void main(String[] args) &#123; ...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"Java","slug":"Java","count":2,"path":"api/categories/Java.json"}],"tags":[{"name":"Java高并发","slug":"Java高并发","count":1,"path":"api/tags/Java高并发.json"},{"name":"JUC","slug":"JUC","count":1,"path":"api/tags/JUC.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"springboot配置文件","uid":"38ca70cafbfd87b7f0418630bd7d0ad1","slug":"springboot/springboot配置文件","date":"2022-10-08T07:55:43.000Z","updated":"2023-02-07T07:03:00.000Z","comments":true,"path":"api/articles/springboot/springboot配置文件.json","keywords":"chriswood blogs sharing","cover":null,"text":"springboot配置文件在springboot 项目中一般默认的配置文件是application.properties,但是实际项目中我们一般会使用application.yml文件 yml文件读取顺序存放目录SpringBoot配置文件默认可以放到以下目录中，可以自动读取到...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"springboot","slug":"springboot","count":2,"path":"api/categories/springboot.json"}],"tags":[{"name":"springboot","slug":"springboot","count":2,"path":"api/tags/springboot.json"},{"name":"springboot配置","slug":"springboot配置","count":2,"path":"api/tags/springboot配置.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Mysql基础","uid":"e92c64341ee2ef385eda6a1d1f832be9","slug":"mysql/base/Mysql基础","date":"2022-10-01T04:55:09.000Z","updated":"2023-06-16T01:23:53.394Z","comments":true,"path":"api/articles/mysql/base/Mysql基础.json","keywords":"chriswood blogs sharing","cover":null,"text":"Mysql常见数据库 MYSQL：开源免费的数据库，小型的数据库.已经被Oracle收购了.MySQL6.x版本也开始收费。 Oracle：收费的大型数据库，Oracle公司的产品。Oracle收购SUN公司，收购MYSQL。 DB2 ：IBM公司的数据库产品,收费的。常应用在银...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"Mysql","slug":"Mysql","count":1,"path":"api/categories/Mysql.json"}],"tags":[{"name":"Mysql","slug":"Mysql","count":1,"path":"api/tags/Mysql.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Node基础十二","uid":"c5c39a45409b6c5284d037b63eb17322","slug":"node/base/Node基础十二","date":"2022-10-01T04:32:50.000Z","updated":"2023-06-16T01:23:53.394Z","comments":true,"path":"api/articles/node/base/Node基础十二.json","keywords":"chriswood blogs sharing","cover":[],"text":"十二.数据库MySQL认识数据库1.1. 为什么要使用数据库任何的软件系统都需要存放大量的数据，这些数据通常是非常复杂和庞大的： 比如用户信息包括姓名、年龄、性别、地址、身份证号、出生日期等等； 比如商品信息包括商品的名称、描述、价格（原价）、分类标签、商品图片等等； 比如歌曲信...","link":"","photos":[],"count_time":{"symbolsCount":"39k","symbolsTime":"35 mins."},"categories":[{"name":"Node","slug":"Node","count":12,"path":"api/categories/Node.json"}],"tags":[{"name":"Node Node基础系列","slug":"Node-Node基础系列","count":12,"path":"api/tags/Node-Node基础系列.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Node基础十一","uid":"52153482f8bb5490978c774dade2918c","slug":"node/base/Node基础十一","date":"2022-10-01T04:31:50.000Z","updated":"2023-06-16T01:23:53.394Z","comments":true,"path":"api/articles/node/base/Node基础十一.json","keywords":"chriswood blogs sharing","cover":[],"text":"十一.koa开发web服务器Koa初体验1.1. 认识Koa前面我们已经学习了express，另外一个非常流行的Node Web服务器框架就是Koa。 Koa官方的介绍： koa：next generation web framework for node.js； koa：nod...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"Node","slug":"Node","count":12,"path":"api/categories/Node.json"}],"tags":[{"name":"Node Node基础系列","slug":"Node-Node基础系列","count":12,"path":"api/tags/Node-Node基础系列.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Node基础十","uid":"c2943d2fce9c96d8a973d43b491afc6a","slug":"node/base/Node基础十","date":"2022-10-01T04:30:50.000Z","updated":"2023-06-16T01:23:53.394Z","comments":true,"path":"api/articles/node/base/Node基础十.json","keywords":"chriswood blogs sharing","cover":[],"text":"十.express开发web服务器Express初体验1.1. 认识Web框架前面我们已经学习了使用http内置模块来搭建Web服务器，为什么还要使用框架？ 原生http在进行很多处理时，会较为复杂； 有URL判断、Method判断、参数处理、逻辑代码处理等，都需要我们自己来处理...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"Node","slug":"Node","count":12,"path":"api/categories/Node.json"}],"tags":[{"name":"Node Node基础系列","slug":"Node-Node基础系列","count":12,"path":"api/tags/Node-Node基础系列.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Node基础九","uid":"b171402bc406b8e8ddf1dcd5f712137e","slug":"node/base/Node基础九","date":"2022-10-01T04:29:50.000Z","updated":"2023-06-16T01:23:53.394Z","comments":true,"path":"api/articles/node/base/Node基础九.json","keywords":"chriswood blogs sharing","cover":[],"text":"九.http开发web服务器 什么是Web服务器？ 当应用程序（客户端）需要某一个资源时，可以向一个台服务器，通过Http请求获取到这个资源；提供服务器的这个服务器，就是一个Web服务器； Web服务器 目前有很多开源的Web服务器：Nginx、Apache（静态）、Apache...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"Node","slug":"Node","count":12,"path":"api/categories/Node.json"}],"tags":[{"name":"Node Node基础系列","slug":"Node-Node基础系列","count":12,"path":"api/tags/Node-Node基础系列.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Node基础八","uid":"adefcce4d4f2d80811a82b2ac8c91417","slug":"node/base/Node基础八","date":"2022-10-01T04:28:50.000Z","updated":"2023-06-16T01:23:53.394Z","comments":true,"path":"api/articles/node/base/Node基础八.json","keywords":"chriswood blogs sharing","cover":[],"text":"八. 深入事件循环事件循环是什么？事实上我把事件循环理解成我们编写的JavaScript和浏览器或者Node之间的一个桥梁。 浏览器的事件循环是一个我们编写的JavaScript代码和浏览器API调用(setTimeout&#x2F;AJAX&#x2F;监听事件等)的一个桥梁, ...","link":"","photos":[],"count_time":{"symbolsCount":"9.1k","symbolsTime":"8 mins."},"categories":[{"name":"Node","slug":"Node","count":12,"path":"api/categories/Node.json"}],"tags":[{"name":"Node Node基础系列","slug":"Node-Node基础系列","count":12,"path":"api/tags/Node-Node基础系列.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Node基础七","uid":"9cc987ed6425e4445f09c1cfe9b13abf","slug":"node/base/Node基础七","date":"2022-10-01T04:27:50.000Z","updated":"2023-06-16T01:23:53.394Z","comments":true,"path":"api/articles/node/base/Node基础七.json","keywords":"chriswood blogs sharing","cover":[],"text":"七.脚手架开发目前前端工程化开发过程中，我们会使用各种各样的脚手架，vue-cli、create-react-app，当然也包括webpack、gulp、rollup、vite等工具。 这些工具是怎么开发出来的呢？当我们执行一个命令时，它们做了什么事情？是怎么样完成的一系列操作？...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"Node","slug":"Node","count":12,"path":"api/categories/Node.json"}],"tags":[{"name":"Node Node基础系列","slug":"Node-Node基础系列","count":12,"path":"api/tags/Node-Node基础系列.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Node基础六","uid":"2625758c12baaaa025e1a25440bca02f","slug":"node/base/Node基础六","date":"2022-10-01T04:26:50.000Z","updated":"2023-06-16T01:23:53.394Z","comments":true,"path":"api/articles/node/base/Node基础六.json","keywords":"chriswood blogs sharing","cover":[],"text":"六.Buffer的使用1.1. 数据的二进制计算机中所有的内容：文字、数字、图片、音频、视频最终都会使用二进制来表示。 JavaScript可以直接去处理非常直观的数据：比如字符串，我们通常展示给用户的也是这些内容。 不对啊，JavaScript不是也可以处理图片吗？ 事实上在网...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"Node","slug":"Node","count":12,"path":"api/categories/Node.json"}],"tags":[{"name":"Node Node基础系列","slug":"Node-Node基础系列","count":12,"path":"api/tags/Node-Node基础系列.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Node基础五","uid":"f31c41ff35acbf9aa56d10f7617b9f93","slug":"node/base/Node基础五","date":"2022-10-01T04:25:11.000Z","updated":"2023-06-16T01:23:53.394Z","comments":true,"path":"api/articles/node/base/Node基础五.json","keywords":"chriswood blogs sharing","cover":[],"text":"五.npm你不知道的细节1.1. 认识npm我们已经学习了在JavaScript中可以通过模块化的方式将代码划分成一个个小的结构： 在以后的开发中我们就可以通过模块化的方式来封装自己的代码，并且封装成一个工具； 这个工具我们可以让同事通过导入的方式来使用，甚至你可以分享给世界各地...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"Node","slug":"Node","count":12,"path":"api/categories/Node.json"}],"tags":[{"name":"Node Node基础系列","slug":"Node-Node基础系列","count":12,"path":"api/tags/Node-Node基础系列.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Node基础四","uid":"e9d3cfba4c19a66c9a7d2ec6535dbb77","slug":"node/base/Node基础四","date":"2022-10-01T04:24:10.000Z","updated":"2023-06-16T01:23:53.394Z","comments":true,"path":"api/articles/node/base/Node基础四.json","keywords":"chriswood blogs sharing","cover":null,"text":"四.常用内置模块1.1. 认识path模块path模块用于对路径和文件进行处理，提供了很多好用的方法。 并且我们知道在Mac OS、Linux和window上的路径是不一样的 window上会使用 \\或者 \\\\ 来作为文件路径的分隔符，当然目前也支持 /； 在Mac OS、Lin...","link":"","photos":[],"count_time":{"symbolsCount":"8.4k","symbolsTime":"8 mins."},"categories":[{"name":"Node","slug":"Node","count":12,"path":"api/categories/Node.json"}],"tags":[{"name":"Node Node基础系列","slug":"Node-Node基础系列","count":12,"path":"api/tags/Node-Node基础系列.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Node基础三","uid":"4d3281e0b26c044e36154a269947cf99","slug":"node/base/Node基础三","date":"2022-10-01T04:23:22.000Z","updated":"2023-06-16T01:23:53.394Z","comments":true,"path":"api/articles/node/base/Node基础三.json","keywords":"chriswood blogs sharing","cover":[],"text":"三 . 掌握前端模块化1.1. JavaScript设计缺陷那么，到底什么是模块化开发呢？ 事实上模块化开发最终的目的是将程序划分成一个个小的结构； 这个结构中编写属于自己的逻辑代码，有自己的作用域，不会影响到其他的结构； 这个结构可以将自己希望暴露的变量、函数、对象等导出给其结...","link":"","photos":[],"count_time":{"symbolsCount":"18k","symbolsTime":"16 mins."},"categories":[{"name":"Node","slug":"Node","count":12,"path":"api/categories/Node.json"}],"tags":[{"name":"Node Node基础系列","slug":"Node-Node基础系列","count":12,"path":"api/tags/Node-Node基础系列.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Node基础二","uid":"a6a1fb5bcb751ccc4e9548f88f960a7a","slug":"node/base/Node基础二","date":"2022-10-01T04:06:20.000Z","updated":"2023-06-16T01:23:53.394Z","comments":true,"path":"api/articles/node/base/Node基础二.json","keywords":"chriswood blogs sharing","cover":[],"text":"二.node基础1.1. JavaScript文件执行如果我们编写一个js文件，里面存放JavaScript代码，如何来执行它呢？ &#x2F;&#x2F; 1.直接打印一段文字 console.log(&quot;我是一段JavaScript代码&quot;); &#x2F;&...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"Node","slug":"Node","count":12,"path":"api/categories/Node.json"}],"tags":[{"name":"Node Node基础系列","slug":"Node-Node基础系列","count":12,"path":"api/tags/Node-Node基础系列.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Node基础一","uid":"16ea75a74e45c427c7de22a19d8e1e05","slug":"node/base/Node基础一","date":"2022-09-30T15:33:43.000Z","updated":"2023-06-16T01:23:53.394Z","comments":true,"path":"api/articles/node/base/Node基础一.json","keywords":"chriswood blogs sharing","cover":[],"text":"一.JavaScript运行原理1.1. Atwood定律官方对Node.js的定义： Node.js是一个基于V8 JavaScript引擎的JavaScript运行时环境。 什么是JavaScript运行环境？ 为什么JavaScript需要特别的运行环境呢？ 什么又是Jav...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"Node","slug":"Node","count":12,"path":"api/categories/Node.json"}],"tags":[{"name":"Node Node基础系列","slug":"Node-Node基础系列","count":12,"path":"api/tags/Node-Node基础系列.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Nginx常用操作及配置","uid":"18dd7f629894be8963e8c1c6b1ef8456","slug":"nginx/Nginx常用操作及配置","date":"2022-09-30T15:24:15.000Z","updated":"2023-03-06T01:53:15.000Z","comments":true,"path":"api/articles/nginx/Nginx常用操作及配置.json","keywords":"chriswood blogs sharing","cover":null,"text":"Nginx常用操作及配置常用操作#强制停止Nginx kill -9 nginx start nginx nginx -s quit nginx -s reload 常见配置#指定运行worker进程的用户和组 user nginx; #指定nginx守护进程的pid文件 pid...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"Nginx","slug":"Nginx","count":2,"path":"api/categories/Nginx.json"}],"tags":[{"name":"Nginx","slug":"Nginx","count":2,"path":"api/tags/Nginx.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}],"categories":19,"tags":71,"word_count":"686k","post_count":46}