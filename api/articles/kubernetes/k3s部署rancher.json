{"title":"k3s部署rancher","uid":"ed36a2a5be80ea11d6c25858e6e2bac9","slug":"kubernetes/k3s部署rancher","date":"2023-06-15T00:50:21.000Z","updated":"2023-07-10T01:47:10.615Z","comments":true,"path":"api/articles/kubernetes/k3s部署rancher.json","keywords":"chriswood blogs sharing","cover":null,"content":"<h2 id=\"简易版\"><a href=\"#简易版\" class=\"headerlink\" title=\"简易版\"></a>简易版</h2><p>rancher版本2.7.4</p>\n<h4 id=\"部署k3s-server节点\"><a href=\"#部署k3s-server节点\" class=\"headerlink\" title=\"部署k3s server节点\"></a>部署k3s server节点</h4><p>如果是windows环境，推荐使用k3d在docker中安装k3s</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">k3d cluster create --config local-k3s.yaml</code></pre>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"># k3d configuration file, saved as e.g. &#x2F;home&#x2F;me&#x2F;myk3dcluster.yaml\napiVersion: k3d.io&#x2F;v1alpha5 # this will change in the future as we make everything more stable\nkind: Simple # internally, we also have a Cluster config, which is not yet available externally\nmetadata:\n  name: local-k3s # name that you want to give to your cluster (will still be prefixed with &#96;k3d-&#96;)\nservers: 1 # same as &#96;--servers 1&#96;\nagents: 2 # same as &#96;--agents 2&#96;\nkubeAPI: # same as &#96;--api-port myhost.my.domain:6445&#96; (where the name would resolve to 127.0.0.1)\n  #host: &quot;myhost.my.domain&quot; # important for the &#96;server&#96; setting in the kubeconfig\n  hostIP: &quot;127.0.0.1&quot; # where the Kubernetes API will be listening on\n  hostPort: &quot;6443&quot; # where the Kubernetes API listening port will be mapped to on your host system\nimage: rancher&#x2F;k3s:v1.21.14-k3s1 # same as &#96;--image rancher&#x2F;k3s:v1.20.4-k3s1&#96;\nnetwork: k3s-net # same as &#96;--network my-custom-net&#96;\nports:\n  - port: 8080:80 # same as &#96;--port &#39;8080:80@loadbalancer&#39;&#96;\n    nodeFilters:\n      - loadbalancer\n  - port: 8443:443 # same as &#96;--port &#39;8080:80@loadbalancer&#39;&#96;\n    nodeFilters:\n      - loadbalancer\noptions:\n  k3d: # k3d runtime settings\n    wait: true # wait for cluster to be usable before returining; same as &#96;--wait&#96; (default: true)\n    timeout: &quot;60s&quot; # wait timeout before aborting; same as &#96;--timeout 60s&#96;\n    disableLoadbalancer: false # same as &#96;--no-lb&#96;\n    disableImageVolume: false # same as &#96;--no-image-volume&#96;\n    disableRollback: false # same as &#96;--no-Rollback&#96;\n    loadbalancer:\n      configOverrides:\n        - settings.workerConnections&#x3D;2048\n  k3s: # options passed on to K3s itself\n    extraArgs: # additional arguments passed to the &#96;k3s server|agent&#96; command; same as &#96;--k3s-arg&#96;\n      - arg: --disable&#x3D;traefik  #server disable traefik\n        nodeFilters:\n          - server:*\n    nodeLabels:\n      - label: role&#x3D;server # same as &#96;--k3s-node-label &#39;role&#x3D;server@agent:*&#39;&#96; -&gt; this results in a Kubernetes node label\n        nodeFilters:\n          - server:*\n      - label: type&#x3D;master\n        nodeFilters:\n          - server:0\n      - label: role&#x3D;agent # same as &#96;--k3s-node-label &#39;role&#x3D;agent@agent:*&#39;&#96; -&gt; this results in a Kubernetes node label\n        nodeFilters:\n          - agent:*\n      - label: type&#x3D;master\n        nodeFilters:\n          - agent:0\n  kubeconfig:\n    updateDefaultKubeconfig: true # add new cluster to your default Kubeconfig; same as &#96;--kubeconfig-update-default&#96; (default: true)\n    switchCurrentContext: true # also set current-context to the new cluster&#39;s context; same as &#96;--kubeconfig-switch-context&#96; (default: true)\n# k3d cluster create --api-port 6443 -p &quot;9080:80@loadbalancer&quot;  -p &quot;9443:443@loadbalancer&quot; --agents 2 --k3s-arg &#39;--disable&#x3D;traefik@server:*&#39;</code></pre>\n<p>linux环境直接使用官网方式</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl stop firewalld\nsystemctl disable firewalld\nsetenforce 0\nsed -i &#39;s&#x2F;SELINUX&#x3D;enforcing&#x2F;SELINUX&#x3D;disabled&#x2F;&#39; &#x2F;etc&#x2F;selinux&#x2F;config\n\ncurl -sfL https:&#x2F;&#x2F;rancher-mirror.rancher.cn&#x2F;k3s&#x2F;k3s-install.sh | INSTALL_K3S_MIRROR&#x3D;cn INSTALL_K3S_VERSION&#x3D;v1.21.14+k3s1 sh -</code></pre>\n<h4 id=\"卸载k3s\"><a href=\"#卸载k3s\" class=\"headerlink\" title=\"卸载k3s\"></a>卸载k3s</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 停止k3s\n&#x2F;usr&#x2F;local&#x2F;bin&#x2F;k3s-killall.sh\n# 重启k3s\nsystemctl restart k3s\n# 卸载k3s\n&#x2F;usr&#x2F;local&#x2F;bin&#x2F;k3s-uninstall.sh</code></pre>\n<h4 id=\"安装helm\"><a href=\"#安装helm\" class=\"headerlink\" title=\"安装helm\"></a>安装helm</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://helm.sh/docs/intro/install/\">https://helm.sh/docs/intro/install/</a><br><a href=\"https://github.com/helm/helm/releases\">https://github.com/helm/helm/releases</a></p></blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">export KUBECONFIG&#x3D;&#x2F;etc&#x2F;rancher&#x2F;k3s&#x2F;k3s.yaml\ncurl -L -o helm-v3.12.0-linux-amd64.tar.gz https:&#x2F;&#x2F;get.helm.sh&#x2F;helm-v3.12.0-linux-amd64.tar.gz\ntar -zxvf helm-v3.12.0-linux-amd64.tar.gz\nmv linux-amd64&#x2F;helm &#x2F;usr&#x2F;local&#x2F;bin&#x2F;helm</code></pre>\n<h4 id=\"安装cert-manager\"><a href=\"#安装cert-manager\" class=\"headerlink\" title=\"安装cert-manager\"></a>安装cert-manager</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm repo add jetstack https:&#x2F;&#x2F;charts.jetstack.io\nhelm repo update\nkubectl apply -f https:&#x2F;&#x2F;github.com&#x2F;cert-manager&#x2F;cert-manager&#x2F;releases&#x2F;download&#x2F;v1.11.0&#x2F;cert-manager.crds.yaml\n\nhelm install cert-manager jetstack&#x2F;cert-manager \\\n  --namespace cert-manager \\\n  --create-namespace \\\n  --version v1.11.0\n#helm install cert-manager jetstack&#x2F;cert-manager --namespace cert-manager --create-namespace --version v1.11.0</code></pre>\n<h4 id=\"安装rancher\"><a href=\"#安装rancher\" class=\"headerlink\" title=\"安装rancher\"></a>安装rancher</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm repo add rancher-stable https:&#x2F;&#x2F;releases.rancher.com&#x2F;server-charts&#x2F;stable\nhelm repo update\n\nhelm install rancher rancher-latest&#x2F;rancher \\\n  --namespace cattle-system \\\n  --create-namespace \\\n  --set hostname&#x3D;&lt;IP_OF_LINUX_NODE&gt;.sslip.io \\\n  --set replicas&#x3D;1 \\\n  --set bootstrapPassword&#x3D;&lt;PASSWORD_FOR_RANCHER_ADMIN&gt;\n#helm install rancher rancher-stable&#x2F;rancher --version 2.7.4 --namespace cattle-system --create-namespace --set hostname&#x3D;rancher.taotaozn.com --set replicas&#x3D;1</code></pre>\n<h4 id=\"卸载rancher\"><a href=\"#卸载rancher\" class=\"headerlink\" title=\"卸载rancher\"></a>卸载rancher</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">helm uninstall rancher -n cattle-system\nhelm uninstall fleet-agent-local -n cattle-fleet-local-system\nhelm uninstall fleet-crd -n cattle-fleet-system</code></pre>\n<h2 id=\"helm常用charts仓库\"><a href=\"#helm常用charts仓库\" class=\"headerlink\" title=\"helm常用charts仓库\"></a>helm常用charts仓库</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#bitnami: \nhttps:&#x2F;&#x2F;charts.bitnami.com&#x2F;bitnami\n#kubeapps: \nhttps:&#x2F;&#x2F;charts.appscode.com&#x2F;stable&#x2F;\n#阿里云镜像\nhttps:&#x2F;&#x2F;kubernetes.oss-cn-hangzhou.aliyuncs.com&#x2F;charts\n#微软镜像\nhttp:&#x2F;&#x2F;mirror.azure.cn&#x2F;kubernetes&#x2F;charts</code></pre>\n","text":"简易版rancher版本2.7.4 部署k3s server节点如果是windows环境，推荐使用k3d在docker中安装k3s k3d cluster create --config local-k3s.yaml # k3d configuration file, saved...","link":"","photos":[],"count_time":{"symbolsCount":"5.5k","symbolsTime":"5 mins."},"categories":[{"name":"rancher","slug":"rancher","count":1,"path":"api/categories/rancher.json"}],"tags":[{"name":"rancher","slug":"rancher","count":1,"path":"api/tags/rancher.json"},{"name":"k3s","slug":"k3s","count":1,"path":"api/tags/k3s.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%80%E6%98%93%E7%89%88\"><span class=\"toc-text\">简易版</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%83%A8%E7%BD%B2k3s-server%E8%8A%82%E7%82%B9\"><span class=\"toc-text\">部署k3s server节点</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8D%B8%E8%BD%BDk3s\"><span class=\"toc-text\">卸载k3s</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85helm\"><span class=\"toc-text\">安装helm</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85cert-manager\"><span class=\"toc-text\">安装cert-manager</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85rancher\"><span class=\"toc-text\">安装rancher</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8D%B8%E8%BD%BDrancher\"><span class=\"toc-text\">卸载rancher</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#helm%E5%B8%B8%E7%94%A8charts%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">helm常用charts仓库</span></a></li></ol>","author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Linux-iptables学习","uid":"8fa7fefe6aa0f69b9eef61d9ade88e6e","slug":"linux/Linux-iptables学习","date":"2023-06-15T05:43:19.000Z","updated":"2023-07-10T01:47:10.615Z","comments":true,"path":"api/articles/linux/Linux-iptables学习.json","keywords":"chriswood blogs sharing","cover":null,"text":"iptables介绍iptables组成Linux平台下的包过滤防火墙，与大多数的Linux软件一样，这个包过滤防火墙是免费的，在安装系统的时候就已经自带 基础概念1.规则（rules）规则（rules）其实就是网络管理员预定义的条件，规则一般的定义为“如果数据包头符合这样的条件...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"15 mins."},"categories":[{"name":"Linux","slug":"Linux","count":2,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":2,"path":"api/tags/Linux.json"},{"name":"iptables","slug":"iptables","count":1,"path":"api/tags/iptables.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"shell脚本编辑","uid":"26dd4557ea6b40d458e20ec9154add38","slug":"linux/shell脚本编辑","date":"2023-06-09T06:44:00.000Z","updated":"2023-07-10T01:47:10.615Z","comments":true,"path":"api/articles/linux/shell脚本编辑.json","keywords":"chriswood blogs sharing","cover":null,"text":"shell 脚本语法1.demo.sh#!&#x2F;bin&#x2F;bash echo hello world! 给shell脚本可运行权限 chmod +x demo.sh 2.read命令#!&#x2F;bin&#x2F;bash echo &quot;please in...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"shell","slug":"shell","count":1,"path":"api/categories/shell.json"}],"tags":[{"name":"shell","slug":"shell","count":1,"path":"api/tags/shell.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}