{"title":"kubeadm搭建k8s集群","uid":"669d7131d7ad49abb2aa1f107e0ec654","slug":"kubernetes/kubeadmin搭建k8s","date":"2023-05-16T05:42:11.000Z","updated":"2023-07-04T07:53:31.839Z","comments":true,"path":"api/articles/kubernetes/kubeadmin搭建k8s.json","keywords":"chriswood blogs sharing","cover":null,"content":"<h3 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 临时\nsystemctl stop firewalld\n# 永久\nsystemctl disable firewalld\n# 永久\nsed -i &#39;s&#x2F;enforcing&#x2F;disabled&#x2F;&#39; &#x2F;etc&#x2F;selinux&#x2F;config \n# 临时\nsetenforce 0\n# 临时\nswapoff -a \n# 永久;把文件中带有swap的行注释\nvim &#x2F;etc&#x2F;fstab \n# 添加主机名与IP对应关系\nhostnamectl set-hostname &lt;hostname&gt;\n192.168.0.143  hostnamectl set-hostname master\n192.168.0.142  hostnamectl set-hostname node1\n192.168.0.141  hostnamectl set-hostname node2\ncat &gt;&gt; &#x2F;etc&#x2F;hosts &lt;&lt; EOF\n192.168.0.143\tmaster\t\n192.168.0.142\tnode1\t\n192.168.0.141\tnode2\t\nEOF\n#配置内核参数\ncat &gt; &#x2F;etc&#x2F;sysctl.d&#x2F;k8s.conf &lt;&lt;EOF\nnet.bridge.bridge-nf-call-ip6tables &#x3D; 1\nnet.bridge.bridge-nf-call-iptables &#x3D; 1\nEOF\nsysctl --system\n#配置时间同步\ndate \nyum install -y ntpdate\n# 同步最新时间\nntpdate time.windows.com </code></pre>\n\n<h3 id=\"安裝步骤\"><a href=\"#安裝步骤\" class=\"headerlink\" title=\"安裝步骤\"></a>安裝步骤</h3><p>1.在所有节点上安装Docker和kubeadm</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo yum update -y\nsudo yum install -y yum-utils\nsudo yum-config-manager --add-repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo\nsudo yum install -y docker-ce docker-ce-cli containerd.io\nsystemctl enable docker &amp;&amp; systemctl start docker\nvim &#x2F;etc&#x2F;docker&#x2F;daemon.json\n&#123;\n  &quot;exec-opts&quot;: [&quot;native.cgroupdriver&#x3D;systemd&quot;],\n  &quot;registry-mirrors&quot;:[&quot;https:&#x2F;&#x2F;08jm2d89.mirror.aliyuncs.com&quot;,&quot;https:&#x2F;&#x2F;registry.docker-cn.com&quot;]\n&#125;\nsystemctl daemon-reload\nsystemctl restart docker\n\n#containerd\n### 生成配置文件\ncontainerd config default &gt; &#x2F;etc&#x2F;containerd&#x2F;config.toml\n### 修改配置文件\nsed -i &#39;s#SystemdCgroup &#x3D; false#SystemdCgroup &#x3D; true#g&#39; &#x2F;etc&#x2F;containerd&#x2F;config.toml\n# containerd sandbox_image使用阿里镜像\nsed -i &#39;s#sandbox_image &#x3D; &quot;registry.k8s.io&#x2F;pause:3.6&quot;#sandbox_image&#x3D;&quot;registry.cn-hangzhou.aliyuncs.com&#x2F;google_containers&#x2F;pause:3.6&quot;#g&#39; &#x2F;etc&#x2F;containerd&#x2F;config.toml\nsed -i &#39;s#config_path &#x3D; &quot;&quot;#config_path &#x3D; &quot;&#x2F;etc&#x2F;containerd&#x2F;certs.d&quot;#g&#39; &#x2F;etc&#x2F;containerd&#x2F;config.toml\n### 配置镜像加速\nmkdir -p &#x2F;etc&#x2F;containerd&#x2F;certs.d&#x2F;docker.io\ncat &gt; &#x2F;etc&#x2F;containerd&#x2F;certs.d&#x2F;docker.io&#x2F;hosts.toml &lt;&lt; EOF\nserver &#x3D; &quot;https:&#x2F;&#x2F;registry-1.docker.io&quot;\n[host.&quot;https:&#x2F;&#x2F;08jm2d89.mirror.aliyuncs.com]\n  capabilities &#x3D; [&quot;pull&quot;, &quot;resolve&quot;, &quot;push&quot;]\nEOF\n## 启动生效\nsystemctl daemon-reload ; systemctl enable containerd --now\n## kubernetes.repo\nvi &#x2F;etc&#x2F;yum.repos.d&#x2F;kubernetes.repo\n[kubernetes]\nname&#x3D;Kubernetes\nbaseurl&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;repos&#x2F;kubernetes-el7-x86_64\nenabled&#x3D;1\ngpgcheck&#x3D;0\nrepo_gpgcheck&#x3D;0\ngpgkey&#x3D;http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;yum-key.gpg\n http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;rpm-package-key.gpg\n \n#指定版本否则都会默认安装库中最新版本，会因为彼此依赖的版本不同安装失败\nyum install -y kubelet-1.26.4 kubeadm-1.26.4 kubectl-1.26.4\n#设置开机启动并启动kubelet\nsystemctl enable kubelet &amp;&amp; systemctl start kubelet\n#查看需要依赖的镜像版本\nkubeadm config images list\nregistry.k8s.io&#x2F;kube-apiserver:v1.26.4\nregistry.k8s.io&#x2F;kube-controller-manager:v1.26.4\nregistry.k8s.io&#x2F;kube-scheduler:v1.26.4\nregistry.k8s.io&#x2F;kube-proxy:v1.26.4\nregistry.k8s.io&#x2F;pause:3.9\nregistry.k8s.io&#x2F;etcd:3.5.6-0\nregistry.k8s.io&#x2F;coredns&#x2F;coredns:v1.9.3\n\nsudo kubeadm config print init-defaults &gt; init-default.yaml\nsudo kubeadm config print join-defaults &gt; join-default.yaml</code></pre>\n\n<p>拉取镜像脚本kubeadm-config-download.sh</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#!&#x2F;bin&#x2F;bash\nimages&#x3D;(\n    kube-apiserver:v1.26.4\n    kube-controller-manager:v1.26.4\n    kube-scheduler:v1.26.4\n    kkube-proxy:v1.26.4\n    pause:3.9\n    pause:3.6\n    etcd:3.5.6-0\n    coredns:v1.9.3\n)\nfor imageName in $&#123;images[@]&#125; ; do\n    docker pull registry.cn-hangzhou.aliyuncs.com&#x2F;google_containers&#x2F;$&#123;imageName&#125;\n    docker tag registry.cn-hangzhou.aliyuncs.com&#x2F;google_containers&#x2F;$&#123;imageName&#125; registry.k8s.io&#x2F;$&#123;imageName&#125;\ndone</code></pre>\n\n<p>2.部署Kubernetes Master</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#kubeadm init --apiserver-advertise-address 192.168.0.143 --image-repository registry.cn-hangzhou.aliyuncs.com&#x2F;google_containers --kubernetes-version v1.26.4 --service-cidr&#x3D;10.10.0.0&#x2F;16 --pod-network-cidr&#x3D;10.20.0.0&#x2F;16\n#修改init-default.yaml配置\nkubeadm init --config init-default.yaml\n## 过程省略，最后出现下面这段\nYour Kubernetes control-plane has initialized successfully!\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  mkdir -p $HOME&#x2F;.kube\n  sudo cp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config\n  sudo chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config\n\nAlternatively, if you are the root user, you can run:\n\n  export KUBECONFIG&#x3D;&#x2F;etc&#x2F;kubernetes&#x2F;admin.conf\n## 按照要求进行shell命令\n## mkdir -p $HOME&#x2F;.kube\n## sudo cp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config\n## sudo chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config\n## export KUBECONFIG&#x3D;&#x2F;etc&#x2F;kubernetes&#x2F;admin.conf\nYou should now deploy a pod network to the cluster.\nRun &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:\n  https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;concepts&#x2F;cluster-administration&#x2F;addons&#x2F;\n\nThen you can join any number of worker nodes by running the following on each as root:\n\nkubeadm join 192.168.0.143:6443 --token abcdef.0123456789abcdef --discovery-token-ca-cert-hash sha256:e3d70eb9918d1d3fd41dc636859c15f5f2aed6694a0b92615dba908b9fc0ab80\n## node节点加入集群需要使用上面这段</code></pre>\n\n<ul>\n<li>重置方法</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 重置master\nkubeadm reset\nkubeadm reset -f\n\n# 重置过程不会清除CNI 配置,必须手动删除 &#x2F;etc&#x2F;cni&#x2F;net.d\nrm -rf &#x2F;etc&#x2F;cni&#x2F;net.d\n\n# 清理lvs策略\nipvsadm --clear</code></pre>\n\n<p>3.部署Kubernetes Node，将节点加入Kubernetes集群中</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#重复步骤1\n#使用步骤二得到的token join\nkubeadm join 192.168.0.143:6443 --token abcdef.0123456789abcdef --discovery-token-ca-cert-hash sha256:e3d70eb9918d1d3fd41dc636859c15f5f2aed6694a0b92615dba908b9fc0ab80\n#默认token有效期24小时,当过期之后,需要重建token\nkubeadm token create --print-join-command</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://kubernetes.io/zh-cn/docs/reference/setup-tools/kubeadm/kubeadm-token/\">https://kubernetes.io/zh-cn/docs/reference/setup-tools/kubeadm/kubeadm-token/</a></p></blockquote>\n<p>4.kubernetes集群搭建完毕，开始部署容器网络插件，完成coredns启动</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;coreos&#x2F;flannel&#x2F;master&#x2F;Documentation&#x2F;kubeflannel.yml\nvim kube-flannel.yml\n#根据具体情况修改，这里networking 修改为192.168.0.0&#x2F;16\nkubectl apply -f kube-flannel.yml\nkubectl get pods -A -owide</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Master 节点默认是不允许部署非系统的 pod，我们可以通过删除污点的方式运行部署</p></blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#查看污点\nkubectl describe node | grep Taints\n#删除污点\nkubectl taint nodes --all node-role.kubernetes.io&#x2F;control-plane-</code></pre>\n\n","text":"环境准备# 临时 systemctl stop firewalld # 永久 systemctl disable firewalld # 永久 sed -i &#39;s&#x2F;enforcing&#x2F;disabled&#x2F;&#39; &#x2F;etc&#x2F...","link":"","photos":[],"count_time":{"symbolsCount":"6.8k","symbolsTime":"6 mins."},"categories":[{"name":"kubernetes","slug":"kubernetes","count":6,"path":"api/categories/kubernetes.json"}],"tags":[{"name":"kubernetes","slug":"kubernetes","count":7,"path":"api/tags/kubernetes.json"},{"name":"kubeadm","slug":"kubeadm","count":1,"path":"api/tags/kubeadm.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87\"><span class=\"toc-text\">环境准备</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%9D%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">安裝步骤</span></a></li></ol>","author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"kubernetes安装dashboard","uid":"0ce9642686c176c4110b6a4972f4afa9","slug":"kubernetes/kubernetes安装dashboard","date":"2023-05-17T07:07:11.000Z","updated":"2023-06-20T02:08:15.000Z","comments":true,"path":"api/articles/kubernetes/kubernetes安装dashboard.json","keywords":"chriswood blogs sharing","cover":null,"text":"安装dashboard根据recommended.yaml安装 kubectl apply -f https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;kubernetes&#x2F;dashboard&#x2F;v2.7.0&#x2F...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"kubernetes","slug":"kubernetes","count":6,"path":"api/categories/kubernetes.json"}],"tags":[{"name":"kubernetes","slug":"kubernetes","count":7,"path":"api/tags/kubernetes.json"},{"name":"dashboard","slug":"dashboard","count":1,"path":"api/tags/dashboard.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"SuppressWarnings注解","uid":"dc3f996edbdbecb4bee8138ad43dfb31","slug":"java/annotation/SuppressWarnings注解","date":"2023-04-04T05:25:46.000Z","updated":"2023-07-04T07:53:31.835Z","comments":true,"path":"api/articles/java/annotation/SuppressWarnings注解.json","keywords":"chriswood blogs sharing","cover":null,"text":"SuppressWarnings注解标准用法对应表 关键字 用途 all to suppress all warnings boxing to suppress warnings relative to boxing&#x2F;unboxing operations cast t...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"Java","slug":"Java","count":2,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":2,"path":"api/tags/Java.json"},{"name":"SuppressWarnings","slug":"SuppressWarnings","count":1,"path":"api/tags/SuppressWarnings.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}