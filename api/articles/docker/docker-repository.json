{"title":"docker-repository","uid":"6e09d1f5d84f92c2bc7207691b14094e","slug":"docker/docker-repository","date":"2023-02-09T03:12:06.000Z","updated":"2023-02-09T03:15:29.734Z","comments":true,"path":"api/articles/docker/docker-repository.json","keywords":"chriswood blogs sharing","cover":null,"content":"<h2 id=\"alpine-java8-zh\"><a href=\"#alpine-java8-zh\" class=\"headerlink\" title=\"alpine_java8_zh\"></a>alpine_java8_zh</h2><h3 id=\"v1-0-0\"><a href=\"#v1-0-0\" class=\"headerlink\" title=\"v1.0.0\"></a>v1.0.0</h3><h4 id=\"1-dockerfile\"><a href=\"#1-dockerfile\" class=\"headerlink\" title=\"1.dockerfile\"></a>1.dockerfile</h4><pre class=\"line-numbers language-docker\" data-language=\"docker\"><code class=\"language-docker\">FROM openjdk:8-jdk-alpine\n\n# 添加timeZone\nRUN echo &#39;http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;alpine&#x2F;v3.9&#x2F;main&#39; &gt; &#x2F;etc&#x2F;apk&#x2F;repositories \\\n &amp;&amp; echo &#39;http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;alpine&#x2F;v3.9&#x2F;community&#39; &gt;&gt;&#x2F;etc&#x2F;apk&#x2F;repositories \\\n &amp;&amp; apk --no-cache add tzdata \\\n &amp;&amp; ln -sf &#x2F;usr&#x2F;share&#x2F;zoneinfo&#x2F;Asia&#x2F;Shanghai &#x2F;etc&#x2F;localtime \\\n &amp;&amp; echo &quot;Asia&#x2F;Shanghai&quot; &gt; &#x2F;etc&#x2F;timezone\n# 清理临时文件要在 同一个RUN命令内进行， rm -rf .....，构建的时候每个RUN都会创建一个临时的容器，只有写在同一个RUN下才会在一个容器内执行\nRUN apk --no-cache add ca-certificates wget &amp;&amp; \\\n    wget -q -O &#x2F;etc&#x2F;apk&#x2F;keys&#x2F;sgerrand.rsa.pub https:&#x2F;&#x2F;alpine-pkgs.sgerrand.com&#x2F;sgerrand.rsa.pub &amp;&amp; \\\n    wget https:&#x2F;&#x2F;github.com&#x2F;sgerrand&#x2F;alpine-pkg-glibc&#x2F;releases&#x2F;download&#x2F;2.35-r0&#x2F;glibc-2.35-r0.apk &amp;&amp; \\\n    wget https:&#x2F;&#x2F;github.com&#x2F;sgerrand&#x2F;alpine-pkg-glibc&#x2F;releases&#x2F;download&#x2F;2.35-r0&#x2F;glibc-bin-2.35-r0.apk &amp;&amp; \\\n    wget https:&#x2F;&#x2F;github.com&#x2F;sgerrand&#x2F;alpine-pkg-glibc&#x2F;releases&#x2F;download&#x2F;2.35-r0&#x2F;glibc-i18n-2.35-r0.apk &amp;&amp; \\\n    apk add glibc-bin-2.35-r0.apk glibc-i18n-2.35-r0.apk glibc-2.35-r0.apk &amp;&amp; \\\n    rm -rfv glibc-bin-2.35-r0.apk glibc-i18n-2.35-r0.apk glibc-2.35-r0.apk\n# locale.md 见下面的内容\nCOPY .&#x2F;locale.md &#x2F;locale.md\nRUN cat locale.md | xargs -i &#x2F;usr&#x2F;glibc-compat&#x2F;bin&#x2F;localedef -i &#123;&#125; -f UTF-8 &#123;&#125;.UTF-8 &amp;&amp; \\\n    rm -rfv locale.md\n\nENV LANG&#x3D;en_US.UTF-8 \\\n    LANGUAGE&#x3D;en_US.UTF-8</code></pre>\n<h4 id=\"2-locale-md\"><a href=\"#2-locale-md\" class=\"headerlink\" title=\"2.locale.md\"></a>2.locale.md</h4><pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">en_AG\nen_AU\nen_BW\nen_CA\nen_DK\nen_GB\nen_HK\nen_IE\nen_IN\nen_NG\nen_NZ\nen_PH\nen_SG\nen_US\nen_ZA\nen_ZM\nen_ZW\nzh_CN\nzh_HK\nzh_SG\nzh_TW\nzu_ZA</code></pre>\n<h4 id=\"3-构建及验证\"><a href=\"#3-构建及验证\" class=\"headerlink\" title=\"3.构建及验证\"></a>3.构建及验证</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 打包通过构建文件构建的镜像\ndocker build -f alpine_java8_zh -t chriswoodcn&#x2F;alpine_java8_zh:1.0.0\n# 创建容器aj1\ndocker run  --name aj1 -dit chriswoodcn&#x2F;alpine_java8_zh:1.0.0\n# 进入容器aj1\ndocker exec -it aj1 &#x2F;bin&#x2F;sh\n# 验证locale是否设置成功\n&#x2F;usr&#x2F;glibc-compat&#x2F;bin&#x2F;locale -a\n#...\n#zh_CN.utf8\n#zh_HK.utf8\n#zh_SG.utf8\n#zh_TW.utf8\n#zu_ZA.utf8\n#...</code></pre>\n","feature":true,"text":"alpine_java8_zhv1.0.01.dockerfileFROM openjdk:8-jdk-alpine # 添加timeZone RUN echo &#39;http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;alpine&#x2F;...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"docker-repository","slug":"docker-repository","count":1,"path":"api/categories/docker-repository.json"}],"tags":[{"name":"docker-repository","slug":"docker-repository","count":1,"path":"api/tags/docker-repository.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#alpine-java8-zh\"><span class=\"toc-text\">alpine_java8_zh</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#v1-0-0\"><span class=\"toc-text\">v1.0.0</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-dockerfile\"><span class=\"toc-text\">1.dockerfile</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-locale-md\"><span class=\"toc-text\">2.locale.md</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-%E6%9E%84%E5%BB%BA%E5%8F%8A%E9%AA%8C%E8%AF%81\"><span class=\"toc-text\">3.构建及验证</span></a></li></ol></li></ol></li></ol>","author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"docker镜像构建方式","uid":"05c6b7bccc0f16753e9101299bf620c9","slug":"docker/docker镜像构建方式","date":"2023-02-08T03:04:06.000Z","updated":"2023-02-09T03:15:29.734Z","comments":true,"path":"api/articles/docker/docker镜像构建方式.json","keywords":"chriswood blogs sharing","cover":null,"text":"创建镜像的方法主要有三种： 基于已有镜像的容器创建 基于本地模板导入 基于Dockerfile创建 一、基于容器创建镜像基于已有容器构建镜像主要是通过docker commit命令来构建新的镜像，语法规则如下： docker commit [OPTIONS] CONTAINER ...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"docker","slug":"docker","count":4,"path":"api/categories/docker.json"}],"tags":[{"name":"docker","slug":"docker","count":4,"path":"api/tags/docker.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}