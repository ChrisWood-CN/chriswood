{"title":"docker安装及CA证书制作","uid":"bcf521296f79d65fa8a33a76a7a5af5e","slug":"docker/docker安装及CA证书制作","date":"2023-03-01T07:37:24.000Z","updated":"2023-05-18T06:22:12.908Z","comments":true,"path":"api/articles/docker/docker安装及CA证书制作.json","keywords":"chriswood blogs sharing","cover":null,"content":"<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><p>云服务器centOS 7.6 64位</p>\n<h2 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h2><h3 id=\"docker安装\"><a href=\"#docker安装\" class=\"headerlink\" title=\"docker安装\"></a>docker安装</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo yum install -y yum-utils\nsudo yum-config-manager --add-repo https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo\n# 阿里云地址\nsudo yum-config-manager --add-repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo\nsudo yum install docker-ce docker-ce-cli containerd.io</code></pre>\n<p>###docker卸载</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">rm -rf &#x2F;etc&#x2F;docker\nrm -rf &#x2F;run&#x2F;docker\nrm -rf &#x2F;var&#x2F;lib&#x2F;dockershim\nrm -rf &#x2F;var&#x2F;lib&#x2F;docker\n\nps -ef|grep docker\nkill -9 pid\n\nyum list installed | grep docker\nyum remove  containerd.io.x86_64\n\nyum remove docker-ce.x86_64\nyum remove docker-ce-cli.x86_64\nyum remove docker-ce-rootless-extras.x86_64\nyum remove docker-compose-plugin.x86_64\nyum remove docker-scan-plugin.x86_64</code></pre>\n<h3 id=\"CA证书制作\"><a href=\"#CA证书制作\" class=\"headerlink\" title=\"CA证书制作\"></a>CA证书制作</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 创建文件夹\nmkdir -p &#x2F;mydata&#x2F;certs&#x2F;docker\ncd &#x2F;mydata&#x2F;certs&#x2F;docker\n# 使用OpenSSL生成 CA 私钥和公钥文件\nopenssl genrsa -aes256 -out ca-key.pem 4096\nopenssl req -new -x509 -days 365 -key ca-key.pem -sha256 -out ca.pem\nopenssl genrsa -out server-key.pem 4096\n# openssl req -subj &quot;&#x2F;CN&#x3D;$HOST&quot; -sha256 -new -key server-key.pem -out server.csr\n# $HOST可以是服务器ip地址也可以是域名地址\nopenssl req -subj &quot;&#x2F;CN&#x3D;124.221.83.80&quot; -sha256 -new -key server-key.pem -out server.csr\n# 使用 CA 签署公钥\n# 允许所有IP远程访问，也可以只允许指定的IP访问 echo subjectAltName &#x3D; DNS:$HOST,IP:10.10.10.20,IP:10.10.10.30 &gt;&gt; extfile.cnf\necho subjectAltName &#x3D; IP:124.221.83.80,IP:0.0.0.0 &gt;&gt; extfile.cnf\n# 将 Docker 守护程序密钥的扩展使用属性设置为仅用于服务器身份验证\necho extendedKeyUsage &#x3D; serverAuth &gt;&gt; extfile.cnf\n# 生成签名证书\nopenssl x509 -req -days 365 -sha256 -in server.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out server-cert.pem -extfile extfile.cnf\n\n# 继续创建客户端密钥和证书签名请求\nopenssl genrsa -out key.pem 4096\nopenssl req -subj &#39;&#x2F;CN&#x3D;client&#39; -new -key key.pem -out client.csr\n\n# 要使密钥适合客户端身份验证，请创建一个新的扩展配置文件\necho extendedKeyUsage &#x3D; clientAuth &gt;&gt; extfile-client.cnf\n\n# 现在，生成签名证书\nopenssl x509 -req -days 365 -sha256 -in client.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out cert.pem -extfile extfile-client.cnf\n\n# 生成后cert.pem，server-cert.pem 可以安全地删除两个证书签名请求和扩展配置文件：\nrm -v client.csr server.csr extfile.cnf extfile-client.cnf\n\n# 默认umask值为 022，您的密钥对您和您的组来说是世界可读和可写的。为保护您的密钥免受意外损坏，请移除其写入权限。要使它们只能由您读取，请按如下方式更改文件模式\nchmod -v 0400 ca-key.pem key.pem server-key.pem\nchmod -v 0444 ca.pem server-cert.pem cert.pem\n\n# 修改docker service\nvim &#x2F;lib&#x2F;systemd&#x2F;system&#x2F;docker.service\n# 修改ExecStart\nExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;dockerd -H fd:&#x2F;&#x2F; -H unix:&#x2F;&#x2F;&#x2F;var&#x2F;run&#x2F;docker.sock --containerd&#x3D;&#x2F;run&#x2F;containerd&#x2F;containerd.sock --tlsverify --tlscacert&#x3D;&#x2F;mydata&#x2F;certs&#x2F;docker&#x2F;ca.pem --tlscert&#x3D;&#x2F;mydata&#x2F;certs&#x2F;docker&#x2F;server-cert.pem --tlskey&#x3D;&#x2F;mydata&#x2F;certs&#x2F;docker&#x2F;server-key.pem -H tcp:&#x2F;&#x2F;0.0.0.0:2376\nsystemctl daemon-reload\nservice docker restart\nservice docker status\n# 拷贝ca.pem key.pem cert.pem到需要远程登录的客户端</code></pre>\n","text":"环境云服务器centOS 7.6 64位 安装步骤docker安装sudo yum install -y yum-utils sudo yum-config-manager --add-repo https:&#x2F;&#x2F;download.docker.com&#x2F...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"docker","slug":"docker","count":5,"path":"api/categories/docker.json"}],"tags":[{"name":"dockerCA证书","slug":"dockerCA证书","count":1,"path":"api/tags/dockerCA证书.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">环境</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">安装步骤</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#docker%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">docker安装</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CA%E8%AF%81%E4%B9%A6%E5%88%B6%E4%BD%9C\"><span class=\"toc-text\">CA证书制作</span></a></li></ol></li></ol>","author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"docker-compose","uid":"9744696a0b3b0998bf3993789981c178","slug":"docker/docker-compose","date":"2023-03-02T02:09:40.000Z","updated":"2023-05-18T06:22:12.908Z","comments":true,"path":"api/articles/docker/docker-compose.json","keywords":"chriswood blogs sharing","cover":null,"text":"环境云服务器centOS 7.6 64位 docker-compose安装curl -L &quot;https:&#x2F;&#x2F;github.com&#x2F;docker&#x2F;compose&#x2F;releases&#x2F;download&#x2F;v2...","link":"","photos":[],"count_time":{"symbolsCount":"9.8k","symbolsTime":"9 mins."},"categories":[{"name":"docker","slug":"docker","count":5,"path":"api/categories/docker.json"},{"name":"docker-compose","slug":"docker/docker-compose","count":1,"path":"api/categories/docker/docker-compose.json"}],"tags":[{"name":"docker","slug":"docker","count":3,"path":"api/tags/docker.json"},{"name":"docker-compose","slug":"docker-compose","count":1,"path":"api/tags/docker-compose.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"docker-repository","uid":"6e09d1f5d84f92c2bc7207691b14094e","slug":"docker/docker-repository","date":"2023-02-09T03:12:06.000Z","updated":"2023-05-18T06:22:12.908Z","comments":true,"path":"api/articles/docker/docker-repository.json","keywords":"chriswood blogs sharing","cover":null,"text":"docker镜像制作alpine_java8_zhv1.0.01.dockerfileFROM openjdk:8-jdk-alpine # 添加timeZone RUN echo &#39;http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;al...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"docker","slug":"docker","count":5,"path":"api/categories/docker.json"}],"tags":[{"name":"docker-repository","slug":"docker-repository","count":1,"path":"api/tags/docker-repository.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}