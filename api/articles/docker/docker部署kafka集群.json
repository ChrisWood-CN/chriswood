{"title":"docker部署kafka集群","uid":"08e8e341bc5995ad32cb07dac198cc20","slug":"docker/docker部署kafka集群","date":"2023-02-02T07:28:39.000Z","updated":"2023-02-03T05:14:05.345Z","comments":true,"path":"api/articles/docker/docker部署kafka集群.json","keywords":"chriswood blogs sharing","cover":null,"content":"<h2 id=\"搭建环境\"><a href=\"#搭建环境\" class=\"headerlink\" title=\"搭建环境\"></a>搭建环境</h2><p>Linux系统：centos 8<br>Zookeeper：wurstmeister&#x2F;zookeeper<br>Kafka：wurstmeister&#x2F;kafka</p>\n<h2 id=\"Zookeeper\"><a href=\"#Zookeeper\" class=\"headerlink\" title=\"Zookeeper\"></a>Zookeeper</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">docker pull wurstmeister&#x2F;zookeeper\n\ndocker run -d --name zookeeper -p 2181:2181 -t wurstmeister&#x2F;zookeeper</code></pre>\n<h2 id=\"Kafka-Cluster\"><a href=\"#Kafka-Cluster\" class=\"headerlink\" title=\"Kafka Cluster\"></a>Kafka Cluster</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">docker pull wurstmeister&#x2F;kafka\n\ndocker run -d --name kafka0 -p 9092:9092 \\\n-e KAFKA_BROKER_ID&#x3D;0 \\\n-e KAFKA_ZOOKEEPER_CONNECT&#x3D;124.221.83.80:2181 \\\n-e KAFKA_ADVERTISED_LISTENERS&#x3D;PLAINTEXT:&#x2F;&#x2F;124.221.83.80:9092 \\\n-e KAFKA_LISTENERS&#x3D;PLAINTEXT:&#x2F;&#x2F;0.0.0.0:9092 \\\n-t wurstmeister&#x2F;kafka\n\ndocker run -d --name kafka1 -p 9093:9093 \\\n-e KAFKA_BROKER_ID&#x3D;1 \\\n-e KAFKA_ZOOKEEPER_CONNECT&#x3D;124.221.83.80:2181 \\\n-e KAFKA_ADVERTISED_LISTENERS&#x3D;PLAINTEXT:&#x2F;&#x2F;124.221.83.80:9093 \\\n-e KAFKA_LISTENERS&#x3D;PLAINTEXT:&#x2F;&#x2F;0.0.0.0:9093 \\\n-t wurstmeister&#x2F;kafka\n\ndocker run -d --name kafka2 -p 9094:9094 \\\n-e KAFKA_BROKER_ID&#x3D;2 \\\n-e KAFKA_ZOOKEEPER_CONNECT&#x3D;124.221.83.80:2181 \\\n-e KAFKA_ADVERTISED_LISTENERS&#x3D;PLAINTEXT:&#x2F;&#x2F;124.221.83.80:9094 \\\n-e KAFKA_LISTENERS&#x3D;PLAINTEXT:&#x2F;&#x2F;0.0.0.0:9094 \\\n-t wurstmeister&#x2F;kafka</code></pre>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">docker ps\n\nCONTAINER ID   IMAGE                    COMMAND                  CREATED          STATUS          PORTS                                                                   NAMES\n3950fc28423e   wurstmeister&#x2F;kafka       &quot;start-kafka.sh&quot;         6 seconds ago    Up 5 seconds    0.0.0.0:9094-&gt;9094&#x2F;tcp, :::9094-&gt;9094&#x2F;tcp                               kafka2\n12cf92618c00   wurstmeister&#x2F;kafka       &quot;start-kafka.sh&quot;         8 seconds ago    Up 7 seconds    0.0.0.0:9093-&gt;9093&#x2F;tcp, :::9093-&gt;9093&#x2F;tcp                               kafka1\na525a115890b   wurstmeister&#x2F;kafka       &quot;start-kafka.sh&quot;         9 seconds ago    Up 7 seconds    0.0.0.0:9092-&gt;9092&#x2F;tcp, :::9092-&gt;9092&#x2F;tcp                               kafka0\nff862fe0f2ca   wurstmeister&#x2F;zookeeper   &quot;&#x2F;bin&#x2F;sh -c &#39;&#x2F;usr&#x2F;sb…&quot;   27 minutes ago   Up 27 minutes   22&#x2F;tcp, 2888&#x2F;tcp, 3888&#x2F;tcp, 0.0.0.0:2181-&gt;2181&#x2F;tcp, :::2181-&gt;2181&#x2F;tcp   zookeeper</code></pre>\n<h2 id=\"效果测试\"><a href=\"#效果测试\" class=\"headerlink\" title=\"效果测试\"></a>效果测试</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\"></code></pre>\n<p>转载：<a href=\"https://blog.csdn.net/u011651342/article/details/127096588\">https://blog.csdn.net/u011651342/article/details/127096588</a></p>\n<h2 id=\"docker-compose-zookeeper集群-kafka集群\"><a href=\"#docker-compose-zookeeper集群-kafka集群\" class=\"headerlink\" title=\"docker-compose zookeeper集群+kafka集群\"></a>docker-compose zookeeper集群+kafka集群</h2><h4 id=\"zookeeper集群\"><a href=\"#zookeeper集群\" class=\"headerlink\" title=\"zookeeper集群\"></a>zookeeper集群</h4><p>&#x2F;data&#x2F;zookeeper&#x2F;zoo1&#x2F;config&#x2F;zoo.cfg</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># The number of milliseconds of each tick\ntickTime&#x3D;2000\n# The number of ticks that the initial\n# synchronization phase can take\ninitLimit&#x3D;10\n# The number of ticks that can pass between\n# sending a request and getting an acknowledgement\nsyncLimit&#x3D;5\n# the directory where the snapshot is stored.\n# do not use &#x2F;tmp for storage, &#x2F;tmp here is just\n# example sakes.\n# dataDir&#x3D;&#x2F;opt&#x2F;zookeeper-3.4.13&#x2F;data\ndataDir&#x3D;&#x2F;data\ndataLogDir&#x3D;&#x2F;datalog\n# the port at which the clients will connect\nclientPort&#x3D;2181\n# the maximum number of client connections.\n# increase this if you need to handle more clients\n#maxClientCnxns&#x3D;60\n#\n# Be sure to read the maintenance section of the\n# administrator guide before turning on autopurge.\n#\n# http:&#x2F;&#x2F;zookeeper.apache.org&#x2F;doc&#x2F;current&#x2F;zookeeperAdmin.html#sc_maintenance\n#\n# The number of snapshots to retain in dataDir\nautopurge.snapRetainCount&#x3D;3\n# Purge task interval in hours\n# Set to &quot;0&quot; to disable auto purge feature\nautopurge.purgeInterval&#x3D;1\n \nserver.1&#x3D;zoo1:2888:3888\nserver.2&#x3D;zoo2:2888:3888\nserver.3&#x3D;zoo3:2888:3888</code></pre>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">docker network ls #查看当前网络\ndocker network create --subnet&#x3D;172.18.0.0&#x2F;16 mynetwork #创建子网段为172.18.0.0&#x2F;16 的IP网络</code></pre>\n<p>docker-compose-zookeeper.yml</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">version: &#39;3.7&#39;\nservices:\n  zoo1:\n    container_name: zoo1\n    hostname: zoo1\n    image: wurstmeister&#x2F;zookeeper\n    privileged: true\n    restart: unless-stopped\n    ports:\n      - 2181:2181\n    volumes: # 挂载数据卷\n      - &#x2F;data&#x2F;zookeeper&#x2F;zoo1&#x2F;config&#x2F;zoo.cfg:&#x2F;opt&#x2F;zookeeper-3.4.13&#x2F;conf&#x2F;zoo.cfg\n      - &#x2F;data&#x2F;zookeeper&#x2F;zoo1&#x2F;data:&#x2F;data\n      - &#x2F;data&#x2F;zookeeper&#x2F;zoo1&#x2F;datalog:&#x2F;datalog\n    environment:\n      TZ: Asia&#x2F;Shanghai\n      ZOO_MY_ID: 1 # 节点ID\n      ZOO_SERVERS: server.1&#x3D;zoo1:2888:3888 server.2&#x3D;zoo2:2888:3888 server.3&#x3D;zoo3:2888:3888 # zookeeper节点列表\n    networks:\n      mynetwork:\n        ipv4_address: 172.18.0.4\n      \n  zoo2:\n    container_name: zoo2\n    hostname: zoo2\n    image: wurstmeister&#x2F;zookeeper\n    privileged: true\n    restart: unless-stopped\n    ports:\n      - 2182:2181\n    volumes: # 挂载数据卷\n      - &#x2F;data&#x2F;zookeeper&#x2F;zoo2&#x2F;config&#x2F;zoo.cfg:&#x2F;opt&#x2F;zookeeper-3.4.13&#x2F;conf&#x2F;zoo.cfg\n      - &#x2F;data&#x2F;zookeeper&#x2F;zoo2&#x2F;data:&#x2F;data\n      - &#x2F;data&#x2F;zookeeper&#x2F;zoo2&#x2F;datalog:&#x2F;datalog\n    environment:\n      TZ: Asia&#x2F;Shanghai\n      ZOO_MY_ID: 2 # 节点ID\n      ZOO_SERVERS: server.1&#x3D;zoo1:2888:3888 server.2&#x3D;zoo2:2888:3888 server.3&#x3D;zoo3:2888:3888 # zookeeper节点列表\n    networks:\n      mynetwork:\n        ipv4_address: 172.18.0.5\n        \n  zoo3:\n    container_name: zoo3\n    hostname: zoo3\n    image: wurstmeister&#x2F;zookeeper\n    privileged: true\n    restart: unless-stopped\n    ports:\n      - 2183:2181\n    volumes: # 挂载数据卷\n      - &#x2F;data&#x2F;zookeeper&#x2F;zoo3&#x2F;config&#x2F;zoo.cfg:&#x2F;opt&#x2F;zookeeper-3.4.13&#x2F;conf&#x2F;zoo.cfg\n      - &#x2F;data&#x2F;zookeeper&#x2F;zoo3&#x2F;data:&#x2F;data\n      - &#x2F;data&#x2F;zookeeper&#x2F;zoo3&#x2F;datalog:&#x2F;datalog\n    environment:\n      TZ: Asia&#x2F;Shanghai\n      ZOO_MY_ID: 3 # 节点ID\n      ZOO_SERVERS: server.1&#x3D;zoo1:2888:3888 server.2&#x3D;zoo2:2888:3888 server.3&#x3D;zoo3:2888:3888 # zookeeper节点列表\n    networks:\n      mynetwork:\n        ipv4_address: 172.18.0.6\n        \nnetworks:\n  mynetwork:\n    external:\n      name: mynetwork</code></pre>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker-compose -f docker-compose-zookeeper.yml up -d</code></pre>\n\n<h4 id=\"kafka集群\"><a href=\"#kafka集群\" class=\"headerlink\" title=\"kafka集群\"></a>kafka集群</h4><p>创建虚拟机网络</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">docker network create -d bridge --subnet 172.19.0.0&#x2F;24 kafka_net</code></pre>\n<p>docker-compose-kafka.yml</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">version: &#39;3.2&#39;\nservices:\n  broker1:\n    container_name: broker1\n    hostname: broker1\n    image: wurstmeister&#x2F;kafka\n    privileged: true\n    restart: unless-stopped\n    ports:\n      - &quot;9986:9986&quot;\n      - &quot;9091:9091&quot;\n    environment:\n      KAFKA_BROKER_ID: 1\n      KAFKA_LISTENERS: PLAINTEXT:&#x2F;&#x2F;:9091\n      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT:&#x2F;&#x2F;172.16.12.163:9091\n      KAFKA_ADVERTISED_HOST_NAME: 172.16.12.163\n      KAFKA_ADVERTISED_PORT: 9091\n      KAFKA_ZOOKEEPER_CONNECT: 172.16.12.130:2181,172.16.12.130:2182,172.16.12.130:2183\n      JMX_PORT: 9986\n    volumes:\n      - &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock\n      - &#x2F;data&#x2F;kafka&#x2F;broker1:&#x2F;kafka&#x2F;kafka-logs-broker1\n    networks:\n      default:\n        ipv4_address: 172.19.0.11\n \n  broker2:\n    container_name: broker2\n    hostname: broker2\n    image: wurstmeister&#x2F;kafka\n    privileged: true\n    restart: unless-stopped\n    ports:\n      - &quot;9987:9987&quot;\n      - &quot;9092:9092&quot;\n    environment:\n      KAFKA_BROKER_ID: 2\n      KAFKA_LISTENERS: PLAINTEXT:&#x2F;&#x2F;:9092\n      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT:&#x2F;&#x2F;172.16.12.163:9092\n      KAFKA_ADVERTISED_HOST_NAME: 172.16.12.163\n      KAFKA_ADVERTISED_PORT: 9092\n      KAFKA_ZOOKEEPER_CONNECT: 172.16.12.130:2181,172.16.12.130:2182,172.16.12.130:2183\n      JMX_PORT: 9987\n    volumes:\n      - &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock\n      - &#x2F;data&#x2F;kafka&#x2F;broker2:&#x2F;kafka&#x2F;kafka-logs-broker2\n    networks:\n      default:\n        ipv4_address: 172.19.0.12\n \n  broker3:\n    container_name: broker3\n    hostname: broker3\n    image: wurstmeister&#x2F;kafka\n    privileged: true\n    restart: unless-stopped\n    ports:\n      - &quot;9988:9988&quot;\n      - &quot;9093:9093&quot;\n    environment:\n      KAFKA_BROKER_ID: 3\n      KAFKA_LISTENERS: PLAINTEXT:&#x2F;&#x2F;:9093\n      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT:&#x2F;&#x2F;172.16.12.163:9093\n      KAFKA_ADVERTISED_HOST_NAME: 172.16.12.163\n      KAFKA_ADVERTISED_PORT: 9093\n      KAFKA_ZOOKEEPER_CONNECT: 172.16.12.130:2181,172.16.12.130:2182,172.16.12.130:2183\n      JMX_PORT: 9988\n    volumes:\n      - &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock\n      - &#x2F;data&#x2F;kafka&#x2F;broker3:&#x2F;kafka&#x2F;kafk-logs-broker3\n    networks:\n      default:\n        ipv4_address: 172.19.0.13\n \n  kafka-manager:\n    image: sheepkiller&#x2F;kafka-manager:latest\n    container_name: kafka-manager\n    hostname: kafka-manager\n    restart: unless-stopped\n    ports:\n      - 9000:9000\n    links:      # 连接本compose文件创建的container\n      - broker1\n      - broker2\n      - broker3\n \n    environment:\n      ZK_HOSTS: 172.16.12.130:2181,172.16.12.130:2182,172.16.12.130:2183\n      KAFKA_BROKERS: broker1:9091,broker2:9092,broker3:9093\n      APPLICATION_SECRET: 123456\n      KM_ARGS: -Djava.net.preferIPv4Stack&#x3D;true\n    networks:\n      default:\n        ipv4_address: 172.19.0.14\n \nnetworks:\n  default:\n    external:\n      name: kafka_net</code></pre>\n","feature":true,"text":"搭建环境Linux系统：centos 8Zookeeper：wurstmeister&#x2F;zookeeperKafka：wurstmeister&#x2F;kafka Zookeeperdocker pull wurstmeister&#x2F;zookeeper dock...","link":"","photos":[],"count_time":{"symbolsCount":"9.2k","symbolsTime":"8 mins."},"categories":[{"name":"docker","slug":"docker","count":2,"path":"api/categories/docker.json"},{"name":"kafka","slug":"docker/kafka","count":1,"path":"api/categories/docker/kafka.json"}],"tags":[{"name":"docker","slug":"docker","count":2,"path":"api/tags/docker.json"},{"name":"kafka","slug":"kafka","count":2,"path":"api/tags/kafka.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%90%AD%E5%BB%BA%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">搭建环境</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Zookeeper\"><span class=\"toc-text\">Zookeeper</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Kafka-Cluster\"><span class=\"toc-text\">Kafka Cluster</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%88%E6%9E%9C%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">效果测试</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#docker-compose-zookeeper%E9%9B%86%E7%BE%A4-kafka%E9%9B%86%E7%BE%A4\"><span class=\"toc-text\">docker-compose zookeeper集群+kafka集群</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#zookeeper%E9%9B%86%E7%BE%A4\"><span class=\"toc-text\">zookeeper集群</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#kafka%E9%9B%86%E7%BE%A4\"><span class=\"toc-text\">kafka集群</span></a></li></ol></li></ol></li></ol>","author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/ChrisWood-CN","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"kafka学习","uid":"61a9c9a9f7385f264375e290c4106594","slug":"kafka/kafka学习","date":"2023-02-02T08:21:26.000Z","updated":"2023-02-03T05:14:05.345Z","comments":true,"path":"api/articles/kafka/kafka学习.json","keywords":"chriswood blogs sharing","cover":null,"text":"安装启动ZooKeeper（单机模式）1.下载解压镜像地址下载zookeeper，tar -zxvf 解压至&#x2F;opt2.配置环境变量 vim &#x2F;etc&#x2F;profile export ZOOKEEPER_HOME&#x3D;&#x2F;opt&#x2F...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"kafka","slug":"kafka","count":1,"path":"api/categories/kafka.json"},{"name":"zookeeper","slug":"kafka/zookeeper","count":1,"path":"api/categories/kafka/zookeeper.json"}],"tags":[{"name":"kafka","slug":"kafka","count":2,"path":"api/tags/kafka.json"},{"name":"zookeeper","slug":"zookeeper","count":1,"path":"api/tags/zookeeper.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/ChrisWood-CN","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"近代史","uid":"16f10664209103c56b5fcc131366977c","slug":"master/Politics/近代史","date":"2022-10-29T14:08:50.000Z","updated":"2023-02-03T05:14:05.345Z","comments":true,"path":"api/articles/master/Politics/近代史.json","keywords":"chriswood blogs sharing","cover":null,"text":"近代史重大纪念意义的历史事件 中国共产主义青年团成立100周年（1922-2022） 《在延安文艺座谈会上的讲话》《整顿党的作风》《反对党八股》发表80周年（1942-2022） 邓小平南方谈话、十四大召开30周年（1992-2022） 中美上海公报、中日邦交正常化50周年（19...","link":"","photos":[],"count_time":{"symbolsCount":"35k","symbolsTime":"31 mins."},"categories":[{"name":"考研政治","slug":"考研政治","count":4,"path":"api/categories/考研政治.json"}],"tags":[{"name":"考研政治","slug":"考研政治","count":4,"path":"api/tags/考研政治.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/ChrisWood-CN","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}