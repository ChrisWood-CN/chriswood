{"title":"kafka学习","uid":"61a9c9a9f7385f264375e290c4106594","slug":"kafka/kafka学习","date":"2023-02-02T08:21:26.000Z","updated":"2023-07-04T09:16:01.393Z","comments":true,"path":"api/articles/kafka/kafka学习.json","keywords":"chriswood blogs sharing","cover":null,"content":"<h2 id=\"安装启动ZooKeeper（单机模式）\"><a href=\"#安装启动ZooKeeper（单机模式）\" class=\"headerlink\" title=\"安装启动ZooKeeper（单机模式）\"></a>安装启动ZooKeeper（单机模式）</h2><p>1.下载解压<br><a href=\"https://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/\">镜像地址</a>下载zookeeper，tar -zxvf 解压至&#x2F;opt<br>2.配置环境变量</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">vim &#x2F;etc&#x2F;profile\n\nexport ZOOKEEPER_HOME&#x3D;&#x2F;opt&#x2F;apache-zookeeper-3.8.1-bin\nexport PATH&#x3D;$ZOOKEEPER_HOME&#x2F;bin:$PATH\n\nsource &#x2F;etc&#x2F;profile</code></pre>\n<p>3.修改ZooKeeper配置文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd &#x2F;opt&#x2F;apache-zookeeper-3.8.1-bin&#x2F;conf\ncp zoo_sample.cfg zoo.cfg\n\nmkdir &#x2F;tmp&#x2F;zookeeper&#x2F;data\nmkdir &#x2F;tmp&#x2F;zookeeper&#x2F;log\n\nvim zoo.cfg\n\n# zookeeper服务器心跳时间 单位ms\ntickTime&#x3D;2000\n# 投票选举新leader的初始化时间\ninitLimit&#x3D;10\n#leader 与 follower心跳检测最大容忍时间，超过syncLimit*tickTime leader认为follower挂掉，从服务器列表中删除follower\nsyncLimit&#x3D;5\n# 数据目录\ndataDir&#x3D;&#x2F;tmp&#x2F;zookeeper&#x2F;data\n# 日志目录\ndataLogDir&#x3D;&#x2F;tmp&#x2F;zookeeper&#x2F;log\n# zookeeper对外服务端口\nclientPort&#x3D;2181</code></pre>\n<p>4.创建myid文件并设置服务器编号</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd &#x2F;tmp&#x2F;zookeeper&#x2F;data\nvim myid\n# 写入0 保存 退出</code></pre>\n<p>5.启动Zookeeper服务，并查看Zookeeper的服务状态</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">zkServer.sh start\nzkServer.sh status</code></pre>\n\n<h2 id=\"安装并启动Kafka（单机模式）\"><a href=\"#安装并启动Kafka（单机模式）\" class=\"headerlink\" title=\"安装并启动Kafka（单机模式）\"></a>安装并启动Kafka（单机模式）</h2><p>1.下载解压<br><a href=\"https://mirrors.tuna.tsinghua.edu.cn/apache/kafka/\">镜像地址</a>kafka，tar -zxvf 解压至&#x2F;opt<br>2.配置环境变量</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">vim &#x2F;etc&#x2F;profile\n\nexport KAFKA_HOME&#x3D;&#x2F;opt&#x2F;kafka_2.12-2.8.2\nexport PATH&#x3D;KAFKA_HOME&#x2F;bin:$PATH\n\nsource &#x2F;etc&#x2F;profile</code></pre>\n<p>3.修改kafka配置文件</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkdir &#x2F;tmp&#x2F;kafka&#x2F;log\ncd &#x2F;opt&#x2F;kafka_2.12-2.8.2&#x2F;config\n\nvim server.properties\n\nbroker.id&#x3D;0\nlisteners&#x3D;PLAINTEXT:&#x2F;&#x2F;localhost:9092\nlog.dirs&#x3D;&#x2F;tmp&#x2F;kafka&#x2F;log\nzookeeper.connect&#x3D;localhost:2181&#x2F;kafka</code></pre>\n","text":"安装启动ZooKeeper（单机模式）1.下载解压镜像地址下载zookeeper，tar -zxvf 解压至&#x2F;opt2.配置环境变量 vim &#x2F;etc&#x2F;profile export ZOOKEEPER_HOME&#x3D;&#x2F;opt&#x2F...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"kafka","slug":"kafka","count":2,"path":"api/categories/kafka.json"}],"tags":[{"name":"kafka","slug":"kafka","count":2,"path":"api/tags/kafka.json"},{"name":"zookeeper","slug":"zookeeper","count":1,"path":"api/tags/zookeeper.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E5%90%AF%E5%8A%A8ZooKeeper%EF%BC%88%E5%8D%95%E6%9C%BA%E6%A8%A1%E5%BC%8F%EF%BC%89\"><span class=\"toc-text\">安装启动ZooKeeper（单机模式）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E5%B9%B6%E5%90%AF%E5%8A%A8Kafka%EF%BC%88%E5%8D%95%E6%9C%BA%E6%A8%A1%E5%BC%8F%EF%BC%89\"><span class=\"toc-text\">安装并启动Kafka（单机模式）</span></a></li></ol>","author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"docker部署hbase","uid":"f55822a9843defac7c7cd98d8f77df10","slug":"hbase/docker部署hbase","date":"2023-02-06T07:22:50.000Z","updated":"2023-07-04T09:16:01.393Z","comments":true,"path":"api/articles/hbase/docker部署hbase.json","keywords":"chriswood blogs sharing","cover":null,"text":"docker搭建hbase环境Linux系统：centos 7.6 Hbase：harisekhon&#x2F;hbase Hbase1.拉取镜像 并部署启动 方式一 手动分配所有端口 docker run -d -p 2181:2181 \\ -p 8080:8080 -p 80...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"hbase","slug":"hbase","count":1,"path":"api/categories/hbase.json"}],"tags":[{"name":"docker","slug":"docker","count":5,"path":"api/tags/docker.json"},{"name":"hbase","slug":"hbase","count":1,"path":"api/tags/hbase.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"docker部署kafka集群","uid":"08e8e341bc5995ad32cb07dac198cc20","slug":"kafka/docker部署kafka集群","date":"2023-02-02T07:28:39.000Z","updated":"2023-07-04T09:16:01.393Z","comments":true,"path":"api/articles/kafka/docker部署kafka集群.json","keywords":"chriswood blogs sharing","cover":null,"text":"docker搭建Zookeeper单机+kafka集群环境Linux系统：centos 7.6Zookeeper：wurstmeister&#x2F;zookeeperKafka：wurstmeister&#x2F;kafka Zookeeper单机docker pull wur...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"kafka","slug":"kafka","count":2,"path":"api/categories/kafka.json"}],"tags":[{"name":"docker","slug":"docker","count":5,"path":"api/tags/docker.json"},{"name":"kafka","slug":"kafka","count":2,"path":"api/tags/kafka.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}