{"title":"RedisTemplate的opsFor操作","uid":"9a127567f79009a5dd921fb33be17694","slug":"java/redisson/RedisTemplate的opsFor操作","date":"2023-03-07T02:04:31.000Z","updated":"2023-07-04T09:16:44.508Z","comments":true,"path":"api/articles/java/redisson/RedisTemplate的opsFor操作.json","keywords":"chriswood blogs sharing","cover":null,"content":"<h4 id=\"一、opsForValue\"><a href=\"#一、opsForValue\" class=\"headerlink\" title=\"一、opsForValue\"></a>一、opsForValue</h4><p>Key-Value操作</p>\n<h5 id=\"1、set-K-key-V-value\"><a href=\"#1、set-K-key-V-value\" class=\"headerlink\" title=\"1、set(K key, V value)\"></a>1、set(K key, V value)</h5><p>向Redis新增一个key-value，k-v可以是泛型。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">redisTemplate.opsForValue().set(obj1,obj2);</code></pre>\n<h5 id=\"2-get-Object-key\"><a href=\"#2-get-Object-key\" class=\"headerlink\" title=\"2.get(Object key)\"></a>2.get(Object key)</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F; 以对象为key的，只要对象属性全都相同就可以获取到\nredisTemplate.opsForValue().get(obj1);</code></pre>\n<h5 id=\"3、set-K-key-V-value-long-timeout-TimeUnit-unit\"><a href=\"#3、set-K-key-V-value-long-timeout-TimeUnit-unit\" class=\"headerlink\" title=\"3、set(K key, V value, long timeout, TimeUnit unit)\"></a>3、set(K key, V value, long timeout, TimeUnit unit)</h5><p>在原有的set基础上增加了过期时间,过了这个时间,这对key-value就会被Redis删除</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;&#x2F; 300秒后过期\nredisTemplate.opsForValue().set(obj1,obj2,300,TimeUnit.SECONDS);</code></pre>\n<p>4.append(K key, String value)<br>在原有的值基础上新增字符串到末尾<br>5.get(K key, long start, long end)<br>截取key键对应值得字符串，从开始下标位置开始到结束下标的位置(包含结束下标)的字符串<br>6.getAndSet(K key, V value)<br>获取原来key键对应的值并重新赋新值<br>7.setBit(K key, long offset, boolean value)<br>key键对应的值value对应的ascii码,在offset的位置(从左向右数)变为value。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">redisTemplate.opsForValue().setBit(&quot;key&quot;,1,false); </code></pre>\n<p>8.getBit(K key, long offset)<br>断指定的位置ASCII码的bit位是否为1</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">boolean bitBoolean &#x3D; redisTemplate.opsForValue().getBit(&quot;key&quot;,1); </code></pre>\n<p>9.size(K key)<br>获取指定字符串的长度<br>10.increment(K key, double delta),increment(K key, long delta)<br>以增量的方式将double,long值存储在变量中</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">double valueDouble &#x3D; redisTemplate.opsForValue().increment(&quot;doubleKey&quot;,5);  </code></pre>\n<p>11.setIfAbsent(K key, V value)<br>如果键不存在则新增,存在则不改变已经有的值<br>12.set(K key, V value, long offset)<br>覆盖从指定位置开始的值<br>13.multiSet(Map&lt;? extends K,? extends V&gt; map)<br>设置map集合到redis</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">Map valueMap &#x3D; new HashMap();  \nvalueMap.put(&quot;valueMap1&quot;,&quot;map1&quot;);  \nvalueMap.put(&quot;valueMap2&quot;,&quot;map2&quot;);  \nvalueMap.put(&quot;valueMap3&quot;,&quot;map3&quot;);  \nredisTemplate.opsForValue().multiSet(valueMap);  </code></pre>\n<p>14.multiGet(Collection<K> keys)<br>根据集合的keys取出对应的value值</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;&#x2F;根据List集合取出对应的value值  \nList paraList &#x3D; new ArrayList();  \nparaList.add(&quot;valueMap1&quot;);  \nparaList.add(&quot;valueMap2&quot;);  \nparaList.add(&quot;valueMap3&quot;);  \nList&lt;String&gt; valueList &#x3D; redisTemplate.opsForValue().multiGet(paraList);  \nfor (String value : valueList)&#123;  \n    System.out.println(&quot;通过multiGet(Collection&lt;K&gt; keys)方法获取map值:&quot; + value);  \n&#125;</code></pre>\n<p>15.multiSetIfAbsent(Map&lt;? extends K,? extends V&gt; map)<br>如果对应的map集合名称不存在，则添加；如果存在则不做修改</p>\n<h4 id=\"二、opsForList\"><a href=\"#二、opsForList\" class=\"headerlink\" title=\"二、opsForList\"></a>二、opsForList</h4><p>List集合相关操作。</p>\n<h5 id=\"1、leftPush-K-key-V-value-x2F-rightPush-K-key-V-value\"><a href=\"#1、leftPush-K-key-V-value-x2F-rightPush-K-key-V-value\" class=\"headerlink\" title=\"1、leftPush(K key, V value) &#x2F; rightPush(K key, V value)\"></a>1、leftPush(K key, V value) &#x2F; rightPush(K key, V value)</h5><p>向集合左边添加元素值</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;&#x2F; list：[c,b,a]\nredisTemplate.opsForList().leftPush(&quot;list&quot;,&quot;a&quot;);\nredisTemplate.opsForList().leftPush(&quot;list&quot;,&quot;b&quot;);\nredisTemplate.opsForList().leftPush(&quot;list&quot;,&quot;c&quot;);</code></pre>\n<h5 id=\"2-leftPushAll-K-key-V-…values-x2F-rightPushAll-K-key-V-…values\"><a href=\"#2-leftPushAll-K-key-V-…values-x2F-rightPushAll-K-key-V-…values\" class=\"headerlink\" title=\"2.leftPushAll(K key, V …values) &#x2F; rightPushAll(K key, V …values)\"></a>2.leftPushAll(K key, V …values) &#x2F; rightPushAll(K key, V …values)</h5><p>向集合左边批量添加元素，参数可以是数组、多参数、集合</p>\n<h5 id=\"3-leftPop-K-key-x2F-rightPop-K-key-V-…values\"><a href=\"#3-leftPop-K-key-x2F-rightPop-K-key-V-…values\" class=\"headerlink\" title=\"3.leftPop(K key) &#x2F; rightPop(K key, V …values)\"></a>3.leftPop(K key) &#x2F; rightPop(K key, V …values)</h5><p>移除集合左边的第一个元素并返回这个元素<br>4.index(K key, long index)<br>获取集合指定位置的值<br>5.range(K key, long start, long end)<br>获取指定区间的值<br>6.ize(K key)<br>获取集合长度<br>7.leftPop(K key, long timeout, TimeUnit unit) &#x2F; rightPop(K key, long timeout, TimeUnit unit)<br>移除集合中左边的元素在等待的时间里，如果超过等待的时间仍没有元素则退出<br>8.trim(K key, long start, long end)<br>截取集合元素长度，保留长度内的数据<br>9.remove(K key, long count, Object value)<br>从存储在键中的列表中删除等于值的元素的第一个计数事件。<br>count&gt; 0：删除等于从左到右移动的值的第一个元素；<br>count&lt; 0：删除等于从右到左移动的值的第一个元素；<br>count &#x3D; 0：删除等于value的所有元素。</p>\n<h4 id=\"三、opsForHash\"><a href=\"#三、opsForHash\" class=\"headerlink\" title=\"三、opsForHash\"></a>三、opsForHash</h4><p>Hash类型相关操作</p>\n<h5 id=\"1、put-H-key-HK-hashKey-HV-value\"><a href=\"#1、put-H-key-HK-hashKey-HV-value\" class=\"headerlink\" title=\"1、put(H key, HK hashKey, HV value)\"></a>1、put(H key, HK hashKey, HV value)</h5><p>新增一个Hash值，key为外层的Hash的key值，hashKey为内层Hash的key值，value为内层Hash的key对应的value</p>\n<h5 id=\"2-get-H-key-Object-hashKey\"><a href=\"#2-get-H-key-Object-hashKey\" class=\"headerlink\" title=\"2.get(H key, Object hashKey)\"></a>2.get(H key, Object hashKey)</h5><p>获取内层hashKey对应的value</p>\n<h5 id=\"3-values-H-key\"><a href=\"#3-values-H-key\" class=\"headerlink\" title=\"3.values(H key)\"></a>3.values(H key)</h5><p>获取外层Key的存储的所有hash，并将其封装在一个Map对象返回</p>\n<h5 id=\"4-hasKey-H-key-Object-hashKey\"><a href=\"#4-hasKey-H-key-Object-hashKey\" class=\"headerlink\" title=\"4.hasKey(H key, Object hashKey)\"></a>4.hasKey(H key, Object hashKey)</h5><p>判断Key中是否存在hashKey这个键值对</p>\n<h5 id=\"5-keys-H-key-、values-H-key\"><a href=\"#5-keys-H-key-、values-H-key\" class=\"headerlink\" title=\"5.keys(H key)、values(H key)\"></a>5.keys(H key)、values(H key)</h5><p>前者获取所有key，后者获取所有key对应的value</p>\n<h5 id=\"6-size-H-key\"><a href=\"#6-size-H-key\" class=\"headerlink\" title=\"6.size(H key)\"></a>6.size(H key)</h5><p>获取Hash的长度</p>\n<h5 id=\"7-putAll-H-key-Map-lt-extends-HK-extends-HV-gt-m\"><a href=\"#7-putAll-H-key-Map-lt-extends-HK-extends-HV-gt-m\" class=\"headerlink\" title=\"7.putAll(H key, Map&lt;? extends HK,? extends HV&gt; m)\"></a>7.putAll(H key, Map&lt;? extends HK,? extends HV&gt; m)</h5><p>以Map集合的形式添加键值对</p>\n<h4 id=\"四、opsForSet\"><a href=\"#四、opsForSet\" class=\"headerlink\" title=\"四、opsForSet\"></a>四、opsForSet</h4><p>Set类型相关操作</p>\n<h5 id=\"1、add-K-key-V…-values\"><a href=\"#1、add-K-key-V…-values\" class=\"headerlink\" title=\"1、add(K key, V… values)\"></a>1、add(K key, V… values)</h5><p>向key对应的value值中批量添加值，可以是集合、数组、多参数</p>\n<h5 id=\"2-members-K-key\"><a href=\"#2-members-K-key\" class=\"headerlink\" title=\"2.members(K key)\"></a>2.members(K key)</h5><p>获取key对应的value</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Set set &#x3D; redisTemplate.opsForSet().members(&quot;key&quot;);</code></pre>\n<h5 id=\"3、size-K-key\"><a href=\"#3、size-K-key\" class=\"headerlink\" title=\"3、size(K key)\"></a>3、size(K key)</h5><p>获取key对应的值的长度</p>\n<h5 id=\"4、isMember-K-key-Object-o\"><a href=\"#4、isMember-K-key-Object-o\" class=\"headerlink\" title=\"4、isMember(K key, Object o)\"></a>4、isMember(K key, Object o)</h5><p>检查给定的元素是否在Set变量中</p>\n<h5 id=\"5、pop-K-key\"><a href=\"#5、pop-K-key\" class=\"headerlink\" title=\"5、pop(K key)\"></a>5、pop(K key)</h5><p>弹出变量中的元素</p>\n<h5 id=\"6、remove-K-key-Object…-values\"><a href=\"#6、remove-K-key-Object…-values\" class=\"headerlink\" title=\"6、remove(K key, Object… values)\"></a>6、remove(K key, Object… values)</h5><p>批量移除元素。可以是集合、数组、多参数</p>\n<h5 id=\"7、randomMember-K-key\"><a href=\"#7、randomMember-K-key\" class=\"headerlink\" title=\"7、randomMember(K key)\"></a>7、randomMember(K key)</h5><p>随机获取变量中的一个元素</p>\n<h5 id=\"8、randomMembers-K-key-long-count\"><a href=\"#8、randomMembers-K-key-long-count\" class=\"headerlink\" title=\"8、randomMembers(K key, long count)\"></a>8、randomMembers(K key, long count)</h5><p>随机获取变量中的count个元素</p>\n<h5 id=\"9、delete-H-key-Object…-hashKeys\"><a href=\"#9、delete-H-key-Object…-hashKeys\" class=\"headerlink\" title=\"9、delete(H key, Object… hashKeys)\"></a>9、delete(H key, Object… hashKeys)</h5><p>删除Key变量中的键值对，可以传入多个参数，删除多个键值对。可以是集合、数组、多参数</p>\n<h4 id=\"五、opsForZSet\"><a href=\"#五、opsForZSet\" class=\"headerlink\" title=\"五、opsForZSet\"></a>五、opsForZSet</h4><p>ZSet相关操作,根据score分数进行从小到大排序</p>\n<h5 id=\"1、add-K-key-V-value-double-score\"><a href=\"#1、add-K-key-V-value-double-score\" class=\"headerlink\" title=\"1、add(K key, V value, double score)\"></a>1、add(K key, V value, double score)</h5><p>添加元素到变量中同时指定元素的分值</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">redisTemplate.opsForZSet().add(&quot;zSetKey&quot;,&quot;A&quot;,1);\nredisTemplate.opsForZSet().add(&quot;zSetKey&quot;,&quot;B&quot;,3);</code></pre>\n<h5 id=\"2、range-K-key-long-start-long-end\"><a href=\"#2、range-K-key-long-start-long-end\" class=\"headerlink\" title=\"2、range(K key, long start, long end)\"></a>2、range(K key, long start, long end)</h5><p>获取变量指定区间的元素，从下标0开始</p>\n<h5 id=\"3、score-K-key-Object-o\"><a href=\"#3、score-K-key-Object-o\" class=\"headerlink\" title=\"3、score(K key, Object o)\"></a>3、score(K key, Object o)</h5><p>获取元素的分值</p>\n<h5 id=\"4-rangeByScore-K-key-double-min-double-max\"><a href=\"#4-rangeByScore-K-key-double-min-double-max\" class=\"headerlink\" title=\"4.rangeByScore(K key, double min, double max)\"></a>4.rangeByScore(K key, double min, double max)</h5><p>根据设置的score获取区间值。</p>\n<h5 id=\"5-rangeByScore-K-key-double-min-double-max-long-offset-long-count\"><a href=\"#5-rangeByScore-K-key-double-min-double-max-long-offset-long-count\" class=\"headerlink\" title=\"5.rangeByScore(K key, double min, double max,long offset, long count)\"></a>5.rangeByScore(K key, double min, double max,long offset, long count)</h5><p>根据设置的score获取区间值从给定下标和给定长度获取最终值。</p>\n<h5 id=\"6-count-K-key-double-min-double-max\"><a href=\"#6-count-K-key-double-min-double-max\" class=\"headerlink\" title=\"6.count(K key, double min, double max)\"></a>6.count(K key, double min, double max)</h5><p>获取区间值的个数</p>\n<h4 id=\"所有的键值对都可以通过delete删除\"><a href=\"#所有的键值对都可以通过delete删除\" class=\"headerlink\" title=\"所有的键值对都可以通过delete删除\"></a>所有的键值对都可以通过delete删除</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;&#x2F; 删除一个Key\nredisTemplate.delete(&quot;Key&quot;);\n&#x2F;&#x2F; 删除多个Key - 可以是集合、数组、多参数\nredisTemplate.delete(list);</code></pre>\n","text":"一、opsForValueKey-Value操作 1、set(K key, V value)向Redis新增一个key-value，k-v可以是泛型。 redisTemplate.opsForValue().set(obj1,obj2); 2.get(Object key)&#x...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"Redis","slug":"Redis","count":1,"path":"api/categories/Redis.json"}],"tags":[{"name":"Redisson","slug":"Redisson","count":1,"path":"api/tags/Redisson.json"},{"name":"RedisTemplate","slug":"RedisTemplate","count":1,"path":"api/tags/RedisTemplate.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81opsForValue\"><span class=\"toc-text\">一、opsForValue</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1%E3%80%81set-K-key-V-value\"><span class=\"toc-text\">1、set(K key, V value)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-get-Object-key\"><span class=\"toc-text\">2.get(Object key)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3%E3%80%81set-K-key-V-value-long-timeout-TimeUnit-unit\"><span class=\"toc-text\">3、set(K key, V value, long timeout, TimeUnit unit)</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81opsForList\"><span class=\"toc-text\">二、opsForList</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1%E3%80%81leftPush-K-key-V-value-x2F-rightPush-K-key-V-value\"><span class=\"toc-text\">1、leftPush(K key, V value) &#x2F; rightPush(K key, V value)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-leftPushAll-K-key-V-%E2%80%A6values-x2F-rightPushAll-K-key-V-%E2%80%A6values\"><span class=\"toc-text\">2.leftPushAll(K key, V …values) &#x2F; rightPushAll(K key, V …values)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-leftPop-K-key-x2F-rightPop-K-key-V-%E2%80%A6values\"><span class=\"toc-text\">3.leftPop(K key) &#x2F; rightPop(K key, V …values)</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81opsForHash\"><span class=\"toc-text\">三、opsForHash</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1%E3%80%81put-H-key-HK-hashKey-HV-value\"><span class=\"toc-text\">1、put(H key, HK hashKey, HV value)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-get-H-key-Object-hashKey\"><span class=\"toc-text\">2.get(H key, Object hashKey)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-values-H-key\"><span class=\"toc-text\">3.values(H key)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4-hasKey-H-key-Object-hashKey\"><span class=\"toc-text\">4.hasKey(H key, Object hashKey)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-keys-H-key-%E3%80%81values-H-key\"><span class=\"toc-text\">5.keys(H key)、values(H key)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#6-size-H-key\"><span class=\"toc-text\">6.size(H key)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#7-putAll-H-key-Map-lt-extends-HK-extends-HV-gt-m\"><span class=\"toc-text\">7.putAll(H key, Map&lt;? extends HK,? extends HV&gt; m)</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81opsForSet\"><span class=\"toc-text\">四、opsForSet</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1%E3%80%81add-K-key-V%E2%80%A6-values\"><span class=\"toc-text\">1、add(K key, V… values)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-members-K-key\"><span class=\"toc-text\">2.members(K key)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3%E3%80%81size-K-key\"><span class=\"toc-text\">3、size(K key)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4%E3%80%81isMember-K-key-Object-o\"><span class=\"toc-text\">4、isMember(K key, Object o)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5%E3%80%81pop-K-key\"><span class=\"toc-text\">5、pop(K key)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#6%E3%80%81remove-K-key-Object%E2%80%A6-values\"><span class=\"toc-text\">6、remove(K key, Object… values)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#7%E3%80%81randomMember-K-key\"><span class=\"toc-text\">7、randomMember(K key)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#8%E3%80%81randomMembers-K-key-long-count\"><span class=\"toc-text\">8、randomMembers(K key, long count)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#9%E3%80%81delete-H-key-Object%E2%80%A6-hashKeys\"><span class=\"toc-text\">9、delete(H key, Object… hashKeys)</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81opsForZSet\"><span class=\"toc-text\">五、opsForZSet</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1%E3%80%81add-K-key-V-value-double-score\"><span class=\"toc-text\">1、add(K key, V value, double score)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2%E3%80%81range-K-key-long-start-long-end\"><span class=\"toc-text\">2、range(K key, long start, long end)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3%E3%80%81score-K-key-Object-o\"><span class=\"toc-text\">3、score(K key, Object o)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4-rangeByScore-K-key-double-min-double-max\"><span class=\"toc-text\">4.rangeByScore(K key, double min, double max)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-rangeByScore-K-key-double-min-double-max-long-offset-long-count\"><span class=\"toc-text\">5.rangeByScore(K key, double min, double max,long offset, long count)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#6-count-K-key-double-min-double-max\"><span class=\"toc-text\">6.count(K key, double min, double max)</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%89%80%E6%9C%89%E7%9A%84%E9%94%AE%E5%80%BC%E5%AF%B9%E9%83%BD%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87delete%E5%88%A0%E9%99%A4\"><span class=\"toc-text\">所有的键值对都可以通过delete删除</span></a></li></ol>","author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"SuppressWarnings注解","uid":"dc3f996edbdbecb4bee8138ad43dfb31","slug":"java/annotation/SuppressWarnings注解","date":"2023-04-04T05:25:46.000Z","updated":"2023-07-04T09:16:44.508Z","comments":true,"path":"api/articles/java/annotation/SuppressWarnings注解.json","keywords":"chriswood blogs sharing","cover":null,"text":"SuppressWarnings注解标准用法对应表 关键字 用途 all to suppress all warnings boxing to suppress warnings relative to boxing&#x2F;unboxing operations cast t...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"Java","slug":"Java","count":2,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":2,"path":"api/tags/Java.json"},{"name":"SuppressWarnings","slug":"SuppressWarnings","count":1,"path":"api/tags/SuppressWarnings.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"docker-compose","uid":"9744696a0b3b0998bf3993789981c178","slug":"docker/docker-compose","date":"2023-03-02T02:09:40.000Z","updated":"2023-06-15T06:03:05.000Z","comments":true,"path":"api/articles/docker/docker-compose.json","keywords":"chriswood blogs sharing","cover":null,"text":"环境云服务器centOS 7.6 64位 docker-compose安装curl -L &quot;https:&#x2F;&#x2F;github.com&#x2F;docker&#x2F;compose&#x2F;releases&#x2F;download&#x2F;v2...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"13 mins."},"categories":[{"name":"docker","slug":"docker","count":6,"path":"api/categories/docker.json"}],"tags":[{"name":"docker","slug":"docker","count":5,"path":"api/tags/docker.json"},{"name":"docker-compose","slug":"docker-compose","count":1,"path":"api/tags/docker-compose.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}