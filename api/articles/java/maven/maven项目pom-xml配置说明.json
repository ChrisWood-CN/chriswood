{"title":"maven项目pom.xml配置说明","uid":"2af2a4517d6bfc676756f25e15eedeab","slug":"java/maven/maven项目pom-xml配置说明","date":"2023-05-18T05:06:21.000Z","updated":"2023-06-30T02:33:00.397Z","comments":true,"path":"api/articles/java/maven/maven项目pom-xml配置说明.json","keywords":"chriswood blogs sharing","cover":null,"content":"<h3 id=\"settings-xml\"><a href=\"#settings-xml\" class=\"headerlink\" title=\"settings.xml\"></a>settings.xml</h3><ul>\n<li>用来设置maven参数的配置文件</li>\n<li>settings.xml是maven的全局配置文件。pom.xml文件是所在项目的局部配置</li>\n<li>settings.xml中包含本地仓储位置、修改远程仓储服务器、认证信息等配置</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://maven.apache.org/settings.html\">https://maven.apache.org/settings.html</a></p></blockquote>\n<h4 id=\"settings-xml的存储位置\"><a href=\"#settings-xml的存储位置\" class=\"headerlink\" title=\"settings.xml的存储位置\"></a>settings.xml的存储位置</h4><ul>\n<li>The Maven install: ${maven.home}&#x2F;conf&#x2F;settings.xml</li>\n<li>A user’s install: ${user.home}&#x2F;.m2&#x2F;settings.xml</li>\n</ul>\n<p>前者settings.xml也称为全局设置，后者settings.xml称为用户设置。如果两个文件都存在，则合并它们的内容，用户特定的 settings.xml 占主导地位</p>\n<h4 id=\"文件详解\"><a href=\"#文件详解\" class=\"headerlink\" title=\"文件详解\"></a>文件详解</h4><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;\n\n&lt;!--\nLicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n&quot;License&quot;); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\n    http:&#x2F;&#x2F;www.apache.org&#x2F;licenses&#x2F;LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\n&quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, either express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\n--&gt;\n\n&lt;!--\n This is the configuration file for Maven. It can be specified at two levels:\n \n  1. User Level. This settings.xml file provides configuration for a single user,\n                 and is normally provided in $&#123;user.home&#125;&#x2F;.m2&#x2F;settings.xml.\n \n                 NOTE: This location can be overridden with the CLI option:\n \n                 -s &#x2F;path&#x2F;to&#x2F;user&#x2F;settings.xml\n \n  2. Global Level. This settings.xml file provides configuration for all Maven\n                 users on a machine (assuming they&#39;re all using the same Maven\n                 installation). It&#39;s normally provided in\n                 $&#123;maven.conf&#125;&#x2F;settings.xml.\n \n                 NOTE: This location can be overridden with the CLI option:\n \n                 -gs &#x2F;path&#x2F;to&#x2F;global&#x2F;settings.xml\n \n The sections in this sample file are intended to give you a running start at\n getting the most out of your Maven installation. Where appropriate, the default\n values (values used when the setting is not specified) are provided.\n \n --&gt;\n&lt;settings xmlns&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;SETTINGS&#x2F;1.2.0&quot;\n          xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;\n          xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;SETTINGS&#x2F;1.2.0 https:&#x2F;&#x2F;maven.apache.org&#x2F;xsd&#x2F;settings-1.2.0.xsd&quot;&gt;\n    &lt;!-- localRepository\n     本地存储库路径\n     Default: $&#123;user.home&#125;&#x2F;.m2&#x2F;repository\n    &lt;localRepository&gt;&#x2F;path&#x2F;to&#x2F;local&#x2F;repo&lt;&#x2F;localRepository&gt;\n    --&gt;\n\n    &lt;!-- interactiveMode\n     maven在需要输入的时候是否提示。如果设置为false，maven将为有问题的参数使用一个合理的默认值，可能基于一些其他设置\n     Default: true\n    &lt;interactiveMode&gt;true&lt;&#x2F;interactiveMode&gt;\n    --&gt;\n\n    &lt;!-- offline\n     确定 Maven 在执行构建时是否应尝试连接到网络。 这将对工件下载、工件部署等产生影响\n  \n     Default: false\n    &lt;offline&gt;false&lt;&#x2F;offline&gt;\n    --&gt;\n\n    &lt;!-- pluginGroups\n     当调用像“mvn prefix:goal”这样的命令行时，maven会自动补全坐标 &quot;org.apache.maven.plugins&quot;&quot;org.codehaus.mojo&quot;\n     --&gt;\n    &lt;pluginGroups&gt;\n        &lt;!-- pluginGroup\n         Specifies a further group identifier to use for plugin lookup.\n        &lt;pluginGroup&gt;com.your.plugins&lt;&#x2F;pluginGroup&gt;\n        --&gt;\n    &lt;&#x2F;pluginGroups&gt;\n\n    &lt;!-- TODO Since when can proxies be selected as depicted? --&gt;\n    &lt;!-- proxies\n     代理列表，可以在这台机器上用来连接到网络\n     --&gt;\n    &lt;proxies&gt;\n        &lt;!-- proxy\n         Specification for one proxy, to be used in connecting to the network.\n         \n        &lt;proxy&gt;\n          &lt;id&gt;optional&lt;&#x2F;id&gt;\n          &lt;active&gt;true&lt;&#x2F;active&gt;\n          &lt;protocol&gt;http&lt;&#x2F;protocol&gt;\n          &lt;username&gt;proxyuser&lt;&#x2F;username&gt;\n          &lt;password&gt;proxypass&lt;&#x2F;password&gt;\n          &lt;host&gt;proxy.host.net&lt;&#x2F;host&gt;\n          &lt;port&gt;80&lt;&#x2F;port&gt;\n          &lt;nonProxyHosts&gt;local.netsome.host.com&lt;&#x2F;nonProxyHosts&gt;\n        &lt;&#x2F;proxy&gt;\n        --&gt;\n    &lt;&#x2F;proxies&gt;\n\n    &lt;!-- servers\n     身份验证配置文件列表，由系统中使用的服务器 ID 键入。 只要 Maven 必须连接到远程服务器，就可以使用身份验证配置文件\n     --&gt;\n    &lt;servers&gt;\n        &lt;server&gt;\n            &lt;id&gt;rdc-releases&lt;&#x2F;id&gt;\n            &lt;username&gt;6142af9089e55adfe52511c8&lt;&#x2F;username&gt;\n            &lt;password&gt;xqX8T6Ik8kOS&lt;&#x2F;password&gt;\n        &lt;&#x2F;server&gt;\n        &lt;server&gt;\n            &lt;id&gt;rdc-snapshots&lt;&#x2F;id&gt;\n            &lt;username&gt;6142af9089e55adfe52511c8&lt;&#x2F;username&gt;\n            &lt;password&gt;xqX8T6Ik8kOS&lt;&#x2F;password&gt;\n        &lt;&#x2F;server&gt;\n        &lt;!-- server\n         Specifies the authentication information to use when connecting to a particular server, identified by\n         a unique name within the system (referred to by the &#39;id&#39; attribute below).\n         \n         NOTE: You should either specify username&#x2F;password OR privateKey&#x2F;passphrase, since these pairings are\n               used together.\n        &lt;server&gt;\n          &lt;id&gt;deploymentRepo&lt;&#x2F;id&gt;\n          &lt;username&gt;repouser&lt;&#x2F;username&gt;\n          &lt;password&gt;repopwd&lt;&#x2F;password&gt;\n        &lt;&#x2F;server&gt;\n        --&gt;\n        &lt;!-- Another sample, using keys to authenticate.\n        &lt;server&gt;\n          &lt;id&gt;siteServer&lt;&#x2F;id&gt;\n          &lt;privateKey&gt;&#x2F;path&#x2F;to&#x2F;private&#x2F;key&lt;&#x2F;privateKey&gt;\n          &lt;passphrase&gt;optional; leave empty if not used.&lt;&#x2F;passphrase&gt;\n        &lt;&#x2F;server&gt;\n        --&gt;\n    &lt;&#x2F;servers&gt;\n\n    &lt;!-- mirrors\n     远程存储库镜像列表\n     --&gt;\n    &lt;mirrors&gt;\n        &lt;!-- mirror\n         Specifies a repository mirror site to use instead of a given repository. The repository that\n         this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used\n         for inheritance and direct lookup purposes, and must be unique across the set of mirrors.\n         \n        &lt;mirror&gt;\n          &lt;id&gt;mirrorId&lt;&#x2F;id&gt;\n          &lt;mirrorOf&gt;repositoryId&lt;&#x2F;mirrorOf&gt;\n          &lt;name&gt;Human Readable Name for this Mirror.&lt;&#x2F;name&gt;\n          &lt;url&gt;http:&#x2F;&#x2F;my.repository.com&#x2F;repo&#x2F;path&lt;&#x2F;url&gt;\n        &lt;&#x2F;mirror&gt;\n         --&gt;\n        &lt;mirror&gt;\n            &lt;id&gt;maven-default-http-blocker&lt;&#x2F;id&gt;\n            &lt;mirrorOf&gt;external:http:*&lt;&#x2F;mirrorOf&gt;\n            &lt;name&gt;Pseudo repository to mirror external repositories initially using HTTP.&lt;&#x2F;name&gt;\n            &lt;url&gt;http:&#x2F;&#x2F;0.0.0.0&#x2F;&lt;&#x2F;url&gt;\n            &lt;blocked&gt;true&lt;&#x2F;blocked&gt;\n        &lt;&#x2F;mirror&gt;\n        &lt;mirror&gt;\n            &lt;id&gt;mirror&lt;&#x2F;id&gt;\n            &lt;mirrorOf&gt;central,jcenter,!rdc-releases,!rdc-snapshots&lt;&#x2F;mirrorOf&gt;\n            &lt;name&gt;mirror&lt;&#x2F;name&gt;\n            &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;nexus&#x2F;content&#x2F;groups&#x2F;public&lt;&#x2F;url&gt;\n        &lt;&#x2F;mirror&gt;\n    &lt;&#x2F;mirrors&gt;\n\n    &lt;!-- profiles\n     一组构建过程的介绍，使用一个或多个激活 上述机制\n     出于继承目的，通过&lt;activatedProfiles&#x2F;&gt;激活配置文件或命令行，配置文件必须具有唯一的 ID\n     --&gt;\n    &lt;profiles&gt;\n        &lt;!-- profile\n        &lt;profile&gt;\n          &lt;id&gt;jdk-1.4&lt;&#x2F;id&gt;\n    \n          &lt;activation&gt;\n            &lt;jdk&gt;1.4&lt;&#x2F;jdk&gt;\n          &lt;&#x2F;activation&gt;\n    \n          &lt;repositories&gt;\n            &lt;repository&gt;\n              &lt;id&gt;jdk14&lt;&#x2F;id&gt;\n              &lt;name&gt;Repository for JDK 1.4 builds&lt;&#x2F;name&gt;\n              &lt;url&gt;http:&#x2F;&#x2F;www.myhost.com&#x2F;maven&#x2F;jdk14&lt;&#x2F;url&gt;\n              &lt;layout&gt;default&lt;&#x2F;layout&gt;\n              &lt;snapshotPolicy&gt;always&lt;&#x2F;snapshotPolicy&gt;\n            &lt;&#x2F;repository&gt;\n          &lt;&#x2F;repositories&gt;\n        &lt;&#x2F;profile&gt;\n        --&gt;\n\n        &lt;profile&gt;\n            &lt;id&gt;rdc&lt;&#x2F;id&gt;\n            &lt;properties&gt;\n                &lt;altReleaseDeploymentRepository&gt;\n                    rdc-releases::default::https:&#x2F;&#x2F;packages.aliyun.com&#x2F;maven&#x2F;repository&#x2F;2138380-release-8bpQtr&#x2F;\n                &lt;&#x2F;altReleaseDeploymentRepository&gt;\n                &lt;altSnapshotDeploymentRepository&gt;\n                    rdc-snapshots::default::https:&#x2F;&#x2F;packages.aliyun.com&#x2F;maven&#x2F;repository&#x2F;2138380-snapshot-3ojMOB&#x2F;\n                &lt;&#x2F;altSnapshotDeploymentRepository&gt;\n            &lt;&#x2F;properties&gt;\n            &lt;repositories&gt;\n                &lt;repository&gt;\n                    &lt;id&gt;central&lt;&#x2F;id&gt;\n                    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;nexus&#x2F;content&#x2F;groups&#x2F;public&lt;&#x2F;url&gt;\n                    &lt;releases&gt;\n                        &lt;enabled&gt;true&lt;&#x2F;enabled&gt;\n                    &lt;&#x2F;releases&gt;\n                    &lt;snapshots&gt;\n                        &lt;enabled&gt;false&lt;&#x2F;enabled&gt;\n                    &lt;&#x2F;snapshots&gt;\n                &lt;&#x2F;repository&gt;\n                &lt;repository&gt;\n                    &lt;id&gt;snapshots&lt;&#x2F;id&gt;\n                    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;nexus&#x2F;content&#x2F;groups&#x2F;public&lt;&#x2F;url&gt;\n                    &lt;releases&gt;\n                        &lt;enabled&gt;false&lt;&#x2F;enabled&gt;\n                    &lt;&#x2F;releases&gt;\n                    &lt;snapshots&gt;\n                        &lt;enabled&gt;true&lt;&#x2F;enabled&gt;\n                    &lt;&#x2F;snapshots&gt;\n                &lt;&#x2F;repository&gt;\n                &lt;repository&gt;\n                    &lt;id&gt;rdc-releases&lt;&#x2F;id&gt;\n                    &lt;url&gt;https:&#x2F;&#x2F;packages.aliyun.com&#x2F;maven&#x2F;repository&#x2F;2138380-release-8bpQtr&#x2F;&lt;&#x2F;url&gt;\n                    &lt;releases&gt;\n                        &lt;enabled&gt;true&lt;&#x2F;enabled&gt;\n                    &lt;&#x2F;releases&gt;\n                    &lt;snapshots&gt;\n                        &lt;enabled&gt;false&lt;&#x2F;enabled&gt;\n                    &lt;&#x2F;snapshots&gt;\n                &lt;&#x2F;repository&gt;\n                &lt;repository&gt;\n                    &lt;id&gt;rdc-snapshots&lt;&#x2F;id&gt;\n                    &lt;url&gt;https:&#x2F;&#x2F;packages.aliyun.com&#x2F;maven&#x2F;repository&#x2F;2138380-snapshot-3ojMOB&#x2F;&lt;&#x2F;url&gt;\n                    &lt;releases&gt;\n                        &lt;enabled&gt;false&lt;&#x2F;enabled&gt;\n                    &lt;&#x2F;releases&gt;\n                    &lt;snapshots&gt;\n                        &lt;enabled&gt;true&lt;&#x2F;enabled&gt;\n                    &lt;&#x2F;snapshots&gt;\n                &lt;&#x2F;repository&gt;\n            &lt;&#x2F;repositories&gt;\n            &lt;pluginRepositories&gt;\n                &lt;pluginRepository&gt;\n                    &lt;id&gt;central&lt;&#x2F;id&gt;\n                    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;nexus&#x2F;content&#x2F;groups&#x2F;public&lt;&#x2F;url&gt;\n                    &lt;releases&gt;\n                        &lt;enabled&gt;true&lt;&#x2F;enabled&gt;\n                    &lt;&#x2F;releases&gt;\n                    &lt;snapshots&gt;\n                        &lt;enabled&gt;false&lt;&#x2F;enabled&gt;\n                    &lt;&#x2F;snapshots&gt;\n                &lt;&#x2F;pluginRepository&gt;\n                &lt;pluginRepository&gt;\n                    &lt;id&gt;snapshots&lt;&#x2F;id&gt;\n                    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;nexus&#x2F;content&#x2F;groups&#x2F;public&lt;&#x2F;url&gt;\n                    &lt;releases&gt;\n                        &lt;enabled&gt;false&lt;&#x2F;enabled&gt;\n                    &lt;&#x2F;releases&gt;\n                    &lt;snapshots&gt;\n                        &lt;enabled&gt;true&lt;&#x2F;enabled&gt;\n                    &lt;&#x2F;snapshots&gt;\n                &lt;&#x2F;pluginRepository&gt;\n                &lt;pluginRepository&gt;\n                    &lt;id&gt;rdc-releases&lt;&#x2F;id&gt;\n                    &lt;url&gt;https:&#x2F;&#x2F;packages.aliyun.com&#x2F;maven&#x2F;repository&#x2F;2138380-release-8bpQtr&#x2F;&lt;&#x2F;url&gt;\n                    &lt;releases&gt;\n                        &lt;enabled&gt;true&lt;&#x2F;enabled&gt;\n                    &lt;&#x2F;releases&gt;\n                    &lt;snapshots&gt;\n                        &lt;enabled&gt;false&lt;&#x2F;enabled&gt;\n                    &lt;&#x2F;snapshots&gt;\n                &lt;&#x2F;pluginRepository&gt;\n                &lt;pluginRepository&gt;\n                    &lt;id&gt;rdc-snapshots&lt;&#x2F;id&gt;\n                    &lt;url&gt;https:&#x2F;&#x2F;packages.aliyun.com&#x2F;maven&#x2F;repository&#x2F;2138380-snapshot-3ojMOB&#x2F;&lt;&#x2F;url&gt;\n                    &lt;releases&gt;\n                        &lt;enabled&gt;false&lt;&#x2F;enabled&gt;\n                    &lt;&#x2F;releases&gt;\n                    &lt;snapshots&gt;\n                        &lt;enabled&gt;true&lt;&#x2F;enabled&gt;\n                    &lt;&#x2F;snapshots&gt;\n                &lt;&#x2F;pluginRepository&gt;\n            &lt;&#x2F;pluginRepositories&gt;\n        &lt;&#x2F;profile&gt;\n    &lt;&#x2F;profiles&gt;\n\n    &lt;!-- activeProfiles\n     List of profiles that are active for all builds.\n     \n    &lt;activeProfiles&gt;\n      &lt;activeProfile&gt;alwaysActiveProfile&lt;&#x2F;activeProfile&gt;\n      &lt;activeProfile&gt;anotherAlwaysActiveProfile&lt;&#x2F;activeProfile&gt;\n    &lt;&#x2F;activeProfiles&gt;\n    --&gt;\n    &lt;activeProfiles&gt;\n        &lt;activeProfile&gt;rdc&lt;&#x2F;activeProfile&gt;\n    &lt;&#x2F;activeProfiles&gt;\n&lt;&#x2F;settings&gt;</code></pre>\n\n<h3 id=\"pom-xml\"><a href=\"#pom-xml\" class=\"headerlink\" title=\"pom.xml\"></a>pom.xml</h3><h4 id=\"文件详解-1\"><a href=\"#文件详解-1\" class=\"headerlink\" title=\"文件详解\"></a>文件详解</h4><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;project xmlns&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0&quot; \nxmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot; \nxsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;POM&#x2F;4.0.0 http:&#x2F;&#x2F;maven.apache.org&#x2F;maven-v4_0_0.xsd &quot;&gt; \n\n    &lt;!-- 父项目的坐标。如果项目中没有规定某个元素的值，那么父项目中的对应值即为项目的默认值。\n         坐标包括group ID，artifact ID和 version。 --&gt; \n    &lt;parent&gt; \n        &lt;!-- 被继承的父项目的构件标识符 --&gt; \n        &lt;artifactId&gt;xxx&lt;&#x2F;artifactId&gt;\n        &lt;!-- 被继承的父项目的全球唯一标识符 --&gt;\n        &lt;groupId&gt;xxx&lt;&#x2F;groupId&gt;\n        &lt;!-- 被继承的父项目的版本 --&gt; \n        &lt;version&gt;xxx&lt;&#x2F;version&gt;\n        &lt;!-- 父项目的pom.xml文件的相对路径。相对路径允许你选择一个不同的路径。默认值是..&#x2F;pom.xml。\n             Maven首先在构建当前项目的地方寻找父项目的pom，其次在文件系统的这个位置（relativePath位置），\n             然后在本地仓库，最后在远程仓库寻找父项目的pom。 --&gt; \n        &lt;relativePath&gt;xxx&lt;&#x2F;relativePath&gt; \n    &lt;&#x2F;parent&gt; \n\n    &lt;!-- 声明项目描述符遵循哪一个POM模型版本。模型本身的版本很少改变，虽然如此，但它仍然是必不可少的，\n         这是为了当Maven引入了新的特性或者其他模型变更的时候，确保稳定性。 --&gt; \n    &lt;modelVersion&gt; 4.0.0 &lt;&#x2F;modelVersion&gt; \n\n    &lt;!-- 项目的全球唯一标识符，通常使用全限定的包名区分该项目和其他项目。并且构建时生成的路径也是由此生成， \n         如com.mycompany.app生成的相对路径为：&#x2F;com&#x2F;mycompany&#x2F;app --&gt; \n    &lt;groupId&gt;xxx&lt;&#x2F;groupId&gt;\n    &lt;!-- 构件的标识符，它和group ID一起唯一标识一个构件。换句话说，你不能有两个不同的项目拥有同样的artifact ID\n         和groupID；在某个特定的group ID下，artifact ID也必须是唯一的。构件是项目产生的或使用的一个东西，Maven\n         为项目产生的构件包括：JARs，源码，二进制发布和WARs等。 --&gt; \n    &lt;artifactId&gt;xxx&lt;&#x2F;artifactId&gt;\n    &lt;!-- 项目产生的构件类型，例如jar、war、ear、pom。插件可以创建他们自己的构件类型，所以前面列的不是全部构件类型 --&gt; \n    &lt;packaging&gt; jar &lt;&#x2F;packaging&gt;\n    &lt;!-- 项目当前版本，格式为:主版本.次版本.增量版本-限定版本号 --&gt; \n    &lt;version&gt; 1.0-SNAPSHOT &lt;&#x2F;version&gt;\n    &lt;!-- 项目的名称, Maven产生的文档用 --&gt; \n    &lt;name&gt; xxx-maven &lt;&#x2F;name&gt;\n    &lt;!-- 项目主页的URL, Maven产生的文档用 --&gt; \n    &lt;url&gt; http:&#x2F;&#x2F;maven.apache.org &lt;&#x2F;url&gt;\n    &lt;!-- 项目的详细描述, Maven 产生的文档用。 当这个元素能够用HTML格式描述时（例如，CDATA中的文本会被解析器忽略，\n         就可以包含HTML标签）， 不鼓励使用纯文本描述。如果你需要修改产生的web站点的索引页面，你应该修改你自己的\n         索引页文件，而不是调整这里的文档。 --&gt; \n    &lt;description&gt; A maven project to study maven. &lt;&#x2F;description&gt; \n\n    &lt;!-- 以值替代名称，Properties可以在整个POM中使用，也可以作为触发条件（见settings.xml配置文件里\n         activation元素的说明）。格式是&lt;name&gt;value&lt;&#x2F;name&gt;。 --&gt; \n    &lt;properties&gt;\n        &lt;name&gt;value&lt;&#x2F;name&gt;\n    &lt;&#x2F;properties&gt; \n    \n    &lt;!-- 描述了这个项目构建环境中的前提条件。 --&gt; \n    &lt;prerequisites&gt; \n        &lt;!-- 构建该项目或使用该插件所需要的Maven的最低版本 --&gt; \n        &lt;maven&gt;&lt;&#x2F;maven&gt; \n    &lt;&#x2F;prerequisites&gt; \n\n    &lt;!-- 项目的问题管理系统(Bugzilla, Jira, Scarab,或任何你喜欢的问题管理系统)的名称和URL，本例为 jira --&gt; \n    &lt;issueManagement&gt; \n        &lt;!-- 问题管理系统（例如jira）的名字， --&gt; \n        &lt;system&gt; jira &lt;&#x2F;system&gt;\n        &lt;!-- 该项目使用的问题管理系统的URL --&gt; \n        &lt;url&gt; http:&#x2F;&#x2F;jira.baidu.com&#x2F;banseon &lt;&#x2F;url&gt; \n    &lt;&#x2F;issueManagement&gt; \n\n    &lt;!-- 项目持续集成信息 --&gt; \n    &lt;ciManagement&gt; \n        &lt;!-- 持续集成系统的名字，例如continuum --&gt; \n        &lt;system&gt;&lt;&#x2F;system&gt;\n        &lt;!-- 该项目使用的持续集成系统的URL（如果持续集成系统有web接口的话）。 --&gt; \n        &lt;url&gt;&lt;&#x2F;url&gt;\n        &lt;!-- 构建完成时，需要通知的开发者&#x2F;用户的配置项。包括被通知者信息和通知条件（错误，失败，成功，警告） --&gt; \n        &lt;notifiers&gt; \n            &lt;!-- 配置一种方式，当构建中断时，以该方式通知用户&#x2F;开发者 --&gt; \n            &lt;notifier&gt; \n                &lt;!-- 传送通知的途径 --&gt; \n                &lt;type&gt;&lt;&#x2F;type&gt;\n                &lt;!-- 发生错误时是否通知 --&gt; \n                &lt;sendOnError&gt;&lt;&#x2F;sendOnError&gt;\n                &lt;!-- 构建失败时是否通知 --&gt; \n                &lt;sendOnFailure&gt;&lt;&#x2F;sendOnFailure&gt;\n                &lt;!-- 构建成功时是否通知 --&gt; \n                &lt;sendOnSuccess&gt;&lt;&#x2F;sendOnSuccess&gt;\n                &lt;!-- 发生警告时是否通知 --&gt; \n                &lt;sendOnWarning&gt;&lt;&#x2F;sendOnWarning&gt;\n                &lt;!-- 不赞成使用。通知发送到哪里 --&gt; \n                &lt;address&gt;&lt;&#x2F;address&gt;\n                &lt;!-- 扩展配置项 --&gt; \n                &lt;configuration&gt;&lt;&#x2F;configuration&gt; \n            &lt;&#x2F;notifier&gt; \n        &lt;&#x2F;notifiers&gt; \n    &lt;&#x2F;ciManagement&gt; \n\n    &lt;!-- 项目创建年份，4位数字。当产生版权信息时需要使用这个值。 --&gt; \n    &lt;inceptionYear &#x2F;&gt; \n\n    &lt;!-- 项目相关邮件列表信息 --&gt; \n    &lt;mailingLists&gt; \n        &lt;!-- 该元素描述了项目相关的所有邮件列表。自动产生的网站引用这些信息。 --&gt; \n        &lt;mailingList&gt; \n            &lt;!-- 邮件的名称 --&gt; \n            &lt;name&gt; Demo &lt;&#x2F;name&gt;\n            &lt;!-- 发送邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建 --&gt; \n            &lt;post&gt; banseon@126.com &lt;&#x2F;post&gt;\n            &lt;!-- 订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建 --&gt; \n            &lt;subscribe&gt; banseon@126.com &lt;&#x2F;subscribe&gt;\n            &lt;!-- 取消订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建 --&gt; \n            &lt;unsubscribe&gt; banseon@126.com &lt;&#x2F;unsubscribe&gt;\n            &lt;!-- 你可以浏览邮件信息的URL --&gt; \n            &lt;archive&gt; http:&#x2F;hi.baidu.com&#x2F;banseon&#x2F;demo&#x2F;dev&#x2F; &lt;&#x2F;archive&gt; \n        &lt;&#x2F;mailingList&gt; \n    &lt;&#x2F;mailingLists&gt; \n\n    &lt;!-- 项目开发者列表 --&gt; \n    &lt;developers&gt; \n        &lt;!-- 某个项目开发者的信息 --&gt; \n        &lt;developer&gt; \n            &lt;!-- SCM里项目开发者的唯一标识符 --&gt; \n            &lt;id&gt; HELLO WORLD &lt;&#x2F;id&gt;\n            &lt;!-- 项目开发者的全名 --&gt; \n            &lt;name&gt; banseon &lt;&#x2F;name&gt;\n            &lt;!-- 项目开发者的email --&gt; \n            &lt;email&gt; banseon@126.com &lt;&#x2F;email&gt;\n            &lt;!-- 项目开发者的主页的URL --&gt; \n            &lt;url&gt;&lt;&#x2F;url&gt;\n            &lt;!-- 项目开发者在项目中扮演的角色，角色元素描述了各种角色 --&gt; \n            &lt;roles&gt; \n                &lt;role&gt; Project Manager &lt;&#x2F;role&gt; \n                &lt;role&gt; Architect &lt;&#x2F;role&gt; \n            &lt;&#x2F;roles&gt;\n            &lt;!-- 项目开发者所属组织 --&gt; \n            &lt;organization&gt; demo &lt;&#x2F;organization&gt;\n            &lt;!-- 项目开发者所属组织的URL --&gt; \n            &lt;organizationUrl&gt; http:&#x2F;&#x2F;hi.baidu.com&#x2F;xxx &lt;&#x2F;organizationUrl&gt;\n            &lt;!-- 项目开发者属性，如即时消息如何处理等 --&gt; \n            &lt;properties&gt; \n                &lt;dept&gt; No &lt;&#x2F;dept&gt; \n            &lt;&#x2F;properties&gt;\n            &lt;!-- 项目开发者所在时区， -11到12范围内的整数。 --&gt; \n            &lt;timezone&gt; -5 &lt;&#x2F;timezone&gt; \n        &lt;&#x2F;developer&gt; \n    &lt;&#x2F;developers&gt; \n\n    &lt;!-- 项目的其他贡献者列表 --&gt; \n    &lt;contributors&gt; \n        &lt;!-- 项目的其他贡献者。参见developers&#x2F;developer元素 --&gt; \n        &lt;contributor&gt; \n            &lt;!-- 项目贡献者的全名 --&gt; \n            &lt;name&gt;&lt;&#x2F;name&gt;\n            &lt;!-- 项目贡献者的email --&gt;\n            &lt;email&gt;&lt;&#x2F;email&gt;\n            &lt;!-- 项目贡献者的主页的URL --&gt;\n            &lt;url&gt;&lt;&#x2F;url&gt;\n            &lt;!-- 项目贡献者所属组织 --&gt;\n            &lt;organization&gt;&lt;&#x2F;organization&gt;\n            &lt;!-- 项目贡献者所属组织的URL --&gt;\n            &lt;organizationUrl&gt;&lt;&#x2F;organizationUrl&gt;\n            &lt;!-- 项目贡献者在项目中扮演的角色，角色元素描述了各种角色 --&gt; \n            &lt;roles&gt; \n                &lt;role&gt; Project Manager &lt;&#x2F;role&gt; \n                &lt;role&gt; Architect &lt;&#x2F;role&gt; \n            &lt;&#x2F;roles&gt;\n            &lt;!-- 项目贡献者所在时区， -11到12范围内的整数。 --&gt; \n            &lt;timezone&gt;&lt;&#x2F;timezone&gt;\n            &lt;!-- 项目贡献者属性，如即时消息如何处理等 --&gt; \n            &lt;properties&gt; \n                &lt;dept&gt; No &lt;&#x2F;dept&gt; \n            &lt;&#x2F;properties&gt;  \n        &lt;&#x2F;contributor&gt; \n    &lt;&#x2F;contributors&gt; \n\n    &lt;!-- 该元素描述了项目所有License列表。 应该只列出该项目的license列表，不要列出依赖项目的 license列表。\n         如果列出多个license，用户可以选择它们中的一个而不是接受所有license。 --&gt; \n    &lt;licenses&gt; \n        &lt;!-- 描述了项目的license，用于生成项目的web站点的license页面，其他一些报表和validation也会用到该元素。 --&gt; \n        &lt;license&gt; \n            &lt;!-- license用于法律上的名称 --&gt; \n            &lt;name&gt; Apache 2 &lt;&#x2F;name&gt;\n            &lt;!-- 官方的license正文页面的URL --&gt; \n            &lt;url&gt; http:&#x2F;&#x2F;www.baidu.com&#x2F;banseon&#x2F;LICENSE-2.0.txt &lt;&#x2F;url&gt;\n            &lt;!-- 项目分发的主要方式： \n                    repo，可以从Maven库下载 \n                    manual， 用户必须手动下载和安装依赖 --&gt; \n            &lt;distribution&gt; repo &lt;&#x2F;distribution&gt;\n            &lt;!-- 关于license的补充信息 --&gt; \n            &lt;comments&gt; A business-friendly OSS license &lt;&#x2F;comments&gt; \n        &lt;&#x2F;license&gt; \n    &lt;&#x2F;licenses&gt; \n\n    &lt;!-- SCM(Source Control Management)标签允许你配置你的代码库，供Maven web站点和其它插件使用。 --&gt; \n    &lt;scm&gt; \n        &lt;!-- SCM的URL,该URL描述了版本库和如何连接到版本库。欲知详情，请看SCMs提供的URL格式和列表。该连接只读。 --&gt; \n        &lt;connection&gt; \n            scm:svn:http:&#x2F;&#x2F;svn.baidu.com&#x2F;banseon&#x2F;maven&#x2F;banseon&#x2F;banseon-maven2-trunk(dao-trunk)\n        &lt;&#x2F;connection&gt;\n        &lt;!-- 给开发者使用的，类似connection元素。即该连接不仅仅只读 --&gt; \n        &lt;developerConnection&gt; \n            scm:svn:http:&#x2F;&#x2F;svn.baidu.com&#x2F;banseon&#x2F;maven&#x2F;banseon&#x2F;dao-trunk \n        &lt;&#x2F;developerConnection&gt;\n        &lt;!-- 当前代码的标签，在开发阶段默认为HEAD --&gt; \n        &lt;tag&gt;&lt;&#x2F;tag&gt;\n        &lt;!-- 指向项目的可浏览SCM库（例如ViewVC或者Fisheye）的URL。 --&gt; \n        &lt;url&gt; http:&#x2F;&#x2F;svn.baidu.com&#x2F;banseon &lt;&#x2F;url&gt; \n    &lt;&#x2F;scm&gt; \n\n    &lt;!-- 描述项目所属组织的各种属性。Maven产生的文档用 --&gt; \n    &lt;organization&gt; \n        &lt;!-- 组织的全名 --&gt; \n        &lt;name&gt; demo &lt;&#x2F;name&gt;\n        &lt;!-- 组织主页的URL --&gt; \n        &lt;url&gt; http:&#x2F;&#x2F;www.baidu.com&#x2F;banseon &lt;&#x2F;url&gt; \n    &lt;&#x2F;organization&gt; \n\n    &lt;!-- 构建项目需要的信息 --&gt; \n    &lt;build&gt; \n        &lt;!-- 该元素设置了项目源码目录，当构建项目的时候，构建系统会编译目录里的源码。该路径是相对\n             于pom.xml的相对路径。 --&gt; \n        &lt;sourceDirectory&gt;&lt;&#x2F;sourceDirectory&gt; \n\n        &lt;!-- 该元素设置了项目脚本源码目录，该目录和源码目录不同：绝大多数情况下，该目录下的内容会\n             被拷贝到输出目录(因为脚本是被解释的，而不是被编译的)。 --&gt; \n        &lt;scriptSourceDirectory&gt;&lt;&#x2F;scriptSourceDirectory&gt; \n\n        &lt;!-- 该元素设置了项目单元测试使用的源码目录，当测试项目的时候，构建系统会编译目录里的源码。\n             该路径是相对于pom.xml的相对路径。 --&gt; \n        &lt;testSourceDirectory&gt;&lt;&#x2F;testSourceDirectory&gt; \n\n        &lt;!-- 被编译过的应用程序class文件存放的目录。 --&gt; \n        &lt;outputDirectory&gt;&lt;&#x2F;outputDirectory&gt; \n\n        &lt;!-- 被编译过的测试class文件存放的目录。 --&gt; \n        &lt;testOutputDirectory&gt;&lt;&#x2F;testOutputDirectory&gt; \n\n        &lt;!-- 使用来自该项目的一系列构建扩展 --&gt; \n        &lt;extensions&gt; \n            &lt;!-- 描述使用到的构建扩展。 --&gt; \n            &lt;extension&gt; \n                &lt;!-- 构建扩展的groupId --&gt; \n                &lt;groupId&gt;&lt;&#x2F;groupId&gt; \n\n                &lt;!-- 构建扩展的artifactId --&gt; \n                &lt;artifactId&gt;&lt;&#x2F;artifactId&gt; \n\n                &lt;!-- 构建扩展的版本 --&gt; \n                &lt;version&gt;&lt;&#x2F;version&gt; \n            &lt;&#x2F;extension&gt; \n        &lt;&#x2F;extensions&gt; \n\n        &lt;!-- 当项目没有规定目标（Maven2 叫做阶段）时的默认值 --&gt; \n        &lt;defaultGoal&gt;&lt;&#x2F;defaultGoal&gt; \n\n        &lt;!-- 这个元素描述了项目相关的所有资源路径列表，例如和项目相关的属性文件，这些资源被包含在\n             最终的打包文件里。 --&gt; \n        &lt;resources&gt; \n            &lt;!-- 这个元素描述了项目相关或测试相关的所有资源路径 --&gt; \n            &lt;resource&gt; \n                &lt;!-- 描述了资源的目标路径。该路径相对target&#x2F;classes目录（例如$&#123;project.build.outputDirectory&#125;）。\n                     举个例子，如果你想资源在特定的包里(org.apache.maven.messages)，你就必须该元素设置为\n                    org&#x2F;apache&#x2F;maven&#x2F;messages。然而，如果你只是想把资源放到源码目录结构里，就不需要该配置。 --&gt; \n                &lt;targetPath&gt;&lt;&#x2F;targetPath&gt; \n\n                &lt;!-- 是否使用参数值代替参数名。参数值取自properties元素或者文件里配置的属性，文件在filters元素\n                     里列出。 --&gt; \n                &lt;filtering&gt;&lt;&#x2F;filtering&gt;\n\n                &lt;!-- 描述存放资源的目录，该路径相对POM路径 --&gt; \n                &lt;directory&gt;&lt;&#x2F;directory&gt;\n\n                &lt;!-- 包含的模式列表，例如**&#x2F;*.xml. --&gt; \n                &lt;includes&gt;\n                    &lt;include&gt;&lt;&#x2F;include&gt;\n                &lt;&#x2F;includes&gt;\n\n                &lt;!-- 排除的模式列表，例如**&#x2F;*.xml --&gt;\n                &lt;excludes&gt;\n                    &lt;exclude&gt;&lt;&#x2F;exclude&gt;\n                &lt;&#x2F;excludes&gt;\n            &lt;&#x2F;resource&gt; \n        &lt;&#x2F;resources&gt; \n\n        &lt;!-- 这个元素描述了单元测试相关的所有资源路径，例如和单元测试相关的属性文件。 --&gt; \n        &lt;testResources&gt; \n            &lt;!-- 这个元素描述了测试相关的所有资源路径，参见build&#x2F;resources&#x2F;resource元素的说明 --&gt; \n            &lt;testResource&gt; \n                &lt;!-- 描述了测试相关的资源的目标路径。该路径相对target&#x2F;classes目录（例如$&#123;project.build.outputDirectory&#125;）。\n                     举个例子，如果你想资源在特定的包里(org.apache.maven.messages)，你就必须该元素设置为\n                    org&#x2F;apache&#x2F;maven&#x2F;messages。然而，如果你只是想把资源放到源码目录结构里，就不需要该配置。 --&gt; \n                &lt;targetPath&gt;&lt;&#x2F;targetPath&gt; \n\n                &lt;!-- 是否使用参数值代替参数名。参数值取自properties元素或者文件里配置的属性，文件在filters元素\n                     里列出。 --&gt; \n                &lt;filtering&gt;&lt;&#x2F;filtering&gt;\n\n                &lt;!-- 描述存放测试相关的资源的目录，该路径相对POM路径 --&gt; \n                &lt;directory&gt;&lt;&#x2F;directory&gt;\n\n                &lt;!-- 包含的模式列表，例如**&#x2F;*.xml. --&gt; \n                &lt;includes&gt;\n                    &lt;include&gt;&lt;&#x2F;include&gt;\n                &lt;&#x2F;includes&gt;\n\n                &lt;!-- 排除的模式列表，例如**&#x2F;*.xml --&gt;\n                &lt;excludes&gt;\n                    &lt;exclude&gt;&lt;&#x2F;exclude&gt;\n                &lt;&#x2F;excludes&gt; \n            &lt;&#x2F;testResource&gt; \n        &lt;&#x2F;testResources&gt; \n\n        &lt;!-- 构建产生的所有文件存放的目录 --&gt; \n        &lt;directory&gt;&lt;&#x2F;directory&gt; \n\n        &lt;!-- 产生的构件的文件名，默认值是$&#123;artifactId&#125;-$&#123;version&#125;。 --&gt; \n        &lt;finalName&gt;&lt;&#x2F;finalName&gt; \n\n        &lt;!-- 当filtering开关打开时，使用到的过滤器属性文件列表 --&gt; \n        &lt;filters&gt;&lt;&#x2F;filters&gt; \n\n        &lt;!-- 子项目可以引用的默认插件信息。该插件配置项直到被引用时才会被解析或绑定到生命周期。给定插件的任何本\n             地配置都会覆盖这里的配置 --&gt; \n        &lt;pluginManagement&gt; \n            &lt;!-- 使用的插件列表 。 --&gt; \n            &lt;plugins&gt; \n                &lt;!-- plugin元素包含描述插件所需要的信息。 --&gt; \n                &lt;plugin&gt; \n                    &lt;!-- 插件在仓库里的group ID --&gt; \n                    &lt;groupId&gt;&lt;&#x2F;groupId&gt; \n\n                    &lt;!-- 插件在仓库里的artifact ID --&gt; \n                    &lt;artifactId&gt;&lt;&#x2F;artifactId&gt; \n\n                    &lt;!-- 被使用的插件的版本（或版本范围） --&gt; \n                    &lt;version&gt;&lt;&#x2F;version&gt; \n\n                    &lt;!-- 是否从该插件下载Maven扩展（例如打包和类型处理器），由于性能原因，只有在真需要下载时，该\n                         元素才被设置成enabled。 --&gt; \n                    &lt;extensions&gt;true&#x2F;false&lt;&#x2F;extensions&gt; \n\n                    &lt;!-- 在构建生命周期中执行一组目标的配置。每个目标可能有不同的配置。 --&gt; \n                    &lt;executions&gt; \n                        &lt;!-- execution元素包含了插件执行需要的信息 --&gt; \n                        &lt;execution&gt; \n                            &lt;!-- 执行目标的标识符，用于标识构建过程中的目标，或者匹配继承过程中需要合并的执行目标 --&gt; \n                            &lt;id&gt;&lt;&#x2F;id&gt;\n\n                            &lt;!-- 绑定了目标的构建生命周期阶段，如果省略，目标会被绑定到源数据里配置的默认阶段 --&gt; \n                            &lt;phase&gt;&lt;&#x2F;phase&gt;\n\n                            &lt;!-- 配置的执行目标 --&gt; \n                            &lt;goals&gt;&lt;&#x2F;goals&gt; \n\n                            &lt;!-- 配置是否被传播到子POM --&gt; \n                            &lt;inherited&gt;true&#x2F;false&lt;&#x2F;inherited&gt; \n\n                            &lt;!-- 作为DOM对象的配置 --&gt; \n                            &lt;configuration&gt;&lt;&#x2F;configuration&gt;\n                        &lt;&#x2F;execution&gt; \n                    &lt;&#x2F;executions&gt; \n\n                    &lt;!-- 项目引入插件所需要的额外依赖 --&gt; \n                    &lt;dependencies&gt;\n                        &lt;!-- 参见dependencies&#x2F;dependency元素 --&gt; \n                        &lt;dependency&gt; \n                        &lt;&#x2F;dependency&gt; \n                    &lt;&#x2F;dependencies&gt; \n\n                    &lt;!-- 任何配置是否被传播到子项目 --&gt; \n                    &lt;inherited&gt;true&#x2F;false&lt;&#x2F;inherited&gt;\n\n                    &lt;!-- 作为DOM对象的配置 --&gt; \n                    &lt;configuration&gt;&lt;&#x2F;configuration&gt;\n                &lt;&#x2F;plugin&gt; \n            &lt;&#x2F;plugins&gt; \n        &lt;&#x2F;pluginManagement&gt; \n\n        &lt;!-- 该项目使用的插件列表 。 --&gt; \n        &lt;plugins&gt; \n            &lt;!-- plugin元素包含描述插件所需要的信息。 --&gt; \n            &lt;plugin&gt; \n                &lt;!-- 插件在仓库里的group ID --&gt; \n                &lt;groupId&gt;&lt;&#x2F;groupId&gt; \n\n                &lt;!-- 插件在仓库里的artifact ID --&gt; \n                &lt;artifactId&gt;&lt;&#x2F;artifactId&gt; \n\n                &lt;!-- 被使用的插件的版本（或版本范围） --&gt; \n                &lt;version&gt;&lt;&#x2F;version&gt; \n\n                &lt;!-- 是否从该插件下载Maven扩展（例如打包和类型处理器），由于性能原因，只有在真需要下载时，该\n                     元素才被设置成enabled。 --&gt; \n                &lt;extensions&gt;true&#x2F;false&lt;&#x2F;extensions&gt; \n\n                &lt;!-- 在构建生命周期中执行一组目标的配置。每个目标可能有不同的配置。 --&gt; \n                &lt;executions&gt; \n                    &lt;!-- execution元素包含了插件执行需要的信息 --&gt; \n                    &lt;execution&gt; \n                        &lt;!-- 执行目标的标识符，用于标识构建过程中的目标，或者匹配继承过程中需要合并的执行目标 --&gt; \n                        &lt;id&gt;&lt;&#x2F;id&gt;\n\n                        &lt;!-- 绑定了目标的构建生命周期阶段，如果省略，目标会被绑定到源数据里配置的默认阶段 --&gt; \n                        &lt;phase&gt;&lt;&#x2F;phase&gt;\n\n                        &lt;!-- 配置的执行目标 --&gt; \n                        &lt;goals&gt;&lt;&#x2F;goals&gt; \n\n                        &lt;!-- 配置是否被传播到子POM --&gt; \n                        &lt;inherited&gt;true&#x2F;false&lt;&#x2F;inherited&gt; \n\n                        &lt;!-- 作为DOM对象的配置 --&gt; \n                        &lt;configuration&gt;&lt;&#x2F;configuration&gt;\n                    &lt;&#x2F;execution&gt; \n                &lt;&#x2F;executions&gt; \n\n                &lt;!-- 项目引入插件所需要的额外依赖 --&gt; \n                &lt;dependencies&gt;\n                    &lt;!-- 参见dependencies&#x2F;dependency元素 --&gt; \n                    &lt;dependency&gt; \n                    &lt;&#x2F;dependency&gt; \n                &lt;&#x2F;dependencies&gt; \n\n                &lt;!-- 任何配置是否被传播到子项目 --&gt; \n                &lt;inherited&gt;true&#x2F;false&lt;&#x2F;inherited&gt; \n\n                &lt;!-- 作为DOM对象的配置 --&gt; \n                &lt;configuration&gt;&lt;&#x2F;configuration&gt; \n            &lt;&#x2F;plugin&gt; \n        &lt;&#x2F;plugins&gt;\n    &lt;&#x2F;build&gt; \n\n    &lt;!-- 在列的项目构建profile，如果被激活，会修改构建处理 --&gt; \n    &lt;profiles&gt; \n        &lt;!-- 根据环境参数或命令行参数激活某个构建处理 --&gt; \n        &lt;profile&gt; \n            &lt;!-- 构建配置的唯一标识符。即用于命令行激活，也用于在继承时合并具有相同标识符的profile。 --&gt; \n            &lt;id&gt;&lt;&#x2F;id&gt;\n\n            &lt;!-- 自动触发profile的条件逻辑。Activation是profile的开启钥匙。profile的力量来自于它能够\n                 在某些特定的环境中自动使用某些特定的值；这些环境通过activation元素指定。activation元\n                 素并不是激活profile的唯一方式。 --&gt; \n            &lt;activation&gt; \n                &lt;!-- profile默认是否激活的标志 --&gt; \n                &lt;activeByDefault&gt;true&#x2F;false&lt;&#x2F;activeByDefault&gt; \n\n                &lt;!-- 当匹配的jdk被检测到，profile被激活。例如，1.4激活JDK1.4，1.4.0_2，而!1.4激活所有版本\n                     不是以1.4开头的JDK。 --&gt; \n                &lt;jdk&gt;jdk版本，如:1.7&lt;&#x2F;jdk&gt; \n\n                &lt;!-- 当匹配的操作系统属性被检测到，profile被激活。os元素可以定义一些操作系统相关的属性。 --&gt; \n                &lt;os&gt; \n                    &lt;!-- 激活profile的操作系统的名字 --&gt; \n                    &lt;name&gt; Windows XP &lt;&#x2F;name&gt; \n\n                    &lt;!-- 激活profile的操作系统所属家族(如 &#39;windows&#39;) --&gt; \n                    &lt;family&gt; Windows &lt;&#x2F;family&gt; \n\n                    &lt;!-- 激活profile的操作系统体系结构 --&gt; \n                    &lt;arch&gt; x86 &lt;&#x2F;arch&gt; \n\n                    &lt;!-- 激活profile的操作系统版本 --&gt; \n                    &lt;version&gt; 5.1.2600 &lt;&#x2F;version&gt; \n                &lt;&#x2F;os&gt; \n\n                &lt;!-- 如果Maven检测到某一个属性（其值可以在POM中通过$&#123;名称&#125;引用），其拥有对应的名称和值，Profile\n                     就会被激活。如果值字段是空的，那么存在属性名称字段就会激活profile，否则按区分大小写方式匹\n                     配属性值字段 --&gt; \n                &lt;property&gt; \n                    &lt;!-- 激活profile的属性的名称 --&gt; \n                    &lt;name&gt; mavenVersion &lt;&#x2F;name&gt; \n\n                    &lt;!-- 激活profile的属性的值 --&gt; \n                    &lt;value&gt; 2.0.3 &lt;&#x2F;value&gt; \n                &lt;&#x2F;property&gt; \n\n                &lt;!-- 提供一个文件名，通过检测该文件的存在或不存在来激活profile。missing检查文件是否存在，如果不存在则激活 \n                     profile。另一方面，exists则会检查文件是否存在，如果存在则激活profile。 --&gt; \n                &lt;file&gt; \n                    &lt;!-- 如果指定的文件存在，则激活profile。 --&gt; \n                    &lt;exists&gt; &#x2F;usr&#x2F;local&#x2F;hudson&#x2F;hudson-home&#x2F;jobs&#x2F;maven-guide-zh-to-production&#x2F;workspace&#x2F; &lt;&#x2F;exists&gt; \n\n                    &lt;!-- 如果指定的文件不存在，则激活profile。 --&gt; \n                    &lt;missing&gt; &#x2F;usr&#x2F;local&#x2F;hudson&#x2F;hudson-home&#x2F;jobs&#x2F;maven-guide-zh-to-production&#x2F;workspace&#x2F; &lt;&#x2F;missing&gt; \n                &lt;&#x2F;file&gt; \n            &lt;&#x2F;activation&gt; \n\n            &lt;!-- 构建项目所需要的信息。参见build元素 --&gt; \n            &lt;build&gt; \n                &lt;defaultGoal &#x2F;&gt; \n                &lt;resources&gt; \n                    &lt;resource&gt; \n                        &lt;targetPath&gt;&lt;&#x2F;targetPath&gt;\n                        &lt;filtering&gt;&lt;&#x2F;filtering&gt;\n                        &lt;directory&gt;&lt;&#x2F;directory&gt;\n                        &lt;includes&gt;\n                            &lt;include&gt;&lt;&#x2F;include&gt;\n                        &lt;&#x2F;includes&gt;\n                        &lt;excludes&gt;\n                            &lt;exclude&gt;&lt;&#x2F;exclude&gt;\n                        &lt;&#x2F;excludes&gt;\n                    &lt;&#x2F;resource&gt; \n                &lt;&#x2F;resources&gt; \n                &lt;testResources&gt; \n                    &lt;testResource&gt; \n                        &lt;targetPath&gt;&lt;&#x2F;targetPath&gt;\n                        &lt;filtering&gt;&lt;&#x2F;filtering&gt;\n                        &lt;directory&gt;&lt;&#x2F;directory&gt;\n                        &lt;includes&gt;\n                            &lt;include&gt;&lt;&#x2F;include&gt;\n                        &lt;&#x2F;includes&gt;\n                        &lt;excludes&gt;\n                            &lt;exclude&gt;&lt;&#x2F;exclude&gt;\n                        &lt;&#x2F;excludes&gt; \n                    &lt;&#x2F;testResource&gt; \n                &lt;&#x2F;testResources&gt; \n                &lt;directory&gt;&lt;&#x2F;directory&gt;\n                &lt;finalName&gt;&lt;&#x2F;finalName&gt;\n                &lt;filters&gt;&lt;&#x2F;filters&gt; \n                &lt;pluginManagement&gt; \n                    &lt;plugins&gt; \n                        &lt;!-- 参见build&#x2F;pluginManagement&#x2F;plugins&#x2F;plugin元素 --&gt; \n                        &lt;plugin&gt; \n                            &lt;groupId&gt;&lt;&#x2F;groupId&gt;\n                            &lt;artifactId&gt;&lt;&#x2F;artifactId&gt;\n                            &lt;version&gt;&lt;&#x2F;version&gt;\n                            &lt;extensions&gt;true&#x2F;false&lt;&#x2F;extensions&gt; \n                            &lt;executions&gt; \n                                &lt;execution&gt; \n                                    &lt;id&gt;&lt;&#x2F;id&gt;\n                                    &lt;phase&gt;&lt;&#x2F;phase&gt;\n                                    &lt;goals&gt;&lt;&#x2F;goals&gt;\n                                    &lt;inherited&gt;true&#x2F;false&lt;&#x2F;inherited&gt;\n                                    &lt;configuration&gt;&lt;&#x2F;configuration&gt; \n                                &lt;&#x2F;execution&gt; \n                            &lt;&#x2F;executions&gt; \n                            &lt;dependencies&gt; \n                                &lt;!-- 参见dependencies&#x2F;dependency元素 --&gt; \n                                &lt;dependency&gt; \n                                &lt;&#x2F;dependency&gt; \n                            &lt;&#x2F;dependencies&gt; \n                            &lt;goals&gt;&lt;&#x2F;goals&gt;\n                            &lt;inherited&gt;true&#x2F;false&lt;&#x2F;inherited&gt;\n                            &lt;configuration&gt;&lt;&#x2F;configuration&gt;\n                        &lt;&#x2F;plugin&gt; \n                    &lt;&#x2F;plugins&gt; \n                &lt;&#x2F;pluginManagement&gt; \n                &lt;plugins&gt; \n                    &lt;!-- 参见build&#x2F;pluginManagement&#x2F;plugins&#x2F;plugin元素 --&gt; \n                    &lt;plugin&gt; \n                        &lt;groupId&gt;&lt;&#x2F;groupId&gt;\n                        &lt;artifactId&gt;&lt;&#x2F;artifactId&gt;\n                        &lt;version&gt;&lt;&#x2F;version&gt;\n                        &lt;extensions&gt;true&#x2F;false&lt;&#x2F;extensions&gt; \n                        &lt;executions&gt; \n                            &lt;execution&gt; \n                                &lt;id&gt;&lt;&#x2F;id&gt;\n                                &lt;phase&gt;&lt;&#x2F;phase&gt;\n                                &lt;goals&gt;&lt;&#x2F;goals&gt;\n                                &lt;inherited&gt;true&#x2F;false&lt;&#x2F;inherited&gt;\n                                &lt;configuration&gt;&lt;&#x2F;configuration&gt; \n                            &lt;&#x2F;execution&gt; \n                        &lt;&#x2F;executions&gt; \n                        &lt;dependencies&gt; \n                            &lt;!-- 参见dependencies&#x2F;dependency元素 --&gt; \n                            &lt;dependency&gt; \n                            &lt;&#x2F;dependency&gt; \n                        &lt;&#x2F;dependencies&gt; \n                        &lt;goals&gt;&lt;&#x2F;goals&gt;\n                        &lt;inherited&gt;true&#x2F;false&lt;&#x2F;inherited&gt;\n                        &lt;configuration&gt;&lt;&#x2F;configuration&gt; \n                    &lt;&#x2F;plugin&gt; \n                &lt;&#x2F;plugins&gt; \n            &lt;&#x2F;build&gt; \n\n            &lt;!-- 模块（有时称作子项目） 被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的\n                 相对路径 --&gt; \n            &lt;modules&gt;\n                &lt;!--子项目相对路径--&gt;\n                &lt;module&gt;&lt;&#x2F;module&gt;\n            &lt;&#x2F;modules&gt; \n\n            &lt;!-- 发现依赖和扩展的远程仓库列表。 --&gt; \n            &lt;repositories&gt; \n                &lt;!-- 参见repositories&#x2F;repository元素 --&gt; \n                &lt;repository&gt; \n                    &lt;releases&gt; \n                        &lt;enabled&gt;&lt;enabled&gt;\n                        &lt;updatePolicy&gt;&lt;&#x2F;updatePolicy&gt;\n                        &lt;checksumPolicy&gt;&lt;&#x2F;checksumPolicy&gt; \n                    &lt;&#x2F;releases&gt; \n                    &lt;snapshots&gt; \n                        &lt;enabled&gt;&lt;enabled&gt;\n                        &lt;updatePolicy&gt;&lt;&#x2F;updatePolicy&gt;\n                        &lt;checksumPolicy&gt;&lt;&#x2F;checksumPolicy&gt; \n                    &lt;&#x2F;snapshots&gt; \n                    &lt;id&gt;&lt;&#x2F;id&gt;\n                    &lt;name&gt;&lt;&#x2F;name&gt;\n                    &lt;url&gt;&lt;&#x2F;url&gt;\n                    &lt;layout&gt;&lt;&#x2F;layout&gt; \n                &lt;&#x2F;repository&gt; \n            &lt;&#x2F;repositories&gt; \n\n            &lt;!-- 发现插件的远程仓库列表，这些插件用于构建和报表 --&gt; \n            &lt;pluginRepositories&gt; \n                &lt;!-- 包含需要连接到远程插件仓库的信息.参见repositories&#x2F;repository元素 --&gt; \n                &lt;pluginRepository&gt; \n                    &lt;releases&gt; \n                        &lt;enabled&gt;&lt;enabled&gt;\n                        &lt;updatePolicy&gt;&lt;&#x2F;updatePolicy&gt;\n                        &lt;checksumPolicy&gt;&lt;&#x2F;checksumPolicy&gt; \n                    &lt;&#x2F;releases&gt; \n                    &lt;snapshots&gt; \n                        &lt;enabled&gt;&lt;enabled&gt;\n                        &lt;updatePolicy&gt;&lt;&#x2F;updatePolicy&gt;\n                        &lt;checksumPolicy&gt;&lt;&#x2F;checksumPolicy&gt;\n                    &lt;&#x2F;snapshots&gt; \n                    &lt;id&gt;&lt;&#x2F;id&gt;\n                    &lt;name&gt;&lt;&#x2F;name&gt;\n                    &lt;url&gt;&lt;&#x2F;url&gt;\n                    &lt;layout&gt;&lt;&#x2F;layout&gt; \n                &lt;&#x2F;pluginRepository&gt; \n            &lt;&#x2F;pluginRepositories&gt; \n\n            &lt;!-- 该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的\n                 仓库中下载。要获取更多信息，请看项目依赖机制。 --&gt; \n            &lt;dependencies&gt; \n                &lt;!-- 参见dependencies&#x2F;dependency元素 --&gt; \n                &lt;dependency&gt; \n                &lt;&#x2F;dependency&gt; \n            &lt;&#x2F;dependencies&gt; \n\n            &lt;!-- 不赞成使用. 现在Maven忽略该元素. --&gt; \n            &lt;reports&gt;&lt;&#x2F;reports&gt; \n\n            &lt;!-- 该元素包括使用报表插件产生报表的规范。当用户执行“mvn site”，这些报表就会运行。 在页面导航栏能看\n                 到所有报表的链接。参见reporting元素 --&gt; \n            &lt;reporting&gt;&lt;&#x2F;reporting&gt; \n\n            &lt;!-- 参见dependencyManagement元素 --&gt; \n            &lt;dependencyManagement&gt; \n                &lt;dependencies&gt; \n                    &lt;!-- 参见dependencies&#x2F;dependency元素 --&gt; \n                    &lt;dependency&gt; \n                    &lt;&#x2F;dependency&gt; \n                &lt;&#x2F;dependencies&gt; \n            &lt;&#x2F;dependencyManagement&gt; \n\n            &lt;!-- 参见distributionManagement元素 --&gt; \n            &lt;distributionManagement&gt; \n            &lt;&#x2F;distributionManagement&gt; \n\n            &lt;!-- 参见properties元素 --&gt; \n            &lt;properties &#x2F;&gt; \n        &lt;&#x2F;profile&gt; \n    &lt;&#x2F;profiles&gt; \n\n    &lt;!-- 模块（有时称作子项目） 被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的相对路径 --&gt; \n    &lt;modules&gt;\n        &lt;!--子项目相对路径--&gt;\n        &lt;module&gt;&lt;&#x2F;module&gt;\n    &lt;&#x2F;modules&gt; \n\n    &lt;!-- 发现依赖和扩展的远程仓库列表。 --&gt; \n    &lt;repositories&gt; \n        &lt;!-- 包含需要连接到远程仓库的信息 --&gt; \n        &lt;repository&gt; \n            &lt;!-- 如何处理远程仓库里发布版本的下载 --&gt; \n            &lt;releases&gt; \n                &lt;!-- true或者false表示该仓库是否为下载某种类型构件（发布版，快照版）开启。 --&gt; \n                &lt;enabled&gt;&lt;enabled&gt; \n\n                &lt;!-- 该元素指定更新发生的频率。Maven会比较本地POM和远程POM的时间戳。这里的选项是：always（一直），\n                     daily（默认，每日），interval：X（这里X是以分钟为单位的时间间隔），或者never（从不）。 --&gt; \n                &lt;updatePolicy&gt;&lt;&#x2F;updatePolicy&gt; \n\n                &lt;!-- 当Maven验证构件校验文件失败时该怎么做：ignore（忽略），fail（失败），或者warn（警告）。 --&gt; \n                &lt;checksumPolicy&gt;&lt;&#x2F;checksumPolicy&gt; \n            &lt;&#x2F;releases&gt; \n\n            &lt;!-- 如何处理远程仓库里快照版本的下载。有了releases和snapshots这两组配置，POM就可以在每个单独的仓库中，\n                 为每种类型的构件采取不同的策略。例如，可能有人会决定只为开发目的开启对快照版本下载的支持。参见repositories&#x2F;repository&#x2F;releases元素 --&gt; \n            &lt;snapshots&gt; \n                &lt;enabled&gt;&lt;enabled&gt;\n                &lt;updatePolicy&gt;&lt;&#x2F;updatePolicy&gt;\n                &lt;checksumPolicy&gt;&lt;&#x2F;checksumPolicy&gt; \n            &lt;&#x2F;snapshots&gt; \n\n            &lt;!-- 远程仓库唯一标识符。可以用来匹配在settings.xml文件里配置的远程仓库 --&gt; \n            &lt;id&gt; banseon-repository-proxy &lt;&#x2F;id&gt; \n\n            &lt;!-- 远程仓库名称 --&gt; \n            &lt;name&gt; banseon-repository-proxy &lt;&#x2F;name&gt; \n\n            &lt;!-- 远程仓库URL，按protocol:&#x2F;&#x2F;hostname&#x2F;path形式 --&gt; \n            &lt;url&gt; http:&#x2F;&#x2F;192.168.1.169:9999&#x2F;repository&#x2F; &lt;&#x2F;url&gt; \n\n            &lt;!-- 用于定位和排序构件的仓库布局类型-可以是default（默认）或者legacy（遗留）。Maven 2为其仓库提供了一个默认\n                 的布局；然而，Maven 1.x有一种不同的布局。我们可以使用该元素指定布局是default（默认）还是legacy（遗留）。 --&gt; \n            &lt;layout&gt; default &lt;&#x2F;layout&gt; \n        &lt;&#x2F;repository&gt; \n    &lt;&#x2F;repositories&gt; \n\n    &lt;!-- 发现插件的远程仓库列表，这些插件用于构建和报表 --&gt; \n    &lt;pluginRepositories&gt; \n        &lt;!-- 包含需要连接到远程插件仓库的信息.参见repositories&#x2F;repository元素 --&gt; \n        &lt;pluginRepository&gt; \n        &lt;&#x2F;pluginRepository&gt; \n    &lt;&#x2F;pluginRepositories&gt; \n\n    &lt;!-- 该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。\n         要获取更多信息，请看项目依赖机制。 --&gt; \n    &lt;dependencies&gt; \n        &lt;dependency&gt; \n            &lt;!-- 依赖的group ID --&gt; \n            &lt;groupId&gt; org.apache.maven &lt;&#x2F;groupId&gt; \n\n            &lt;!-- 依赖的artifact ID --&gt; \n            &lt;artifactId&gt; maven-artifact &lt;&#x2F;artifactId&gt; \n\n            &lt;!-- 依赖的版本号。 在Maven 2里, 也可以配置成版本号的范围。 --&gt; \n            &lt;version&gt; 3.8.1 &lt;&#x2F;version&gt; \n\n            &lt;!-- 依赖类型，默认类型是jar。它通常表示依赖的文件的扩展名，但也有例外。一个类型可以被映射成另外一个扩展\n                 名或分类器。类型经常和使用的打包方式对应，尽管这也有例外。一些类型的例子：jar，war，ejb-client和test-jar。\n                 如果设置extensions为 true，就可以在plugin里定义新的类型。所以前面的类型的例子不完整。 --&gt; \n            &lt;type&gt; jar &lt;&#x2F;type&gt; \n\n            &lt;!-- 依赖的分类器。分类器可以区分属于同一个POM，但不同构建方式的构件。分类器名被附加到文件名的版本号后面。例如，\n                 如果你想要构建两个单独的构件成JAR，一个使用Java 1.4编译器，另一个使用Java 6编译器，你就可以使用分类器来生\n                 成两个单独的JAR构件。 --&gt; \n            &lt;classifier&gt;&lt;&#x2F;classifier&gt; \n\n            &lt;!-- 依赖范围。在项目发布过程中，帮助决定哪些构件被包括进来。欲知详情请参考依赖机制。 \n                - compile ：默认范围，用于编译 \n                - provided：类似于编译，但支持你期待jdk或者容器提供，类似于classpath \n                - runtime: 在执行时需要使用 \n                - test: 用于test任务时使用 \n                - system: 需要外在提供相应的元素。通过systemPath来取得 \n                - systemPath: 仅用于范围为system。提供相应的路径 \n                - optional: 当项目自身被依赖时，标注依赖是否传递。用于连续依赖时使用 --&gt; \n            &lt;scope&gt; test &lt;&#x2F;scope&gt; \n\n            &lt;!-- 仅供system范围使用。注意，不鼓励使用这个元素，并且在新的版本中该元素可能被覆盖掉。该元素为依赖规定了文件\n                 系统上的路径。需要绝对路径而不是相对路径。推荐使用属性匹配绝对路径，例如$&#123;java.home&#125;。 --&gt; \n            &lt;systemPath&gt;&lt;&#x2F;systemPath&gt; \n\n            &lt;!-- 当计算传递依赖时， 从依赖构件列表里，列出被排除的依赖构件集。即告诉maven你只依赖指定的项目，不依赖项目的\n                 依赖。此元素主要用于解决版本冲突问题 --&gt; \n            &lt;exclusions&gt; \n                &lt;exclusion&gt; \n                    &lt;artifactId&gt; spring-core &lt;&#x2F;artifactId&gt; \n                    &lt;groupId&gt; org.springframework &lt;&#x2F;groupId&gt; \n                &lt;&#x2F;exclusion&gt; \n            &lt;&#x2F;exclusions&gt; \n\n            &lt;!-- 可选依赖，如果你在项目B中把C依赖声明为可选，你就需要在依赖于B的项目（例如项目A）中显式的引用对C的依赖。\n                 可选依赖阻断依赖的传递性。 --&gt; \n            &lt;optional&gt; true &lt;&#x2F;optional&gt; \n        &lt;&#x2F;dependency&gt; \n    &lt;&#x2F;dependencies&gt; \n\n    &lt;!-- 不赞成使用. 现在Maven忽略该元素. --&gt; \n    &lt;reports&gt;&lt;&#x2F;reports&gt; \n\n    &lt;!-- 该元素描述使用报表插件产生报表的规范。当用户执行“mvn site”，这些报表就会运行。 在页面导航栏能看到所有报表的链接。 --&gt; \n    &lt;reporting&gt; \n        &lt;!-- true，则，网站不包括默认的报表。这包括“项目信息”菜单中的报表。 --&gt; \n        &lt;excludeDefaults &#x2F;&gt; \n\n        &lt;!-- 所有产生的报表存放到哪里。默认值是$&#123;project.build.directory&#125;&#x2F;site。 --&gt; \n        &lt;outputDirectory &#x2F;&gt; \n\n        &lt;!-- 使用的报表插件和他们的配置。 --&gt; \n        &lt;plugins&gt; \n            &lt;!-- plugin元素包含描述报表插件需要的信息 --&gt; \n            &lt;plugin&gt; \n                &lt;!-- 报表插件在仓库里的group ID --&gt; \n                &lt;groupId&gt;&lt;&#x2F;groupId&gt; \n                &lt;!-- 报表插件在仓库里的artifact ID --&gt; \n                &lt;artifactId&gt;&lt;&#x2F;artifactId&gt; \n\n                &lt;!-- 被使用的报表插件的版本（或版本范围） --&gt; \n                &lt;version&gt;&lt;&#x2F;version&gt; \n\n                &lt;!-- 任何配置是否被传播到子项目 --&gt; \n                &lt;inherited&gt;true&#x2F;false&lt;&#x2F;inherited&gt; \n\n                &lt;!-- 报表插件的配置 --&gt; \n                &lt;configuration&gt;&lt;&#x2F;configuration&gt; \n\n                &lt;!-- 一组报表的多重规范，每个规范可能有不同的配置。一个规范（报表集）对应一个执行目标 。例如，\n                     有1，2，3，4，5，6，7，8，9个报表。1，2，5构成A报表集，对应一个执行目标。2，5，8构成B报\n                     表集，对应另一个执行目标 --&gt; \n                &lt;reportSets&gt; \n                    &lt;!-- 表示报表的一个集合，以及产生该集合的配置 --&gt; \n                    &lt;reportSet&gt; \n                        &lt;!-- 报表集合的唯一标识符，POM继承时用到 --&gt; \n                        &lt;id&gt;&lt;&#x2F;id&gt; \n\n                        &lt;!-- 产生报表集合时，被使用的报表的配置 --&gt; \n                        &lt;configuration&gt;&lt;&#x2F;configuration&gt; \n\n                        &lt;!-- 配置是否被继承到子POMs --&gt; \n                        &lt;inherited&gt;true&#x2F;false&lt;&#x2F;inherited&gt; \n\n                        &lt;!-- 这个集合里使用到哪些报表 --&gt; \n                        &lt;reports&gt;&lt;&#x2F;reports&gt; \n                    &lt;&#x2F;reportSet&gt; \n                &lt;&#x2F;reportSets&gt; \n            &lt;&#x2F;plugin&gt; \n        &lt;&#x2F;plugins&gt; \n    &lt;&#x2F;reporting&gt; \n\n    &lt;!-- 继承自该项目的所有子项目的默认依赖信息。这部分的依赖信息不会被立即解析,而是当子项目声明一个依赖\n        （必须描述group ID和artifact ID信息），如果group ID和artifact ID以外的一些信息没有描述，则通过\n            group ID和artifact ID匹配到这里的依赖，并使用这里的依赖信息。 --&gt; \n    &lt;dependencyManagement&gt; \n        &lt;dependencies&gt; \n            &lt;!-- 参见dependencies&#x2F;dependency元素 --&gt; \n            &lt;dependency&gt; \n            &lt;&#x2F;dependency&gt; \n        &lt;&#x2F;dependencies&gt; \n    &lt;&#x2F;dependencyManagement&gt; \n\n    &lt;!-- 项目分发信息，在执行mvn deploy后表示要发布的位置。有了这些信息就可以把网站部署到远程服务器或者\n         把构件部署到远程仓库。 --&gt; \n    &lt;distributionManagement&gt; \n        &lt;!-- 部署项目产生的构件到远程仓库需要的信息 --&gt; \n        &lt;repository&gt; \n            &lt;!-- 是分配给快照一个唯一的版本号（由时间戳和构建流水号）？还是每次都使用相同的版本号？参见\n                 repositories&#x2F;repository元素 --&gt; \n            &lt;uniqueVersion &#x2F;&gt; \n            &lt;id&gt; banseon-maven2 &lt;&#x2F;id&gt; \n            &lt;name&gt; banseon maven2 &lt;&#x2F;name&gt; \n            &lt;url&gt; file:&#x2F;&#x2F;$&#123;basedir&#125;&#x2F;target&#x2F;deploy &lt;&#x2F;url&gt; \n            &lt;layout&gt;&lt;&#x2F;layout&gt; \n        &lt;&#x2F;repository&gt; \n\n        &lt;!-- 构件的快照部署到哪里？如果没有配置该元素，默认部署到repository元素配置的仓库，参见\n             distributionManagement&#x2F;repository元素 --&gt; \n        &lt;snapshotRepository&gt; \n            &lt;uniqueVersion &#x2F;&gt; \n            &lt;id&gt; banseon-maven2 &lt;&#x2F;id&gt; \n            &lt;name&gt; Banseon-maven2 Snapshot Repository &lt;&#x2F;name&gt; \n            &lt;url&gt; scp:&#x2F;&#x2F;svn.baidu.com&#x2F;banseon:&#x2F;usr&#x2F;local&#x2F;maven-snapshot &lt;&#x2F;url&gt; \n            &lt;layout&gt;&lt;&#x2F;layout&gt;\n        &lt;&#x2F;snapshotRepository&gt; \n\n        &lt;!-- 部署项目的网站需要的信息 --&gt; \n        &lt;site&gt; \n            &lt;!-- 部署位置的唯一标识符，用来匹配站点和settings.xml文件里的配置 --&gt; \n            &lt;id&gt; banseon-site &lt;&#x2F;id&gt; \n\n            &lt;!-- 部署位置的名称 --&gt; \n            &lt;name&gt; business api website &lt;&#x2F;name&gt; \n\n            &lt;!-- 部署位置的URL，按protocol:&#x2F;&#x2F;hostname&#x2F;path形式 --&gt; \n            &lt;url&gt; \n                scp:&#x2F;&#x2F;svn.baidu.com&#x2F;banseon:&#x2F;var&#x2F;www&#x2F;localhost&#x2F;banseon-web \n            &lt;&#x2F;url&gt; \n        &lt;&#x2F;site&gt; \n\n        &lt;!-- 项目下载页面的URL。如果没有该元素，用户应该参考主页。使用该元素的原因是：帮助定位\n             那些不在仓库里的构件（由于license限制）。 --&gt; \n        &lt;downloadUrl &#x2F;&gt; \n\n        &lt;!-- 如果构件有了新的group ID和artifact ID（构件移到了新的位置），这里列出构件的重定位信息。 --&gt; \n        &lt;relocation&gt; \n            &lt;!-- 构件新的group ID --&gt; \n            &lt;groupId&gt;&lt;&#x2F;groupId&gt; \n\n            &lt;!-- 构件新的artifact ID --&gt; \n            &lt;artifactId&gt;&lt;&#x2F;artifactId&gt; \n\n            &lt;!-- 构件新的版本号 --&gt; \n            &lt;version&gt;&lt;&#x2F;version&gt; \n\n            &lt;!-- 显示给用户的，关于移动的额外信息，例如原因。 --&gt; \n            &lt;message&gt;&lt;&#x2F;message&gt; \n        &lt;&#x2F;relocation&gt; \n\n        &lt;!-- 给出该构件在远程仓库的状态。不得在本地项目中设置该元素，因为这是工具自动更新的。有效的值\n             有：none（默认），converted（仓库管理员从Maven 1 POM转换过来），partner（直接从伙伴Maven \n             2仓库同步过来），deployed（从Maven 2实例部署），verified（被核实时正确的和最终的）。 --&gt; \n        &lt;status&gt;&lt;&#x2F;status&gt; \n    &lt;&#x2F;distributionManagement&gt; \n&lt;&#x2F;project&gt;</code></pre>\n<h4 id=\"一般设置\"><a href=\"#一般设置\" class=\"headerlink\" title=\"一般设置\"></a>一般设置</h4><h5 id=\"project\"><a href=\"#project\" class=\"headerlink\" title=\"project\"></a>project</h5><h5 id=\"modelVersion\"><a href=\"#modelVersion\" class=\"headerlink\" title=\"modelVersion\"></a>modelVersion</h5><h5 id=\"parent\"><a href=\"#parent\" class=\"headerlink\" title=\"parent\"></a>parent</h5><h5 id=\"项目元数据-Project-Metadata\"><a href=\"#项目元数据-Project-Metadata\" class=\"headerlink\" title=\"项目元数据 - Project Metadata\"></a>项目元数据 - Project Metadata</h5><ul>\n<li>groupId</li>\n<li>artifactId</li>\n<li>version<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>格式：X.Y.Z-V（主版本.次版本.修订号-限定版本号）<br>X 表示主版本号，当 API 的兼容性变化时，X 需递增。<br>Y 表示次版本号，当你做了向下兼容的功能更新（增加功能）时，不影响 API 的兼容性，Y 需递增。<br>Z 表示修订号，当你做了向下兼容的问题修正（Bug 修复）时，不影响 API 的兼容性，Z 需递增<br>V 表示限定版本号，常用的有SNAPSHOT - 快照版本、RELEASE - 发布版本</p></blockquote>\n</li>\n<li>packaging</li>\n<li>name</li>\n<li>description</li>\n<li>url</li>\n</ul>\n<h5 id=\"properties\"><a href=\"#properties\" class=\"headerlink\" title=\"properties\"></a>properties</h5><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;properties&gt;\n  &lt;java.version&gt;1.8&lt;&#x2F;java.version&gt;\n  &lt;resource.delimiter&gt;@&lt;&#x2F;resource.delimiter&gt;\n  &lt;maven.compiler.source&gt;$&#123;java.version&#125;&lt;&#x2F;maven.compiler.source&gt;\n  &lt;maven.compiler.target&gt;$&#123;java.version&#125;&lt;&#x2F;maven.compiler.target&gt;\n  &lt;project.build.sourceEncoding&gt;UTF-8&lt;&#x2F;project.build.sourceEncoding&gt;\n&lt;&#x2F;properties&gt;</code></pre>\n<h5 id=\"modules\"><a href=\"#modules\" class=\"headerlink\" title=\"modules\"></a>modules</h5><h5 id=\"dependencyManagement\"><a href=\"#dependencyManagement\" class=\"headerlink\" title=\"dependencyManagement\"></a>dependencyManagement</h5><h5 id=\"dependencies\"><a href=\"#dependencies\" class=\"headerlink\" title=\"dependencies\"></a>dependencies</h5><h5 id=\"build\"><a href=\"#build\" class=\"headerlink\" title=\"build\"></a>build</h5><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!-- 构建项目需要的信息 --&gt;\n&lt;build&gt;\n    &lt;!-- 该元素设置了项目源码目录，当构建项目的时候，构建系统会编译目录里的源码。该路径是相对\n         于pom.xml的相对路径。 --&gt;\n    &lt;sourceDirectory&gt;&lt;&#x2F;sourceDirectory&gt;\n    &lt;!-- 该元素设置了项目单元测试使用的源码目录，当测试项目的时候，构建系统会编译目录里的源码。\n         该路径是相对于pom.xml的相对路径。 --&gt;\n    &lt;testSourceDirectory&gt;&lt;&#x2F;testSourceDirectory&gt;\n    &lt;!-- 被编译过的应用程序class文件存放的目录。 --&gt;\n    &lt;outputDirectory&gt;&lt;&#x2F;outputDirectory&gt;\n    &lt;!-- 被编译过的测试class文件存放的目录。 --&gt;\n    &lt;testOutputDirectory&gt;&lt;&#x2F;testOutputDirectory&gt;\n    &lt;!-- 这个元素描述了项目相关的所有资源路径列表，例如和项目相关的属性文件，这些资源被包含在\n         最终的打包文件里。 --&gt;\n    &lt;resources&gt;\n        &lt;!-- 这个元素描述了项目相关或测试相关的所有资源路径 --&gt;\n        &lt;resource&gt;\n            &lt;!-- 描述了资源的目标路径。该路径相对target&#x2F;classes目录（例如$&#123;project.build.outputDirectory&#125;）。\n                 举个例子，如果你想资源在特定的包里(org.apache.maven.messages)，你就必须该元素设置为\n                org&#x2F;apache&#x2F;maven&#x2F;messages。然而，如果你只是想把资源放到源码目录结构里，就不需要该配置。 --&gt;\n            &lt;targetPath&gt;&lt;&#x2F;targetPath&gt;\n            &lt;!-- 是否使用参数值代替参数名。参数值取自properties元素或者文件里配置的属性，文件在filters元素\n                 里列出。 --&gt;\n            &lt;filtering&gt;&lt;&#x2F;filtering&gt;\n            &lt;!-- 描述存放资源的目录，该路径相对POM路径 --&gt;\n            &lt;directory&gt;&lt;&#x2F;directory&gt;\n            &lt;!-- 包含的模式列表，例如**&#x2F;*.xml. --&gt;\n            &lt;includes&gt;\n                &lt;include&gt;&lt;&#x2F;include&gt;\n            &lt;&#x2F;includes&gt;\n            &lt;!-- 排除的模式列表，例如**&#x2F;*.xml --&gt;\n            &lt;excludes&gt;\n                &lt;exclude&gt;&lt;&#x2F;exclude&gt;\n            &lt;&#x2F;excludes&gt;\n        &lt;&#x2F;resource&gt;\n    &lt;&#x2F;resources&gt;\n\n    &lt;!-- 子项目可以引用的默认插件信息。该插件配置项直到被引用时才会被解析或绑定到生命周期。给定插件的任何本\n         地配置都会覆盖这里的配置 --&gt;\n    &lt;pluginManagement&gt;\n        &lt;!-- 使用的插件列表 。 --&gt;\n        &lt;plugins&gt;\n            &lt;!-- plugin元素包含描述插件所需要的信息。 --&gt;\n            &lt;plugin&gt;\n                &lt;!-- 插件在仓库里的group ID --&gt;\n                &lt;groupId&gt;&lt;&#x2F;groupId&gt;\n                &lt;!-- 插件在仓库里的artifact ID --&gt;\n                &lt;artifactId&gt;&lt;&#x2F;artifactId&gt;\n                &lt;!-- 被使用的插件的版本（或版本范围） --&gt;\n                &lt;version&gt;&lt;&#x2F;version&gt;\n                &lt;!-- 在构建生命周期中执行一组目标的配置。每个目标可能有不同的配置。 --&gt;\n                &lt;executions&gt;\n                    &lt;!-- execution元素包含了插件执行需要的信息 --&gt;\n                    &lt;execution&gt;\n                        &lt;!-- 执行目标的标识符，用于标识构建过程中的目标，或者匹配继承过程中需要合并的执行目标 --&gt;\n                        &lt;id&gt;&lt;&#x2F;id&gt;\n                        &lt;!-- 绑定了目标的构建生命周期阶段，如果省略，目标会被绑定到源数据里配置的默认阶段 --&gt;\n                        &lt;phase&gt;&lt;&#x2F;phase&gt;\n                        &lt;!-- 配置的执行目标 --&gt;\n                        &lt;goals&gt;&lt;&#x2F;goals&gt;\n                        &lt;!-- 作为DOM对象的配置 --&gt;\n                        &lt;configuration&gt;&lt;&#x2F;configuration&gt;\n                    &lt;&#x2F;execution&gt;\n                &lt;&#x2F;executions&gt;\n                &lt;!-- 作为DOM对象的配置 --&gt;\n                &lt;configuration&gt;&lt;&#x2F;configuration&gt;\n            &lt;&#x2F;plugin&gt;\n        &lt;&#x2F;plugins&gt;\n    &lt;&#x2F;pluginManagement&gt;\n\n    &lt;!-- 该项目使用的插件列表 。 --&gt;\n    &lt;plugins&gt;\n        &lt;!-- plugin元素包含描述插件所需要的信息。 --&gt;\n        &lt;plugin&gt;\n            &lt;!-- 插件在仓库里的group ID --&gt;\n            &lt;groupId&gt;&lt;&#x2F;groupId&gt;\n            &lt;!-- 插件在仓库里的artifact ID --&gt;\n            &lt;artifactId&gt;&lt;&#x2F;artifactId&gt;\n            &lt;!-- 被使用的插件的版本（或版本范围） --&gt;\n            &lt;version&gt;&lt;&#x2F;version&gt;\n            &lt;!-- 作为DOM对象的配置 --&gt;\n            &lt;configuration&gt;&lt;&#x2F;configuration&gt;\n        &lt;&#x2F;plugin&gt;\n    &lt;&#x2F;plugins&gt;\n&lt;&#x2F;build&gt;</code></pre>\n<h5 id=\"repositories发现依赖和扩展的远程仓库列表\"><a href=\"#repositories发现依赖和扩展的远程仓库列表\" class=\"headerlink\" title=\"repositories发现依赖和扩展的远程仓库列表\"></a>repositories发现依赖和扩展的远程仓库列表</h5><h5 id=\"profiles正式环境-测试环境-开发环境的配置\"><a href=\"#profiles正式环境-测试环境-开发环境的配置\" class=\"headerlink\" title=\"profiles正式环境 测试环境 开发环境的配置\"></a>profiles正式环境 测试环境 开发环境的配置</h5>","text":"settings.xml 用来设置maven参数的配置文件 settings.xml是maven的全局配置文件。pom.xml文件是所在项目的局部配置 settings.xml中包含本地仓储位置、修改远程仓储服务器、认证信息等配置 https://maven.apache.org...","link":"","photos":[],"count_time":{"symbolsCount":"59k","symbolsTime":"54 mins."},"categories":[{"name":"maven","slug":"maven","count":1,"path":"api/categories/maven.json"}],"tags":[{"name":"Java","slug":"Java","count":2,"path":"api/tags/Java.json"},{"name":"maven","slug":"maven","count":1,"path":"api/tags/maven.json"},{"name":"pom","slug":"pom","count":1,"path":"api/tags/pom.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#settings-xml\"><span class=\"toc-text\">settings.xml</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#settings-xml%E7%9A%84%E5%AD%98%E5%82%A8%E4%BD%8D%E7%BD%AE\"><span class=\"toc-text\">settings.xml的存储位置</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3\"><span class=\"toc-text\">文件详解</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#pom-xml\"><span class=\"toc-text\">pom.xml</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3-1\"><span class=\"toc-text\">文件详解</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%80%E8%88%AC%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">一般设置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#project\"><span class=\"toc-text\">project</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#modelVersion\"><span class=\"toc-text\">modelVersion</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#parent\"><span class=\"toc-text\">parent</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E5%85%83%E6%95%B0%E6%8D%AE-Project-Metadata\"><span class=\"toc-text\">项目元数据 - Project Metadata</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#properties\"><span class=\"toc-text\">properties</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#modules\"><span class=\"toc-text\">modules</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#dependencyManagement\"><span class=\"toc-text\">dependencyManagement</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#dependencies\"><span class=\"toc-text\">dependencies</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#build\"><span class=\"toc-text\">build</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#repositories%E5%8F%91%E7%8E%B0%E4%BE%9D%E8%B5%96%E5%92%8C%E6%89%A9%E5%B1%95%E7%9A%84%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E5%88%97%E8%A1%A8\"><span class=\"toc-text\">repositories发现依赖和扩展的远程仓库列表</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#profiles%E6%AD%A3%E5%BC%8F%E7%8E%AF%E5%A2%83-%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">profiles正式环境 测试环境 开发环境的配置</span></a></li></ol></li></ol></li></ol>","author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"kubernetes常用模板","uid":"c6c4eb3658a2985f9be6afa8980c8ae8","slug":"kubernetes/kubernetes常用模板","date":"2023-05-18T06:56:26.000Z","updated":"2023-06-30T02:33:00.401Z","comments":true,"path":"api/articles/kubernetes/kubernetes常用模板.json","keywords":"chriswood blogs sharing","cover":null,"text":"DeploymentDeployment是Kubernetes系统的⼀个核⼼概念，主要职责和RC⼀样的都是保证Pod的数量和健康， 二者⼤部分功能都是完全⼀致，可以看成是⼀个升级版的RC控制器 确保 Pod 数量 确保 Pod 健康 事件和状态查看 回滚 版本记录 暂停和启动 a...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"kubernetes","slug":"kubernetes","count":6,"path":"api/categories/kubernetes.json"}],"tags":[{"name":"kubernetes","slug":"kubernetes","count":7,"path":"api/tags/kubernetes.json"},{"name":"template","slug":"template","count":1,"path":"api/tags/template.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"EditorConfig配置","uid":"e5462aee6cc573fa0fc698b06c8bed09","slug":"ide/EditorConfig配置","date":"2023-05-18T00:08:20.000Z","updated":"2023-06-30T02:33:00.397Z","comments":true,"path":"api/articles/ide/EditorConfig配置.json","keywords":"chriswood blogs sharing","cover":null,"text":"1 EditorConfig插件https://editorconfig.org/#pre-installed 2 .editorconfig 配置文件 .editorconfig 自定义文件是用来定义编辑器的编码格式规范，编辑器的行为会与 .editorconfig 文件中定义...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"IDE","slug":"IDE","count":1,"path":"api/categories/IDE.json"}],"tags":[{"name":"IDE","slug":"IDE","count":1,"path":"api/tags/IDE.json"},{"name":"EditorConfig","slug":"EditorConfig","count":1,"path":"api/tags/EditorConfig.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}