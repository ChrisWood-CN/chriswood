{"title":"docker部署hbase","uid":"f55822a9843defac7c7cd98d8f77df10","slug":"hbase/docker部署hbase","date":"2023-02-06T07:22:50.000Z","updated":"2023-06-15T05:53:59.693Z","comments":true,"path":"api/articles/hbase/docker部署hbase.json","keywords":"chriswood blogs sharing","cover":null,"content":"<h2 id=\"docker搭建hbase\"><a href=\"#docker搭建hbase\" class=\"headerlink\" title=\"docker搭建hbase\"></a>docker搭建hbase</h2><h3 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h3><p>Linux系统：centos 7.6 Hbase：harisekhon&#x2F;hbase</p>\n<h3 id=\"Hbase\"><a href=\"#Hbase\" class=\"headerlink\" title=\"Hbase\"></a>Hbase</h3><p>1.拉取镜像 并部署启动</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">方式一 手动分配所有端口\ndocker run -d -p 2181:2181 \\\n-p 8080:8080 -p 8085:8085 -p 9090:9090 -p 9095:9095 \\\n-p 16000:16000 -p 16010:16010 -p 16201:16201 -p 16301:16301  -p 16030:16030 -p 16020:16020 \\\n--name hbase harisekhon&#x2F;hbase\n\n方式二 系统自动映射端口（-P主机随机分配端口与宿主机上端口进行映射）\ndocker run -d --name hbase -P harisekhon&#x2F;hbase\n\n方式三 只映射web页面的端口（推荐）\ndocker run -d --name hbase -p 16010:16010 harisekhon&#x2F;hbase\n\n2181\tzookeeper\tzkCli.sh -server zookeeper1:2181\t客户端接入\n16000\tHBase Master\thbase-client-1.x.x.jar\tRegionServer接入\n16010\tHBase Master\thttp:&#x2F;&#x2F;namenode1:16010&#x2F;\t集群监控\n16020\tHBase RegionServer\t\t客户端接入\n16030\tHBase RegionServer\thttp:&#x2F;&#x2F;datanode1:16030&#x2F;\t节点监控</code></pre>\n\n<p>打开网址： <a href=\"http://xxx.xxx.xxx.xxx:16010/master-status\">http://xxx.xxx.xxx.xxx:16010/master-status</a><br>2.Host文件设置 如果在本地访问 Hbase网址，还需要在HOST文件中添加Hbase与域名的映射。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">xxx.xxx.xxx.xxx b0fbee058d4e</code></pre>\n\n<p>3.环境变量 实际项目在开发环境利用Java来操作Hbase所以还需要在本地配置下Hadoop环境变量。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HODOOP_HOME： D:\\Environment\\Hadoop\\2.10.1\nPATH： %HODOOP_HOME%\\bin</code></pre>\n\n<p>4.hbase操作</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">docker exec -it hbase bash\ncd hbase-2.1.3&#x2F;bin</code></pre>\n\n<ul>\n<li>进入hbase客户端</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">.&#x2F;hbase shell</code></pre>\n\n<ul>\n<li>创建命名空间</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">create_namespace &#39;test&#39;</code></pre>\n\n<ul>\n<li>查看命名空间</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">list_namespace</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注：HBase系统默认定义了两个默认的 namespace hbase：系统内建表，包括 namespace 和 meta 表 default：用户建表时未指定 namespace 的表都创建在此</p></blockquote>\n<ul>\n<li>删除命名空间</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">drop_namespace &#39;test&#39;</code></pre>\n\n<ul>\n<li>创建表</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">create &#39;命名空间:表名&#39;，&#123;NAME &#x3D;&gt; ’列族名‘, &#39;列族属性&#39; &#x3D;&gt;  &#39;&#39;&#125;\ncreate &#39;test:user&#39;, &#123;NAME &#x3D;&gt; &#39;aaa&#39;, VERSIONS &#x3D;&gt; &#39;3&#39;, TTL &#x3D;&gt; &#39;2147483647&#39;, &#39;BLOOMFILTER&#39; &#x3D;&gt; &#39;ROW&#39;&#125;, \n\t\t\t\t\t&#123;NAME &#x3D;&gt; &#39;bbb&#39;, VERSIONS &#x3D;&gt; &#39;3&#39;, TTL &#x3D;&gt; &#39;2147483647&#39;, &#39;BLOOMFILTER&#39; &#x3D;&gt; &#39;ROW&#39;&#125;\n# 意思是，在 test 命名空间下创建 user 表，表中有两个列族，分别是列 aaa 和 bbb，版本有3个，存活时间 2147483647(s)，布隆过滤器过滤依据是 RowKey。</code></pre>\n\n<ul>\n<li>查看表结构</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">desc &#39;命名空间:表名&#39;</code></pre>\n\n<ul>\n<li>修改列族属性</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">alter &#39;命名空间:表名&#39;, NAME &#x3D;&gt; &#39;列族名&#39;, 列族属性&#x3D;&gt; &#39;NewValue&#39;</code></pre>\n\n<ul>\n<li>查看命名空间下的表</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">list_namespace_tables &#39;命名空间&#39;</code></pre>\n\n<ul>\n<li>删除表</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">disable &#39;test:user&#39; # 删除前要先禁用表\ndrop &#39;test:user&#39; \t# 执行删除</code></pre>\n\n<ul>\n<li>扫描数据（多行）</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">scan &#39;命名空间:表名&#39;</code></pre>\n\n<ul>\n<li>添加数据</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">put ‘命名空间:表名’, &#39;RowKey&#39;, &#39;列族:列&#39;, &#39;具体值&#39;\n\nput &#39;test:user&#39;,&#39;1&#39;, &#39;aaa:name&#39;, &#39;zhangsan&#39;\nput &#39;test:user&#39;,&#39;1&#39;, &#39;bbb:phone&#39;, &#39;12345678919&#39;\n\nput &#39;test:user&#39;,&#39;2&#39;, &#39;aaa:name&#39;, &#39;lisi&#39; </code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注：HBase 是列族式数据库，所以是在真正添加数据时才指定有哪些列</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在建表时设置了 Version&#x3D;3 ，aaa:name 可以保存三个值 put ‘test:user’,’1’, ‘b:name’, ‘wangwu’ put ‘test:user’,’1’, ‘b:name’, ‘zhaoliu’<br>为什么添加后再 scan 看不到添加的数据呢？<br>因为 scan 扫描多行，所以显示的是所有列的最新版本；要获取一个列列数据的所有版本要通过单列查询 get…</p></blockquote>\n<ul>\n<li>获取数据（单行）</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">get &#39;命名空间:表名&#39;, &#39;RowKey&#39; \t\t\t\t\t\t # 获取指定行键的数据\nget &#39;命名空间:表名&#39;, &#39;RowKey&#39;, &#123;COLUMN &#x3D;&gt; &#39;列族:列&#39;&#125;    # 获取指定行键的指定列的数据\nget &#39;命名空间:表名&#39;, &#39;RowKey&#39;, &#123;COLUMN &#x3D;&gt; &#39;列族:列&#39;, VERSIONS &#x3D;&gt; n&#125;   # 获取指定行键的指定列的数据，显示n个版本\n\nget &#39;test:user&#39;, &#39;1&#39;, &#123;COLUMN &#x3D;&gt; &#39;aaa:name&#39;, VERSIONS &#x3D;&gt; 3&#125; # 注：建表时设置的 3，即使你这写个 4，也只能返回三行数据</code></pre>\n\n<ul>\n<li>更新数据</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">put ‘命名空间:表名’, &#39;RowKey&#39;, &#39;列族:列&#39;, &#39;NewValue&#39; #更新其实就是追加（如果此时数据个数到达 Version 数了，那么前面最老的版本就会被淘汰）</code></pre>\n\n<ul>\n<li><p>删除数据</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">delete &#39;命名空间:表名&#39;, &#39;RowKey&#39;, &#39;列族:列&#39;, 时间戳（注：如果不指定时间戳，则默认删除最新版本）</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>已经有4条数据了 删除最新的一条 则之前三条会出来<br>重点：HBase 的删除只是打上了删除了标记（墓碑标记），跟更新一样，并不是真正移除，过早的版本会在执行 Major Compaction 时真正删除</p></blockquote>\n</li>\n<li><p>清空表中数据</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">truncate&#96; &#39;命名空间:表名&#39; # 三步：1.禁用 2.删除 3.重建</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注：HBase 的脚本是.hsh，跟.sql一个意思。</p></blockquote>\n</li>\n</ul>\n","text":"docker搭建hbase环境Linux系统：centos 7.6 Hbase：harisekhon&#x2F;hbase Hbase1.拉取镜像 并部署启动 方式一 手动分配所有端口 docker run -d -p 2181:2181 \\ -p 8080:8080 -p 80...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"hbase","slug":"hbase","count":1,"path":"api/categories/hbase.json"}],"tags":[{"name":"docker","slug":"docker","count":4,"path":"api/tags/docker.json"},{"name":"hbase","slug":"hbase","count":1,"path":"api/tags/hbase.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#docker%E6%90%AD%E5%BB%BAhbase\"><span class=\"toc-text\">docker搭建hbase</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">环境</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Hbase\"><span class=\"toc-text\">Hbase</span></a></li></ol></li></ol>","author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"springboot日志配置","uid":"6bb5feb5ebe53be9e2c2838a6f221b1e","slug":"springboot/springboot日志配置","date":"2023-02-07T06:59:47.000Z","updated":"2023-06-15T05:53:59.701Z","comments":true,"path":"api/articles/springboot/springboot日志配置.json","keywords":"chriswood blogs sharing","cover":null,"text":"默认日志 Logback默认情况下，Spring Boot会用Logback来记录日志，并用INFO级别输出到控制台。 spring-boot-starter其中包含了 spring-boot-starter-logging，该依赖内容就是 Spring Boot默认的日志框架 ...","link":"","photos":[],"count_time":{"symbolsCount":"18k","symbolsTime":"16 mins."},"categories":[{"name":"springboot","slug":"springboot","count":2,"path":"api/categories/springboot.json"}],"tags":[{"name":"springboot","slug":"springboot","count":2,"path":"api/tags/springboot.json"},{"name":"springboot配置","slug":"springboot配置","count":2,"path":"api/tags/springboot配置.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"kafka学习","uid":"61a9c9a9f7385f264375e290c4106594","slug":"kafka/kafka学习","date":"2023-02-02T08:21:26.000Z","updated":"2023-06-15T05:53:59.693Z","comments":true,"path":"api/articles/kafka/kafka学习.json","keywords":"chriswood blogs sharing","cover":null,"text":"安装启动ZooKeeper（单机模式）1.下载解压镜像地址下载zookeeper，tar -zxvf 解压至&#x2F;opt2.配置环境变量 vim &#x2F;etc&#x2F;profile export ZOOKEEPER_HOME&#x3D;&#x2F;opt&#x2F...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"kafka","slug":"kafka","count":2,"path":"api/categories/kafka.json"}],"tags":[{"name":"kafka","slug":"kafka","count":2,"path":"api/tags/kafka.json"},{"name":"zookeeper","slug":"zookeeper","count":1,"path":"api/tags/zookeeper.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}