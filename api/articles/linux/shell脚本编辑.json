{"title":"shell脚本编辑","uid":"26dd4557ea6b40d458e20ec9154add38","slug":"linux/shell脚本编辑","date":"2023-06-09T06:44:00.000Z","updated":"2023-06-28T15:04:44.665Z","comments":true,"path":"api/articles/linux/shell脚本编辑.json","keywords":"chriswood blogs sharing","cover":null,"content":"<h2 id=\"shell-脚本语法\"><a href=\"#shell-脚本语法\" class=\"headerlink\" title=\"shell 脚本语法\"></a>shell 脚本语法</h2><h4 id=\"1-demo-sh\"><a href=\"#1-demo-sh\" class=\"headerlink\" title=\"1.demo.sh\"></a>1.demo.sh</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#!&#x2F;bin&#x2F;bash\necho hello world!</code></pre>\n<p>给shell脚本可运行权限</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">chmod +x demo.sh</code></pre>\n<h4 id=\"2-read命令\"><a href=\"#2-read命令\" class=\"headerlink\" title=\"2.read命令\"></a>2.read命令</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#!&#x2F;bin&#x2F;bash\necho &quot;please input name and your age：&quot;\nread name age\necho &quot;your name:&quot; $name &quot;,your age: $age&quot;\t# shell 脚本输出变量：$变量名</code></pre>\n<h4 id=\"3、数值计算\"><a href=\"#3、数值计算\" class=\"headerlink\" title=\"3、数值计算\"></a>3、数值计算</h4><p>shell 仅支持整型，数值计算使用$((表达式))</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#!&#x2F;bin&#x2F;bash\nread -p &quot;please input operand and number: &quot; operand number #-p 后面跟提示信息，即在输入前打印提示信息\t\necho &quot;$operand + $number &#x3D; $(($operand+$number))&quot;\necho &quot;$operand - $number &#x3D; $(($operand - $number))&quot;\necho &quot;$operand * $number &#x3D; $(($operand * $number))&quot;\ndivided&#x3D;$(($operand&#x2F;$number))\t\t#赋值等号间不能有空格!\necho &quot;$operand &#x2F; $number &#x3D; $divided&quot;</code></pre>\n<h4 id=\"4-test命令\"><a href=\"#4-test命令\" class=\"headerlink\" title=\"4.test命令\"></a>4.test命令</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cmd1 &amp;&amp; cmd2\n#当 cmd1 执行完毕且正确，那么 cmd2 执行，当 cmd1 执行完毕且错误，那么 cmd2 不执行\ncmd1 || cmd2\n#当 cmd1 执行完毕且正确，那么 cmd2 不执行，当 cmd1 执行完毕且错误，那么 cmd2 执行</code></pre>\n<p>test命令用于查看文件是否存在、权限等信息，可以进行数值、字符和文件三方面的测试</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#!&#x2F;bin&#x2F;bash\nread -p &quot;please input first string: &quot; firstStr\nread -p &quot;please input second string: &quot; secondStr\ntest $firstStr &#x3D; $secondStr &amp;&amp; echo &quot;The two strings are the same&quot; || echo &quot;The two strings are not the same&quot;\n# test str1 &#x3D; str2 ：两个字符串相等则为真</code></pre>\n<h4 id=\"5、中括号判断符\"><a href=\"#5、中括号判断符\" class=\"headerlink\" title=\"5、中括号判断符\"></a>5、中括号判断符</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#!&#x2F;bin&#x2F;bash\nread -p &quot;please input first string: &quot; firstStr\nread -p &quot;please input second string: &quot; secondStr\n[ &quot;$firstStr&quot; &#x3D;&#x3D; &quot;$secondStr&quot; ] &amp;&amp; echo &quot;The two strings are the same&quot; || echo &quot;The two strings are not the same&quot;\n# 中括号两端内测要加空格，内容建议加 &quot;&quot;，否则有空格时会出现参数过多\n[ &quot;$firstStr&quot; !&#x3D; &quot;$secondStr&quot; ] &amp;&amp; echo &quot;The two strings are not the same&quot; || echo &quot;The two strings are the same&quot;\n[ &quot;$firstStr&quot; &#x3D; &quot;$secondStr&quot; ] &amp;&amp; echo &quot;The two strings are the same&quot; || echo &quot;The two strings are not the same&quot;\necho firstStr:  $firstStr\necho secondStr: $secondStr</code></pre>\n<h4 id=\"6、默认变量\"><a href=\"#6、默认变量\" class=\"headerlink\" title=\"6、默认变量\"></a>6、默认变量</h4><p>$0 ~ $n，表示 shell 脚本的执行参数，包括 shell 脚本执行命令本身，shell 脚本执行命令本身为$0。<br>$#表示最后一个参数的标号，$@表示除$0外的所有参数</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#!&#x2F;bin&#x2F;bash\necho &quot;The zero parameter  ：&quot;$0\necho &quot;The first parameter ：&quot;$1\necho &quot;The second parameter：&quot;$2\necho &quot;The label of the last parameter：&quot;$#\necho &quot;All parameters      ：&quot;$@</code></pre>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">.&#x2F;demo.sh 001 002\n# The zero parameter .&#x2F;demo.sh\n# The first parameter 001\n# The second parameter 002\n# The label of the last parameter： 2\n# All parameters 001 002</code></pre>\n<h4 id=\"7、条件判断\"><a href=\"#7、条件判断\" class=\"headerlink\" title=\"7、条件判断\"></a>7、条件判断</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">if 条件判断;then\n\t# 判断成立后要执行的语句\nfi\t\t\t\t# 结束语句\n\n\nif 条件判断; then\n\t# 条件判断后成立要执行的语句\nelse\n\t# 条件判断后不成立要执行的语句\nfi\n\n\nif 条件判断; then\n\t# 条件判断后成立要执行的语句\nelif 条件判断;then\t\t# 此语句可多次添加\n\t# 条件判断后成立要执行的语句\nelse\n\t# 条件判断后不成立要执行的语句\nfi\n\n\ncase $变量 in\t\t# 与 C语言 switch case 相似\n&quot;第一个变量内容&quot;)\n\t# 程序段\n\t;;\t\t# 表示第一个程序块结束\n&quot;第二个变量内容&quot;)\n\t# 程序段\n\t;;\t\t# 表示第二个程序块结束\n&quot;第n个变量内容&quot;)\n\t# 程序段\n\t;;\t\t# 表示第 n个程序块结束\n*)\t\t\t# 类似 C语言 switch case的 default\n\t# 程序段\n\t;;\nesac</code></pre>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#!&#x2F;bin&#x2F;bash\nread -p &quot;please input(Y&#x2F;N):&quot; value\n\nif [ &quot;$value&quot; &#x3D;&#x3D; &quot;Y&quot;  ] || [  &quot;$value&quot; &#x3D;&#x3D; &quot;y&quot; ]; then\n        echo &quot;your input is Y&quot;\n        exit 0\nfi\n\nif [ &quot;$value&quot; &#x3D;&#x3D; &quot;N&quot;  ] || [  &quot;$value&quot; &#x3D;&#x3D; &quot;n&quot; ]; then\n        echo &quot;your input is N&quot;\n        exit 0\nfi</code></pre>\n<h4 id=\"8、函数\"><a href=\"#8、函数\" class=\"headerlink\" title=\"8、函数\"></a>8、函数</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">function fname()&#123;\t\t# function 可写可不写\n\t# 函数代码段\n&#125;\nfname\t\t# 函数调用\nfname param1 param2\t\t# 函数传参</code></pre>\n<h4 id=\"9、循环\"><a href=\"#9、循环\" class=\"headerlink\" title=\"9、循环\"></a>9、循环</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">while 条件\t\t\t# 条件状态为判断式，条件成立时循环，直到条件不成立\ndo\t\t\t\t\t# 循环开始\n\t# 循环代码段\ndone\n\nuntil 条件\t\t\t# 条件状态为判断式，条件不成立时循环，直到条件成立\ndo\t\t\t\t\t# 循环开始\n\t# 循环代码段\ndone\n\nfor var in con1 con2 con3 ......\ndo\n\t# 循环代码段\ndone\n# 变量 var 循环变化，第一次循环等于 con1，第二次循环等于 con2，以此类推\n\n\nfor((初始值;限制值;执行步长))\ndo\n\t# 循环代码段\ndone\n# 用法类似于 C语言 for循环</code></pre>\n<h4 id=\"10、一般写法\"><a href=\"#10、一般写法\" class=\"headerlink\" title=\"10、一般写法\"></a>10、一般写法</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 获取PID\nPID&#x3D;&#96;ps -ef |grep java|grep app|grep -v grep|awk &#39;&#123;print $2&#125;&#39;&#96;\nkill -TERM $PID</code></pre>\n","text":"shell 脚本语法1.demo.sh#!&#x2F;bin&#x2F;bash echo hello world! 给shell脚本可运行权限 chmod +x demo.sh 2.read命令#!&#x2F;bin&#x2F;bash echo &quot;please in...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"shell","slug":"shell","count":1,"path":"api/categories/shell.json"}],"tags":[{"name":"shell","slug":"shell","count":1,"path":"api/tags/shell.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#shell-%E8%84%9A%E6%9C%AC%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">shell 脚本语法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-demo-sh\"><span class=\"toc-text\">1.demo.sh</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-read%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">2.read命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3%E3%80%81%E6%95%B0%E5%80%BC%E8%AE%A1%E7%AE%97\"><span class=\"toc-text\">3、数值计算</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-test%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">4.test命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5%E3%80%81%E4%B8%AD%E6%8B%AC%E5%8F%B7%E5%88%A4%E6%96%AD%E7%AC%A6\"><span class=\"toc-text\">5、中括号判断符</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6%E3%80%81%E9%BB%98%E8%AE%A4%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">6、默认变量</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#7%E3%80%81%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD\"><span class=\"toc-text\">7、条件判断</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#8%E3%80%81%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">8、函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#9%E3%80%81%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">9、循环</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#10%E3%80%81%E4%B8%80%E8%88%AC%E5%86%99%E6%B3%95\"><span class=\"toc-text\">10、一般写法</span></a></li></ol></li></ol></li></ol>","author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"k3s部署rancher","uid":"ed36a2a5be80ea11d6c25858e6e2bac9","slug":"kubernetes/k3s部署rancher","date":"2023-06-15T00:50:21.000Z","updated":"2023-06-28T15:04:44.661Z","comments":true,"path":"api/articles/kubernetes/k3s部署rancher.json","keywords":"chriswood blogs sharing","cover":null,"text":"简易版rancher版本2.7.4 部署k3s server节点如果是windows环境，推荐使用k3d在docker中安装k3s k3d cluster create --config local-k3s.yaml # k3d configuration file, saved...","link":"","photos":[],"count_time":{"symbolsCount":"5.5k","symbolsTime":"5 mins."},"categories":[{"name":"rancher","slug":"rancher","count":1,"path":"api/categories/rancher.json"}],"tags":[{"name":"rancher","slug":"rancher","count":1,"path":"api/tags/rancher.json"},{"name":"k3s","slug":"k3s","count":1,"path":"api/tags/k3s.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"docker-entrypoint.sh脚本","uid":"bd89df672fae4e3ad93a3365c0b7431d","slug":"docker/docker-entrypoint-sh脚本","date":"2023-06-09T06:13:44.000Z","updated":"2023-06-28T15:04:44.661Z","comments":true,"path":"api/articles/docker/docker-entrypoint-sh脚本.json","keywords":"chriswood blogs sharing","cover":null,"text":"出处很多著名库的Dockerfile文件中，通常都是ENTRYPOINT字段是这样： ENTRYPOINT [&quot;docker-entrypoint.sh&quot;] 用处我们参考分析下MySQL的Dockerfile文件，来认识下docker-entrypoint.s...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"docker","slug":"docker","count":6,"path":"api/categories/docker.json"}],"tags":[{"name":"docker","slug":"docker","count":5,"path":"api/tags/docker.json"},{"name":"docker-entrypoint.sh","slug":"docker-entrypoint-sh","count":1,"path":"api/tags/docker-entrypoint-sh.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}