{"title":"Linux-iptables学习","uid":"8fa7fefe6aa0f69b9eef61d9ade88e6e","slug":"linux/Linux-iptables学习","date":"2023-06-15T05:43:19.000Z","updated":"2024-06-19T06:04:57.002Z","comments":true,"path":"api/articles/linux/Linux-iptables学习.json","keywords":"chriswood blogs sharing","cover":null,"content":"<h2 id=\"iptables介绍\"><a href=\"#iptables介绍\" class=\"headerlink\" title=\"iptables介绍\"></a>iptables介绍</h2><p>iptables组成Linux平台下的包过滤防火墙，与大多数的Linux软件一样，这个包过滤防火墙是免费的，在安装系统的时候就已经自带</p>\n<h2 id=\"基础概念\"><a href=\"#基础概念\" class=\"headerlink\" title=\"基础概念\"></a>基础概念</h2><h3 id=\"1-规则（rules）\"><a href=\"#1-规则（rules）\" class=\"headerlink\" title=\"1.规则（rules）\"></a>1.规则（rules）</h3><p>规则（rules）其实就是网络管理员预定义的条件，规则一般的定义为“如果数据包头符合这样的条件，就这样处理这个数据包”。规则存<br>储在内核空间的信息 包过滤表中，这些规则分别指定了源地址、目的地址、传输协议（如TCP、UDP、ICMP）和服务类型（如HTTP、FTP<br>和SMTP）等。当数据包与规 则匹配时，iptables就根据规则所定义的方法来处理这些数据包，如放行（accept）、拒绝（reject）和<br>丢弃（drop）等。配置防火墙的 主要工作就是添加、修改和删除这些规则</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">iptables -L\n\n#Chain INPUT (policy ACCEPT)\n#target     prot opt source               destination    \n#ACCEPT     all  --  anywhere             VM-4-11-centos&#x2F;16     \n#Chain FORWARD (policy ACCEPT)\n#target     prot opt source               destination   \n#ACCEPT     all  --  anywhere             VM-4-11-centos&#x2F;16       \n#Chain OUTPUT (policy ACCEPT)\n#target     prot opt source               destination  \n#ACCEPT     all  --  anywhere             anywhere\n# 可以看出在 INPUT、FORWARD、OUTPUT着三条默认规则中都是accept，所有此时iptables没有对数据进行任何控制。\n\n# 设置默认规则\n#命令格式：iptables -P INPUT&#x2F;FORWARD&#x2F;OUTPUT 行为\niptables -P OUTPUT DROP\n# 现在在output链上设置了默认规则，即所有从本机发出的数据包都会被丢掉</code></pre>\n<h3 id=\"2-规则表和链\"><a href=\"#2-规则表和链\" class=\"headerlink\" title=\"2.规则表和链\"></a>2.规则表和链</h3><p>表（tables）提供特定的功能，iptables内置了4个表，即filter表、nat表、mangle表和raw表，分别用于实现包过滤，网络地址<br>转换、包重构(修改)和数据跟踪处理</p>\n<p>链（chains）是数据包传播的路径，每一条链其实就是众多规则中的一个检查清单，每一条链中可以有一条或数条规则。当一个数据包<br>到达一个链时，iptables就会从链中第一条规则开始检查，看该数据包是否满足规则所定义的条件。如果满足，系统就会根据该条规则<br>所定义的方法处理该数据包；否则iptables将继续检查下一条规则，如果该数据包不符合链中任一条规则，iptables就会根据该链预<br>先定义的默认策略来处理数据包</p>\n<p>Iptables采用“表”和“链”的分层结构。在RHEL5中是四张表五个链。下面罗列一下这四张表和五个链。注意一定要明白这些表和链的关<br>系及作用。</p>\n<h4 id=\"1）规则表\"><a href=\"#1）规则表\" class=\"headerlink\" title=\"1）规则表\"></a>1）规则表</h4><h5 id=\"filter表（默认）——三个链：INPUT、FORWARD、OUTPUT\"><a href=\"#filter表（默认）——三个链：INPUT、FORWARD、OUTPUT\" class=\"headerlink\" title=\"filter表（默认）——三个链：INPUT、FORWARD、OUTPUT\"></a>filter表（默认）——三个链：INPUT、FORWARD、OUTPUT</h5><p>作用：过滤数据包  内核模块：iptables_filter.</p>\n<h5 id=\"Nat表——三个链：PREROUTING、POSTROUTING、OUTPUT\"><a href=\"#Nat表——三个链：PREROUTING、POSTROUTING、OUTPUT\" class=\"headerlink\" title=\"Nat表——三个链：PREROUTING、POSTROUTING、OUTPUT\"></a>Nat表——三个链：PREROUTING、POSTROUTING、OUTPUT</h5><p>作用：用于网络地址转换（IP、端口） 内核模块：iptable_nat</p>\n<h5 id=\"Mangle表——五个链：PREROUTING、POSTROUTING、INPUT、OUTPUT、FORWARD\"><a href=\"#Mangle表——五个链：PREROUTING、POSTROUTING、INPUT、OUTPUT、FORWARD\" class=\"headerlink\" title=\"Mangle表——五个链：PREROUTING、POSTROUTING、INPUT、OUTPUT、FORWARD\"></a>Mangle表——五个链：PREROUTING、POSTROUTING、INPUT、OUTPUT、FORWARD</h5><p>作用：修改数据包的服务类型、TTL、并且可以配置路由实现QOS内核模块：iptable_mangle(设置策略时几乎不会用到它)</p>\n<h5 id=\"Raw表——两个链：OUTPUT、PREROUTING\"><a href=\"#Raw表——两个链：OUTPUT、PREROUTING\" class=\"headerlink\" title=\"Raw表——两个链：OUTPUT、PREROUTING\"></a>Raw表——两个链：OUTPUT、PREROUTING</h5><p>作用：决定数据包是否被状态跟踪机制处理  内核模块：iptable_raw</p>\n<h4 id=\"（2）规则链\"><a href=\"#（2）规则链\" class=\"headerlink\" title=\"（2）规则链\"></a>（2）规则链</h4><h5 id=\"INPUT——进来的数据包应用此规则链中的策略\"><a href=\"#INPUT——进来的数据包应用此规则链中的策略\" class=\"headerlink\" title=\"INPUT——进来的数据包应用此规则链中的策略\"></a>INPUT——进来的数据包应用此规则链中的策略</h5><h5 id=\"OUTPUT——外出的数据包应用此规则链中的策略\"><a href=\"#OUTPUT——外出的数据包应用此规则链中的策略\" class=\"headerlink\" title=\"OUTPUT——外出的数据包应用此规则链中的策略\"></a>OUTPUT——外出的数据包应用此规则链中的策略</h5><h5 id=\"FORWARD——转发数据包时应用此规则链中的策略\"><a href=\"#FORWARD——转发数据包时应用此规则链中的策略\" class=\"headerlink\" title=\"FORWARD——转发数据包时应用此规则链中的策略\"></a>FORWARD——转发数据包时应用此规则链中的策略</h5><h5 id=\"PREROUTING——对数据包作路由选择前应用此链中的规则（记住！所有的数据包进来的时侯都先由这个链处理）\"><a href=\"#PREROUTING——对数据包作路由选择前应用此链中的规则（记住！所有的数据包进来的时侯都先由这个链处理）\" class=\"headerlink\" title=\"PREROUTING——对数据包作路由选择前应用此链中的规则（记住！所有的数据包进来的时侯都先由这个链处理）\"></a>PREROUTING——对数据包作路由选择前应用此链中的规则（记住！所有的数据包进来的时侯都先由这个链处理）</h5><h5 id=\"POSTROUTING——对数据包作路由选择后应用此链中的规则（所有的数据包出来的时侯都先由这个链处理）\"><a href=\"#POSTROUTING——对数据包作路由选择后应用此链中的规则（所有的数据包出来的时侯都先由这个链处理）\" class=\"headerlink\" title=\"POSTROUTING——对数据包作路由选择后应用此链中的规则（所有的数据包出来的时侯都先由这个链处理）\"></a>POSTROUTING——对数据包作路由选择后应用此链中的规则（所有的数据包出来的时侯都先由这个链处理）</h5><h4 id=\"（3）规则表之间的优先顺序\"><a href=\"#（3）规则表之间的优先顺序\" class=\"headerlink\" title=\"（3）规则表之间的优先顺序\"></a>（3）规则表之间的优先顺序</h4><p>Raw——Mangle——Nat——filter</p>\n<h4 id=\"（4）规则链之间的优先顺序（分三种情况）\"><a href=\"#（4）规则链之间的优先顺序（分三种情况）\" class=\"headerlink\" title=\"（4）规则链之间的优先顺序（分三种情况）\"></a>（4）规则链之间的优先顺序（分三种情况）</h4><h5 id=\"第一种情况：入站数据流向\"><a href=\"#第一种情况：入站数据流向\" class=\"headerlink\" title=\"第一种情况：入站数据流向\"></a>第一种情况：入站数据流向</h5><p>从外界到达防火墙的数据包，先被PREROUTING规则链处理（是否修改数据包地址等），之后会进行路由选择（判断该数据包应该发往何处）<br>，如果数据包的目标主机是防火墙本机（比如说Internet用户访问防火墙主机中的web服务器的数据包），那么内核将其传给INPUT链进<br>行处理（决定是否允许通过等），通过以后再交给系统上层的应用程序（比如Apache服务器）进行响应</p>\n<h5 id=\"第二冲情况：转发数据流向\"><a href=\"#第二冲情况：转发数据流向\" class=\"headerlink\" title=\"第二冲情况：转发数据流向\"></a>第二冲情况：转发数据流向</h5><p>来自外界的数据包到达防火墙后，首先被PREROUTING规则链处理，之后会进行路由选择，如果数据包的目标地址是其它外部地址（比如局域<br>网用户通过网关访问QQ站点的数据包），则内核将其传递给FORWARD链进行处理（是否转发或拦截），然后再交给POSTROUTING规则链（<br>是否修改数据包的地址等）进行处理</p>\n<h5 id=\"第三种情况：出站数据流向\"><a href=\"#第三种情况：出站数据流向\" class=\"headerlink\" title=\"第三种情况：出站数据流向\"></a>第三种情况：出站数据流向</h5><p>防火墙本机向外部地址发送的数据包（比如在防火墙主机中测试公网DNS服务器时），首先被OUTPUT规则链处理，之后进行路由选择，然<br>后传递给POSTROUTING规则链（是否修改数据包的地址等）进行处理</p>\n<h2 id=\"命令行\"><a href=\"#命令行\" class=\"headerlink\" title=\"命令行\"></a>命令行</h2><pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\"># 格式\niptables [-t 表名] 命令选项 ［链名］ ［条件匹配］ ［-j 目标动作或跳转］\n# 说明：\n表名、链名：    用于指定 iptables命令所操作的表和链；\n命令选项：      用于指定管理iptables规则的方式（比如：插入、增加、删除、查看等）；\n条件匹配：      用于指定对符合什么样条件的数据包进行处理；\n目标动作或跳转：用于指定数据包的处理方式（比如允许通过、拒绝、丢弃、跳转（Jump）给其它链处理。\n\nCommands:\nEither long or short options are allowed.\n  --append  -A chain            Append to chain\n  --check   -C chain            Check for the existence of a rule\n  --delete  -D chain            Delete matching rule from chain\n  --delete  -D chain rulenum\n                                Delete rule rulenum (1 &#x3D; first) from chain\n  --insert  -I chain [rulenum]\n                                Insert in chain as rulenum (default 1&#x3D;first)\n  --replace -R chain rulenum\n                                Replace rule rulenum (1 &#x3D; first) in chain\n  --list    -L [chain [rulenum]]\n                                List the rules in a chain or all chains\n  --list-rules -S [chain [rulenum]]\n                                Print the rules in a chain or all chains\n  --flush   -F [chain]          Delete all rules in  chain or all chains\n  --zero    -Z [chain [rulenum]]\n                                Zero counters in chain or all chains\n  --new     -N chain            Create a new user-defined chain\n  --delete-chain\n            -X [chain]          Delete a user-defined chain\n  --policy  -P chain target\n                                Change policy on chain to target\n  --rename-chain\n            -E old-chain new-chain\n                                Change chain name, (moving any references)   \nOptions:\n    --ipv4      -4              Nothing (line is ignored by ip6tables-restore)\n    --ipv6      -6              Error (line is ignored by iptables-restore)\n[!] --protocol  -p proto        protocol: by number or name, eg. &#96;tcp&#39;\n[!] --source    -s address[&#x2F;mask][...]\n                                source specification\n[!] --destination -d address[&#x2F;mask][...]\n                                destination specification\n[!] --in-interface -i input name[+]\n                                network interface name ([+] for wildcard)\n --jump -j target\n                                target for rule (may load target extension)\n  --goto      -g chain\n                              jump to chain with no return\n  --match       -m match\n                                extended match (may load extension)\n  --numeric     -n              numeric output of addresses and ports\n[!] --out-interface -o output name[+]\n                                network interface name ([+] for wildcard)\n  --table       -t table        table to manipulate (default: &#96;filter&#39;)\n  --verbose     -v              verbose mode\n  --wait        -w [seconds]    maximum wait to acquire xtables lock before give up\n  --wait-interval -W [usecs]    wait time to try to acquire xtables lock\n                                default is 1 second\n  --line-numbers                print line numbers when listing\n  --exact       -x              expand numbers (display exact values)\n[!] --fragment  -f              match second or further fragments only\n  --modprobe&#x3D;&lt;command&gt;          try to insert modules using this command\n  --set-counters PKTS BYTES     set the counter during insert&#x2F;append\n[!] --version   -V              print package version.\n                       \n# 命令的管理控制选项\n-A 在指定链的末尾添加（append）一条新的规则，当源（地址）或者&#x2F;与 目的（地址）转换为多个地址时，这条\n规则会加到所有可能的地址(组合)后面。\n-D 删除（delete）指定链中的某一条规则，可以按规则序号和内容删除\n-I 在指定链中插入（insert）一条新的规则，默认在第一行添加\n-R 修改、替换（replace）指定链中的某一条规则，可以按规则序号和内容替换。规则序号从1开始，第一条就是序号1\n-L 列出（list）指定链中所有的规则进行查看，如果没有选择链，所有链将被显示。也可以和z选项一起使用，这时链\n会被自动列出和归零。精确输出受其它所给参数影响。\n-E 重命名用户定义的链，不改变链本身\n-F 清空（flush）\n-N 新建（new-chain）一条用户自己定义的规则链。这个链必须没有被引用，如果被引用，在删除之前你必须删除或者\n替换与之有关的规则。如果没有给出参数，这条命令将试着删除每个非内建的链。\n-X 删除指定表中用户自定义的规则链（delete-chain）\n-P 设置指定链的默认策略（policy）\n-Z 将所有表的所有链的字节和数据包计数器清零，可以和 -L配合使用，在清空前察看计数器\n-n 使用数字形式（numeric）显示输出结果\n-v 查看规则表详细信息（verbose）的信息\n-V 查看版本(version)\n-h 获取帮助（help）\n-p 规则或者包检查(待检查包)的协议。指定协议可以是tcp、udp、icmp中的一个或者全部，也可以是数值，代表这些\n协议中的某一个。当然也可以使用在&#x2F;etc&#x2F;protocols中定义的协议名。在协议名前加上&quot;!&quot;表示相反的规则。数字0相当\n于所有all。Protocol all会匹配所有协议，而且这是缺省时的选项。在和check命令结合时，all可以不被使用。\n-s 指定源地址，可以是主机名、网络名和清楚的IP地址。mask说明可以是网络掩码或清楚的数字，在网络掩码的左边指\n定网络掩码左边&quot;1&quot;的个数，因此，mask值为24等于255.255.255.0。在指定地址前加上&quot;!&quot;说明指定了相反的地址段。\n标志 --src 是这个选项的简写。\n-d 指定目标地址，要获取详细说明请参见 -s标志的说明。标志 --dst 是这个选项的简写\n-j 目标跳转，指定规则的目标；也就是说，如果包匹配应当做什么。目标可以是用户自定义链（不是这条规则所在的），\n某个会立即决定包的命运的专用内建目标，或者一个扩展（参见下面的EXTENSIONS）。如果规则的这个选项被忽略，那\n么匹配的过程不会对包产生影响，不过规则的计数器会增加。\n-i 这是包经由该接口接收的可选的入口名称，包通过该接口接收（在链INPUT、FORWORD和PREROUTING中进入的包）。\n当在接口名前使用&quot;!&quot;说明后，指的是相反的名称。如果接口名后面加上&quot;+&quot;，则所有以此接口名开头的接口都会被匹配。\n如果这个选项被忽略，会假设为&quot;+&quot;，那么将匹配任意接口。\n-o 这是包经由该接口送出的可选的出口名称，包通过该口输出（在链FORWARD、OUTPUT和POSTROUTING中送出的包）。\n当在接口名前使用&quot;!&quot;说明后，指的是相反的名称。如果接口名后面加上&quot;+&quot;，则所有以此接口名开头的接口都会被匹配。\n如果这个选项被忽略，会假设为&quot;+&quot;，那么将匹配所有任意接口。\n[!] -f, 这意味着在分片的包中，规则只询问第二及以后的片。自那以后由于无法判断这种把包的源端口或目标端口（或\n者是ICMP类型的），这类包将不能匹配任何指定对他们进行匹配的规则。如果&quot;!&quot;说明用在了&quot;-f&quot;标志之前，表示相反的\n意思。\n其他选项\n 还可以指定下列附加选项：\n \n-v 详细输出。这个选项让list命令显示接口地址、规则选项（如果有）和TOS（Type of Service）掩码。包和字节\n计数器也将被显示，分别用K、M、G(前缀)表示1000、1,000,000和1,000,000,000倍（不过请参看-x标志改变它），\n对于添加,插入,删除和替换命令，这会使一个或多个规则的相关详细信息被打印。\n \n-n 数字输出。IP地址和端口会以数字的形式打印。默认情况下，程序试显示主机名、网络名或者服务（只要可用）。\n \n-x 精确扩展数字。显示包和字节计数器的精确值，代替用K,M,G表示的约数。这个选项仅能用于 -L 命令。\n \n--line-numbers 当列表显示规则时，在每个规则的前面加上行号，与该规则在链中的位置相对应。\n \n \n# 目标动作\nACCEPT 允许数据包通过\nDROP   直接丢弃数据包，不给任何回应信息\nREJECT 拒绝数据包通过，必要时会给数据发送端一个响应的信息。\nLOG    在&#x2F;var&#x2F;log&#x2F;messages文件中记录日志信息，然后将数据包传递给下一条规则</code></pre>\n<p>iptables能够使用一些与模块匹配的扩展包。以下就是含于基本包内的扩展包，而且他们大多数都可以通过在前面加上!来表示相反的意思</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">tcp\n\n当 --protocol tcp 被指定,且其他匹配的扩展未被指定时,这些扩展被装载。它提供以下选项：\n\n--source-port [!] [port[:port]]\n源端口或端口范围指定。这可以是服务名或端口号。使用格式端口：端口也可以指定包含的（端口）范围。\n如果首端口号被忽略，默认是&quot;0&quot;，如果末端口号被忽略，默认是&quot;65535&quot;，如果第二个端口号大于第一个，\n那么它们会被交换。这个选项可以使用 --sport的别名。\n \n--destionation-port [!] [port:[port]]\n目标端口或端口范围指定。这个选项可以使用 --dport别名来代替。\n \n--tcp-flags [!] mask comp\n匹配指定的TCP标记。第一个参数是我们要检查的标记，一个用逗号分开的列表，第二个参数是用逗号分开\n的标记表,是必须被设置的。标记如下：SYN ACK FIN RST URG PSH ALL NONE。因此这条命令：\niptables -A FORWARD -p tcp --tcp-flags SYN, ACK, FIN, RST SYN只匹配那些SYN标记被设置而ACK、FIN和RST标记没有设置的包。\n \n[!] --syn\n只匹配那些设置了SYN位而清除了ACK和FIN位的TCP包。这些包用于TCP连接初始化时发出请求；例如，\n大量的这种包进入一个接口发生堵塞时会阻止进入的TCP连接，而出去的TCP连接不会受到影响。\n这等于 --tcp-flags SYN, RST, ACK SYN。如果&quot;--syn&quot;前面有&quot;!&quot;标记，表示相反的意思。\n \n--tcp-option [!] number\n匹配设置了TCP选项的。\n\n\nudp\n \n当protocol udp 被指定,且其他匹配的扩展未被指定时,这些扩展被装载,它提供以下选项：\n \n--source-port [!] [port:[port]]\n源端口或端口范围指定。详见 TCP扩展的--source-port选项说明。\n \n--destination-port [!] [port:[port]]\n目标端口或端口范围指定。详见 TCP扩展的--destination-port选项说明。\n\n\n\nmultiport\n \n这个模块匹配一组源端口或目标端口,最多可以指定15个端口。只能和-p tcp 或者 -p udp 连着使用。\n \n--source-port [port[, port]]\n如果源端口是其中一个给定端口则匹配\n \n--destination-port [port[, port]]\n如果目标端口是其中一个给定端口则匹配\n \n--port [port[, port]]\n若源端口和目的端口相等并与某个给定端口相等,则匹配。\n\n\n\nlimit\n \n这个模块匹配标志用一个标记桶过滤器一一定速度进行匹配,它和LOG目标结合使用来给出有限的登陆数.当达到这个极限值时,\n使用这个扩展包的规则将进行匹配.(除非使用了&quot;!&quot;标记)\n \n--limit rate\n最大平均匹配速率：可赋的值有&#39;&#x2F;second&#39;, &#39;&#x2F;minute&#39;, &#39;&#x2F;hour&#39;, or &#39;&#x2F;day&#39;这样的单位，默认是3&#x2F;hour。\n \n--limit-burst number\n待匹配包初始个数的最大值:若前面指定的极限还没达到这个数值,则概数字加1.默认值为5\n\n\n\nmac\n \n--mac-source [!] address\n匹配物理地址。必须是XX:XX:XX:XX:XX这样的格式。注意它只对来自以太设备并进入PREROUTING、FORWORD和INPUT链的包有效。\n\n\nicmp\n \n当protocol icmp被指定,且其他匹配的扩展未被指定时,该扩展被装载。它提供以下选项：\n \n--icmp-type [!] typename\n这个选项允许指定ICMP类型，可以是一个数值型的ICMP类型，或者是某个由命令iptables -p icmp -h所显示的ICMP类型名。\n\n\n\nSNAT 这个目标只适用于nat表的POSTROUTING链。它规定修改包的源地址（此连接以后所有的包都会被影响），停止对规则的检查，\n它包含选项：\n \n--to-source [-][:port-port] 可以指定一个单一的新的IP地址，一个IP地址范围，也可以附加一个端口范围（只能在指定-p tcp \n或者-p udp的规则里）。如果未指定端口范围，源端口中512以下的（端口）会被安置为其他的512以下的端口；512到1024之间的端口\n会被安置为1024以下的，其他端口会被安置为1024或以上。如果可能，端口不会被修改。\n \n--to-destiontion [-][:port-port] 可以指定一个单一的新的IP地址，一个IP地址范围，也可以附加一个端口范围（只能在指定-p tcp \n或者-p udp的规则里）。如果未指定端口范围，目标端口不会被修改。\n\n\n\nMASQUERADE 只用于nat表的POSTROUTING链。只能用于动态获取IP（拨号）连接：如果你拥有静态IP地址，你要用SNAT。伪装相当于\n给包发出时所经过接口的IP地址设置一个映像，当接口关闭连接会终止。这是因为当下一次拨号时未必是相同的接口地址（以后所有建立\n的连接都将关闭）。它有一个选项：\n\n--to-ports [-port&gt;] 指定使用的源端口范围，覆盖默认的SNAT源地址选择（见上面）。这个选项只适用于指定了-p tcp或者-p udp的规则。\n\n\nREDIRECT 只适用于nat表的PREROUTING和OUTPUT链，和只调用它们的用户自定义链。它修改包的目标IP地址来发送包到机器自身\n（本地生成的包被安置为地址127.0.0.1）。它包含一个选项：\n \n--to-ports [ ] 指定使用的目的端口或端口范围：不指定的话，目标端口不会被修改。只能用于指定了-p tcp 或 -p udp的规则。\n\n\nDIAGNOSTICS 诊断。不同的错误信息会打印成标准错误：退出代码0表示正确。类似于不对的或者滥用的命令行参数错误会返回错误代码2，\n其他错误返回代码为1。\n\n\n\nCOMPATIBILITY WITH IPCHAINS  与ipchains的兼容性。iptables和Rusty Russell的ipchains非常相似。主要区别是INPUT \n链只用于进入本地主机的包,而OUTPUT只用于自本地主机生成的包。因此每个包只经过三个链的一个；以前转发的包会经过所有三个链。\n其他主要区别是 -i 引用进入接口；-o引用输出接口，两者都适用于进入FORWARD链的包。当和可选扩展模块一起使用默认过滤器表时，\niptables是一个纯粹的包过滤器。这能大大减少以前对IP伪装和包过滤结合使用的混淆，所以以下选项作了不同的处理：\n-j MASQ\n-M -S\n-M -L\n\n\nTOS 用来设置IP包的首部八位tos。只能用于mangle表。\n--set-tos tos 你可以使用一个数值型的TOS 值，或者用iptables -j TOS -h 来查看有效TOS名列表\n\n\nMARK 用来设置包的netfilter标记值。只适用于mangle表。\n--set-mark mark\nREJECT 作为对匹配的包的响应，返回一个错误的包：其他情况下和DROP相同。此目标只适用于INPUT、FORWARD和OUTPUT链，和调用\n这些链的用户自定义链。这几个选项控制返回的错误包的特性：\n--reject-with type \nType可以是icmp-net-unreachable、icmp-host-unreachable、icmp-port-nreachable、icmp-proto-unreachable、 \nicmp-net-prohibited 或者 icmp-host-prohibited，该类型会返回相应的ICMP错误信息（默认是port-unreachable）。选项 \necho-reply也是允许的；它只能用于指定ICMP ping包的规则中，生成ping的回应。最后，选项tcp-reset可以用于在INPUT链中,或\n自INPUT链调用的规则，只匹配TCP协议：将回应一个TCP RST包。\n\n\nLOG 为匹配的包开启内核记录。当在规则中设置了这一选项后，linux内核会通过printk()打印一些关于全部匹配包的信息（诸如IP包头字段等）。\n--log-level level\n记录级别（数字或参看 syslog.conf(5)）。\n--log-prefix prefix\n在纪录信息前加上特定的前缀：最多14个字母长，用来和记录中其他信息区别。\n--log-tcp-sequence\n记录TCP序列号。如果记录能被用户读取那么这将存在安全隐患。\n--log-tcp-options\n记录来自TCP包头部的选项。\n--log-ip-options\n记录来自IP包头部的选项。\n\n\ntos 此模块匹配IP包首部的8位tos（服务类型）字段（也就是说，包含在优先位中）。\n--tos tos\n这个参数可以是一个标准名称，（用iptables -m tos -h 察看该列表），或者数值。\n\n\nstate 此模块，当与连接跟踪结合使用时，允许访问包的连接跟踪状态。\n--state state\n这里state是一个逗号分割的匹配连接状态列表。可能的状态是:INVALID表示包是未知连接，ESTABLISHED表示是双向传送的连接，\nNEW表示包为新的连接，否则是非双向传送的，而RELATED表示包由新连接开始，但是和一个已存在的连接在一起，如FTP数据传送，\n或者一个ICMP错误。\n\n\n \nowner 此模块试为本地生成包匹配包创建者的不同特征。只能用于OUTPUT链，而且即使这样一些包（如ICMP ping应答）还可能没\n有所有者，因此永远不会匹配。\n--uid-owner userid：如果给出有效的user id，那么匹配它的进程产生的包。\n--gid-owner groupid：如果给出有效的group id，那么匹配它的进程产生的包。\n--sid-owner seessionid：根据给出的会话组匹配该进程产生的包。\n\n\nmark 这个模块和与netfilter过滤器标记字段匹配（就可以在下面设置为使用MARK标记）。\n--mark value [&#x2F;mask]：匹配那些无符号标记值的包（如果指定mask，在比较之前会给掩码加上逻辑的标记）。\n\n\nMIRROR 这是一个试验示范目标，可用于转换IP首部字段中的源地址和目标地址，再传送该包,并只适用于INPUT、FORWARD和OUTPUT链，\n以及只调用它们的用户自定义链。 </code></pre>\n<p>示例</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#1、查看filter表的iptables规则，包括所有的链。filter表包含INPUT、OUTPUT、FORWARD三个规则链\n#说明：-L是--list的简写，作用是列出规则。\niptables -L\n\n#2、只查看某个表的中的规则。\n#iptables -L [-t 表名]\n# 说明：表名一共有三个：filter,nat,mangle，如果没有指定表名，则默认查看filter表的规则列表（就相当于第一条命令）。\niptables -L -t nat\niptables -L -t raw\n\n#3、iptables -L [-t 表名] [链名]\n#这里多了个链名，就是规则链的名称。\n# 说明：iptables一共有INPUT、OUTPUT、FORWARD、PREROUTING、POSTROUTING五个规则链。\n# 注意：链名必须大写。在Linux系统上，命令的大小写很敏感。\niptables -L INPUT\n\n#4、说明：以数字形式显示规则。如果没有-n，规则中可能会出现anywhere，有了-n，它会变成0.0.0.0&#x2F;\niptables -n -L INPUT\n\n#5、说明：你也可以使用“iptables -L -nv”来查看，这个列表看起来更详细，对技术人员更友好\niptables -nvL INPUT</code></pre>\n<h2 id=\"规则设置\"><a href=\"#规则设置\" class=\"headerlink\" title=\"规则设置\"></a>规则设置</h2><h3 id=\"添加常用策略\"><a href=\"#添加常用策略\" class=\"headerlink\" title=\"添加常用策略\"></a>添加常用策略</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#1.拒绝进入防火墙的所有ICMP协议数据包\niptables -I INPUT -p icmp -j REJECT\n \n \n#2.允许防火墙转发除ICMP协议以外的所有数据包\niptables -A FORWARD -p ! icmp -j ACCEPT  #说明：使用“！”可以将条件取反。\n \n#3.拒绝转发来自192.168.1.10主机的数据，允许转发来自192.168.0.0&#x2F;24网段的数据\niptables -A FORWARD -s 192.168.1.11 -j REJECT \niptables -A FORWARD -s 192.168.0.0&#x2F;24 -j ACCEPT\n# 说明：注意要把拒绝的放在前面不然就不起作用了啊。\n \n#4.丢弃从外网接口（eth1）进入防火墙本机的源地址为私网地址的数据包\niptables -A INPUT -i eth1 -s 192.168.0.0&#x2F;16 -j DROP \niptables -A INPUT -i eth1 -s 172.16.0.0&#x2F;12 -j DROP \niptables -A INPUT -i eth1 -s 10.0.0.0&#x2F;8 -j DROP\n \n#5.封堵网段（192.168.1.0&#x2F;24），两小时后解封。\niptables -I INPUT -s 10.20.30.0&#x2F;24 -j DROP \niptables -I FORWARD -s 10.20.30.0&#x2F;24 -j DROP \nat now 2 hours at&gt; iptables -D INPUT 1 at&gt; iptables -D FORWARD 1\n# 说明：这个策略咱们借助crond计划任务来完成，就再好不过了。\n#[1]   Stopped     at now 2 hours\n \n#6.只允许管理员从202.13.0.0&#x2F;16网段使用SSH远程登录防火墙主机。\niptables -A INPUT -p tcp --dport 22 -s 202.13.0.0&#x2F;16 -j ACCEPT \niptables -A INPUT -p tcp --dport 22 -j DROP\n# 说明：这个用法比较适合对设备进行远程管理时使用，比如位于分公司中的SQL服务器需要被总公司的管理员管理时。\n \n#7.允许本机开放从TCP端口20-1024提供的应用服务。\niptables -A INPUT -p tcp --dport 20:1024 -j ACCEPT \niptables -A OUTPUT -p tcp --sport 20:1024 -j ACCEPT\n \n#8.允许转发来自192.168.0.0&#x2F;24局域网段的DNS解析请求数据包。\niptables -A FORWARD -s 192.168.0.0&#x2F;24 -p udp --dport 53 -j ACCEPT \niptables -A FORWARD -d 192.168.0.0&#x2F;24 -p udp --sport 53 -j ACCEPT\n \n#9.禁止其他主机ping防火墙主机，但是允许从防火墙上ping其他主机\niptables -I INPUT -p icmp --icmp-type Echo-Request -j DROP \niptables -I INPUT -p icmp --icmp-type Echo-Reply -j ACCEPT \niptables -I INPUT -p icmp --icmp-type destination-Unreachable -j ACCEPT\n \n#10.禁止转发来自MAC地址为00：0C：29：27：55：3F的和主机的数据包\niptables -A FORWARD -m mac --mac-source 00:0c:29:27:55:3F -j DROP\n# 说明：iptables中使用“-m 模块关键字”的形式调用显示匹配。咱们这里用“-m mac –mac-source”来表示数据包的源MAC地址。\n \n#11.允许防火墙本机对外开放TCP端口20、21、25、110以及被动模式FTP端口1250-1280\niptables -A INPUT -p tcp -m multiport --dport 20,21,25,110,1250:1280 -j ACCEPT\n# 说明：这里用“-m multiport –dport”来指定目的端口及范围\n\n#12.禁止转发源IP地址为192.168.1.20-192.168.1.99的TCP数据包。\niptables -A FORWARD -p tcp -m iprange --src-range 192.168.1.20-192.168.1.99 -j DROP\n# 说明：此处用“-m –iprange –src-range”指定IP范围。\n \n#13.禁止转发与正常TCP连接无关的非—syn请求数据包。\niptables -A FORWARD -m state --state NEW -p tcp ! --syn -j DROP\n# 说明：“-m state”表示数据包的连接状态，“NEW”表示与任何连接无关的，新的嘛！\n\n#14.拒绝访问防火墙的新数据包，但允许响应连接或与已有连接相关的数据包\niptables -A INPUT -p tcp -m state --state NEW -j DROP \niptables -A INPUT -p tcp -m state --state ESTABLISHED,RELATED -j ACCEPT\n# 说明：“ESTABLISHED”表示已经响应请求或者已经建立连接的数据包，“RELATED”表示与已建立的连接有相关性的，比如FTP数据连接等。\n\n#15.只开放本机的web服务（80）、FTP(20、21、20450-20480)，放行外部主机发住服务器其它端口的应答数据包，将其他入站数据包均予以丢弃处理。\niptables -I INPUT -p tcp -m multiport --dport 20,21,80 -j ACCEPT \niptables -I INPUT -p tcp --dport 20450:20480 -j ACCEPT \niptables -I INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT \niptables -P INPUT DROP</code></pre>\n<h3 id=\"删除iptables规则\"><a href=\"#删除iptables规则\" class=\"headerlink\" title=\"删除iptables规则\"></a>删除iptables规则</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 删除用-D参数\n# 删除之前添加的规则（iptables -A INPUT -s 192.168.1.5 -j DROP）：\niptables -D INPUT -s 192.168.1.5 -j DROP</code></pre>\n<p>有时候要删除的规则太长，删除时要写一大串，既浪费时间又容易写错，这时可以先使用–line-number找出该条规则的行号，再通过行号删除规则。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">iptables -nL --line-number\n#删除第二行规则\niptables -D INPUT 2\n\niptables -F        #清除预设表filter中的所有规则链的规则\niptables -X        #清除预设表filter中使用者自定链中的规则</code></pre>\n<h3 id=\"修改iptables规则\"><a href=\"#修改iptables规则\" class=\"headerlink\" title=\"修改iptables规则\"></a>修改iptables规则</h3><p>修改表中规则使用-R参数，修改链名用-E参数</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">iptables -nL --line-number\niptables -R INPUT 3 -j ACCEPT\n\n# 用新的链名取代旧的链名\niptables -E old-chain-name new-chain-name</code></pre>\n<h3 id=\"防火墙规则的保存与恢复\"><a href=\"#防火墙规则的保存与恢复\" class=\"headerlink\" title=\"防火墙规则的保存与恢复\"></a>防火墙规则的保存与恢复</h3><p>iptables-save把规则保存到文件中，再由目录rc.d下的脚本（&#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;iptables）自动装载</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 使用命令iptables-save来保存规则，生成保存规则的文件 &#x2F;etc&#x2F;sysconfig&#x2F;iptables\niptables-save &gt; &#x2F;etc&#x2F;sysconfig&#x2F;iptables\n# 也可以用\nservice iptables save  # 它能把规则自动保存在&#x2F;etc&#x2F;sysconfig&#x2F;iptables中\n# 当计算机启动时，rc.d下的脚本将用命令iptables-restore调用这个文件，从而就自动恢复了规则</code></pre>\n","text":"iptables介绍iptables组成Linux平台下的包过滤防火墙，与大多数的Linux软件一样，这个包过滤防火墙是免费的，在安装系统的时候就已经自带 基础概念1.规则（rules）规则（rules）其实就是网络管理员预定义的条件，规则一般的定义为“如果数据包头符合这样的条件...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"15 mins."},"categories":[{"name":"Linux","slug":"Linux","count":3,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":4,"path":"api/tags/Linux.json"},{"name":"iptables","slug":"iptables","count":1,"path":"api/tags/iptables.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#iptables%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">iptables介绍</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">基础概念</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E8%A7%84%E5%88%99%EF%BC%88rules%EF%BC%89\"><span class=\"toc-text\">1.规则（rules）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E8%A7%84%E5%88%99%E8%A1%A8%E5%92%8C%E9%93%BE\"><span class=\"toc-text\">2.规则表和链</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1%EF%BC%89%E8%A7%84%E5%88%99%E8%A1%A8\"><span class=\"toc-text\">1）规则表</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#filter%E8%A1%A8%EF%BC%88%E9%BB%98%E8%AE%A4%EF%BC%89%E2%80%94%E2%80%94%E4%B8%89%E4%B8%AA%E9%93%BE%EF%BC%9AINPUT%E3%80%81FORWARD%E3%80%81OUTPUT\"><span class=\"toc-text\">filter表（默认）——三个链：INPUT、FORWARD、OUTPUT</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Nat%E8%A1%A8%E2%80%94%E2%80%94%E4%B8%89%E4%B8%AA%E9%93%BE%EF%BC%9APREROUTING%E3%80%81POSTROUTING%E3%80%81OUTPUT\"><span class=\"toc-text\">Nat表——三个链：PREROUTING、POSTROUTING、OUTPUT</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Mangle%E8%A1%A8%E2%80%94%E2%80%94%E4%BA%94%E4%B8%AA%E9%93%BE%EF%BC%9APREROUTING%E3%80%81POSTROUTING%E3%80%81INPUT%E3%80%81OUTPUT%E3%80%81FORWARD\"><span class=\"toc-text\">Mangle表——五个链：PREROUTING、POSTROUTING、INPUT、OUTPUT、FORWARD</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Raw%E8%A1%A8%E2%80%94%E2%80%94%E4%B8%A4%E4%B8%AA%E9%93%BE%EF%BC%9AOUTPUT%E3%80%81PREROUTING\"><span class=\"toc-text\">Raw表——两个链：OUTPUT、PREROUTING</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EF%BC%882%EF%BC%89%E8%A7%84%E5%88%99%E9%93%BE\"><span class=\"toc-text\">（2）规则链</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#INPUT%E2%80%94%E2%80%94%E8%BF%9B%E6%9D%A5%E7%9A%84%E6%95%B0%E6%8D%AE%E5%8C%85%E5%BA%94%E7%94%A8%E6%AD%A4%E8%A7%84%E5%88%99%E9%93%BE%E4%B8%AD%E7%9A%84%E7%AD%96%E7%95%A5\"><span class=\"toc-text\">INPUT——进来的数据包应用此规则链中的策略</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#OUTPUT%E2%80%94%E2%80%94%E5%A4%96%E5%87%BA%E7%9A%84%E6%95%B0%E6%8D%AE%E5%8C%85%E5%BA%94%E7%94%A8%E6%AD%A4%E8%A7%84%E5%88%99%E9%93%BE%E4%B8%AD%E7%9A%84%E7%AD%96%E7%95%A5\"><span class=\"toc-text\">OUTPUT——外出的数据包应用此规则链中的策略</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#FORWARD%E2%80%94%E2%80%94%E8%BD%AC%E5%8F%91%E6%95%B0%E6%8D%AE%E5%8C%85%E6%97%B6%E5%BA%94%E7%94%A8%E6%AD%A4%E8%A7%84%E5%88%99%E9%93%BE%E4%B8%AD%E7%9A%84%E7%AD%96%E7%95%A5\"><span class=\"toc-text\">FORWARD——转发数据包时应用此规则链中的策略</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#PREROUTING%E2%80%94%E2%80%94%E5%AF%B9%E6%95%B0%E6%8D%AE%E5%8C%85%E4%BD%9C%E8%B7%AF%E7%94%B1%E9%80%89%E6%8B%A9%E5%89%8D%E5%BA%94%E7%94%A8%E6%AD%A4%E9%93%BE%E4%B8%AD%E7%9A%84%E8%A7%84%E5%88%99%EF%BC%88%E8%AE%B0%E4%BD%8F%EF%BC%81%E6%89%80%E6%9C%89%E7%9A%84%E6%95%B0%E6%8D%AE%E5%8C%85%E8%BF%9B%E6%9D%A5%E7%9A%84%E6%97%B6%E4%BE%AF%E9%83%BD%E5%85%88%E7%94%B1%E8%BF%99%E4%B8%AA%E9%93%BE%E5%A4%84%E7%90%86%EF%BC%89\"><span class=\"toc-text\">PREROUTING——对数据包作路由选择前应用此链中的规则（记住！所有的数据包进来的时侯都先由这个链处理）</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#POSTROUTING%E2%80%94%E2%80%94%E5%AF%B9%E6%95%B0%E6%8D%AE%E5%8C%85%E4%BD%9C%E8%B7%AF%E7%94%B1%E9%80%89%E6%8B%A9%E5%90%8E%E5%BA%94%E7%94%A8%E6%AD%A4%E9%93%BE%E4%B8%AD%E7%9A%84%E8%A7%84%E5%88%99%EF%BC%88%E6%89%80%E6%9C%89%E7%9A%84%E6%95%B0%E6%8D%AE%E5%8C%85%E5%87%BA%E6%9D%A5%E7%9A%84%E6%97%B6%E4%BE%AF%E9%83%BD%E5%85%88%E7%94%B1%E8%BF%99%E4%B8%AA%E9%93%BE%E5%A4%84%E7%90%86%EF%BC%89\"><span class=\"toc-text\">POSTROUTING——对数据包作路由选择后应用此链中的规则（所有的数据包出来的时侯都先由这个链处理）</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EF%BC%883%EF%BC%89%E8%A7%84%E5%88%99%E8%A1%A8%E4%B9%8B%E9%97%B4%E7%9A%84%E4%BC%98%E5%85%88%E9%A1%BA%E5%BA%8F\"><span class=\"toc-text\">（3）规则表之间的优先顺序</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%EF%BC%884%EF%BC%89%E8%A7%84%E5%88%99%E9%93%BE%E4%B9%8B%E9%97%B4%E7%9A%84%E4%BC%98%E5%85%88%E9%A1%BA%E5%BA%8F%EF%BC%88%E5%88%86%E4%B8%89%E7%A7%8D%E6%83%85%E5%86%B5%EF%BC%89\"><span class=\"toc-text\">（4）规则链之间的优先顺序（分三种情况）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%80%E7%A7%8D%E6%83%85%E5%86%B5%EF%BC%9A%E5%85%A5%E7%AB%99%E6%95%B0%E6%8D%AE%E6%B5%81%E5%90%91\"><span class=\"toc-text\">第一种情况：入站数据流向</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%8C%E5%86%B2%E6%83%85%E5%86%B5%EF%BC%9A%E8%BD%AC%E5%8F%91%E6%95%B0%E6%8D%AE%E6%B5%81%E5%90%91\"><span class=\"toc-text\">第二冲情况：转发数据流向</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%89%E7%A7%8D%E6%83%85%E5%86%B5%EF%BC%9A%E5%87%BA%E7%AB%99%E6%95%B0%E6%8D%AE%E6%B5%81%E5%90%91\"><span class=\"toc-text\">第三种情况：出站数据流向</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%91%BD%E4%BB%A4%E8%A1%8C\"><span class=\"toc-text\">命令行</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%84%E5%88%99%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">规则设置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B7%BB%E5%8A%A0%E5%B8%B8%E7%94%A8%E7%AD%96%E7%95%A5\"><span class=\"toc-text\">添加常用策略</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%A0%E9%99%A4iptables%E8%A7%84%E5%88%99\"><span class=\"toc-text\">删除iptables规则</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9iptables%E8%A7%84%E5%88%99\"><span class=\"toc-text\">修改iptables规则</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%98%B2%E7%81%AB%E5%A2%99%E8%A7%84%E5%88%99%E7%9A%84%E4%BF%9D%E5%AD%98%E4%B8%8E%E6%81%A2%E5%A4%8D\"><span class=\"toc-text\">防火墙规则的保存与恢复</span></a></li></ol></li></ol>","author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"istio入门","uid":"983f96d2354b5cf26dadd3c84b063a40","slug":"kubernetes/istio入门","date":"2023-06-20T00:14:34.000Z","updated":"2024-06-19T06:04:57.002Z","comments":true,"path":"api/articles/kubernetes/istio入门.json","keywords":"chriswood blogs sharing","cover":null,"text":"##简单部署及开放入口 安装minikube安装 https://minikube.sigs.k8s.io/docs/start/ minikube start helm安装istio https://istio.io/latest/zh/docs/setup/install/h...","link":"","photos":[],"count_time":{"symbolsCount":"35k","symbolsTime":"31 mins."},"categories":[{"name":"kubernetes","slug":"kubernetes","count":7,"path":"api/categories/kubernetes.json"}],"tags":[{"name":"kubernetes","slug":"kubernetes","count":8,"path":"api/tags/kubernetes.json"},{"name":"istio","slug":"istio","count":2,"path":"api/tags/istio.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"k3s部署rancher","uid":"ed36a2a5be80ea11d6c25858e6e2bac9","slug":"kubernetes/k3s部署rancher","date":"2023-06-15T00:50:21.000Z","updated":"2024-06-19T06:04:57.002Z","comments":true,"path":"api/articles/kubernetes/k3s部署rancher.json","keywords":"chriswood blogs sharing","cover":null,"text":"简易版rancher版本2.7.4 部署k3s server节点如果是windows环境，推荐使用k3d在docker中安装k3s k3d cluster create --config local-k3s.yaml # k3d configuration file, saved...","link":"","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[{"name":"rancher","slug":"rancher","count":1,"path":"api/categories/rancher.json"}],"tags":[{"name":"rancher","slug":"rancher","count":1,"path":"api/tags/rancher.json"},{"name":"k3s","slug":"k3s","count":1,"path":"api/tags/k3s.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}