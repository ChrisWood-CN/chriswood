{"total":37,"pageSize":12,"pageCount":4,"data":[{"title":"EditorConfig配置","uid":"e5462aee6cc573fa0fc698b06c8bed09","slug":"ide/EditorConfig配置","date":"2023-05-18T00:08:20.000Z","updated":"2023-05-18T00:42:31.544Z","comments":true,"path":"api/articles/ide/EditorConfig配置.json","cover":null,"text":"1 EditorConfig插件https://editorconfig.org/#pre-installed 2 .editorconfig 配置文件 .editorconfig 自定义文件是用来定义编辑器的编码格式规范，编辑器的行为会与 .editorconfig 文件中定义...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"IDE EditorConfig","slug":"IDE-EditorConfig","count":1,"path":"api/tags/IDE-EditorConfig.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"kubernetes安装dashboard","uid":"0ce9642686c176c4110b6a4972f4afa9","slug":"kubernetes/kubernetes安装dashboard","date":"2023-05-17T07:07:11.000Z","updated":"2023-05-18T00:42:31.544Z","comments":true,"path":"api/articles/kubernetes/kubernetes安装dashboard.json","cover":null,"text":"安装dashboard1.根据recommended.yaml安装 kubectl apply -f https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;kubernetes&#x2F;dashboard&#x2F;v2.7.0&#x...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"kubernetes dashboard","slug":"kubernetes-dashboard","count":1,"path":"api/tags/kubernetes-dashboard.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"kubeadm搭建k8s集群","uid":"669d7131d7ad49abb2aa1f107e0ec654","slug":"kubernetes/kubeadmin搭建k8s","date":"2023-05-16T05:42:11.000Z","updated":"2023-05-18T00:42:31.544Z","comments":true,"path":"api/articles/kubernetes/kubeadmin搭建k8s.json","cover":null,"text":"环境准备# 临时 systemctl stop firewalld # 永久 systemctl disable firewalld # 永久 sed -i &#39;s&#x2F;enforcing&#x2F;disabled&#x2F;&#39; &#x2F;etc&#x2F...","link":"","photos":[],"count_time":{"symbolsCount":"6.8k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"kubeadm kubernetes","slug":"kubeadm-kubernetes","count":1,"path":"api/tags/kubeadm-kubernetes.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"SuppressWarnings注解","uid":"dc3f996edbdbecb4bee8138ad43dfb31","slug":"java/annotation/SuppressWarnings注解","date":"2023-04-04T05:25:46.000Z","updated":"2023-05-18T00:42:31.544Z","comments":true,"path":"api/articles/java/annotation/SuppressWarnings注解.json","cover":null,"text":"SuppressWarnings注解标准用法对应表 关键字 用途 all to suppress all warnings boxing to suppress warnings relative to boxing&#x2F;unboxing operations cast t...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"Java Spring","slug":"Java-Spring","count":1,"path":"api/tags/Java-Spring.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"RedisTemplate的opsFor操作","uid":"9a127567f79009a5dd921fb33be17694","slug":"java/redisson/RedisTemplate的opsFor操作","date":"2023-03-07T02:04:31.000Z","updated":"2023-05-18T00:42:31.544Z","comments":true,"path":"api/articles/java/redisson/RedisTemplate的opsFor操作.json","cover":null,"text":"一、opsForValueKey-Value操作 1、set(K key, V value)向Redis新增一个key-value，k-v可以是泛型。 redisTemplate.opsForValue().set(obj1,obj2); 2.get(Object key)&#x...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"Redisson","slug":"Redisson","count":1,"path":"api/categories/Redisson.json"},{"name":"RedisTemplate","slug":"Redisson/RedisTemplate","count":1,"path":"api/categories/Redisson/RedisTemplate.json"}],"tags":[{"name":"Redisson","slug":"Redisson","count":1,"path":"api/tags/Redisson.json"},{"name":"RedisTemplate","slug":"RedisTemplate","count":1,"path":"api/tags/RedisTemplate.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"docker-compose","uid":"9744696a0b3b0998bf3993789981c178","slug":"docker/docker-compose","date":"2023-03-02T02:09:40.000Z","updated":"2023-05-18T00:42:31.544Z","comments":true,"path":"api/articles/docker/docker-compose.json","cover":null,"text":"环境云服务器centOS 7.6 64位 docker-compose安装curl -L &quot;https:&#x2F;&#x2F;github.com&#x2F;docker&#x2F;compose&#x2F;releases&#x2F;download&#x2F;v2...","link":"","photos":[],"count_time":{"symbolsCount":"9.8k","symbolsTime":"9 mins."},"categories":[{"name":"docker","slug":"docker","count":6,"path":"api/categories/docker.json"},{"name":"docker-compose","slug":"docker/docker-compose","count":1,"path":"api/categories/docker/docker-compose.json"}],"tags":[{"name":"docker","slug":"docker","count":6,"path":"api/tags/docker.json"},{"name":"docker-compose","slug":"docker-compose","count":1,"path":"api/tags/docker-compose.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"docker安装及CA证书制作","uid":"bcf521296f79d65fa8a33a76a7a5af5e","slug":"docker/docker安装及CA证书制作","date":"2023-03-01T07:37:24.000Z","updated":"2023-05-18T00:42:31.544Z","comments":true,"path":"api/articles/docker/docker安装及CA证书制作.json","cover":null,"text":"环境云服务器centOS 7.6 64位 安装步骤docker安装sudo yum install -y yum-utils sudo yum-config-manager --add-repo https:&#x2F;&#x2F;download.docker.com&#x2F...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"docker","slug":"docker","count":6,"path":"api/categories/docker.json"}],"tags":[{"name":"docker","slug":"docker","count":6,"path":"api/tags/docker.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"docker-repository","uid":"6e09d1f5d84f92c2bc7207691b14094e","slug":"docker/docker-repository","date":"2023-02-09T03:12:06.000Z","updated":"2023-05-18T00:42:31.544Z","comments":true,"path":"api/articles/docker/docker-repository.json","cover":null,"text":"docker镜像制作alpine_java8_zhv1.0.01.dockerfileFROM openjdk:8-jdk-alpine # 添加timeZone RUN echo &#39;http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;al...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"docker-repository","slug":"docker-repository","count":1,"path":"api/categories/docker-repository.json"}],"tags":[{"name":"docker-repository","slug":"docker-repository","count":1,"path":"api/tags/docker-repository.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"docker镜像构建方式","uid":"05c6b7bccc0f16753e9101299bf620c9","slug":"docker/docker镜像构建方式","date":"2023-02-08T03:04:06.000Z","updated":"2023-05-18T00:42:31.544Z","comments":true,"path":"api/articles/docker/docker镜像构建方式.json","cover":null,"text":"创建镜像的方法主要有三种： 基于已有镜像的容器创建 基于本地模板导入 基于Dockerfile创建 一、基于容器创建镜像基于已有容器构建镜像主要是通过docker commit命令来构建新的镜像，语法规则如下： docker commit [OPTIONS] CONTAINER ...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"docker","slug":"docker","count":6,"path":"api/categories/docker.json"}],"tags":[{"name":"docker","slug":"docker","count":6,"path":"api/tags/docker.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"springboot日志配置","uid":"6bb5feb5ebe53be9e2c2838a6f221b1e","slug":"springboot/springboot日志配置","date":"2023-02-07T06:59:47.000Z","updated":"2023-05-18T00:42:31.552Z","comments":true,"path":"api/articles/springboot/springboot日志配置.json","cover":null,"text":"默认日志 Logback默认情况下，Spring Boot会用Logback来记录日志，并用INFO级别输出到控制台。 spring-boot-starter其中包含了 spring-boot-starter-logging，该依赖内容就是 Spring Boot默认的日志框架 ...","link":"","photos":[],"count_time":{"symbolsCount":"18k","symbolsTime":"16 mins."},"categories":[{"name":"springboot","slug":"springboot","count":2,"path":"api/categories/springboot.json"},{"name":"springboot配置","slug":"springboot/springboot配置","count":2,"path":"api/categories/springboot/springboot配置.json"}],"tags":[{"name":"springboot","slug":"springboot","count":2,"path":"api/tags/springboot.json"},{"name":"springboot配置","slug":"springboot配置","count":2,"path":"api/tags/springboot配置.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"docker部署hbase","uid":"f55822a9843defac7c7cd98d8f77df10","slug":"docker/docker部署hbase","date":"2023-02-06T07:22:50.000Z","updated":"2023-05-18T00:42:31.544Z","comments":true,"path":"api/articles/docker/docker部署hbase.json","cover":null,"text":"docker搭建hbase环境Linux系统：centos 7.6 Hbase：harisekhon&#x2F;hbase Hbase1.拉取镜像 并部署启动 方式一 手动分配所有端口 docker run -d -p 2181:2181 \\ -p 8080:8080 -p 80...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"docker","slug":"docker","count":6,"path":"api/categories/docker.json"},{"name":"hbase","slug":"docker/hbase","count":1,"path":"api/categories/docker/hbase.json"}],"tags":[{"name":"docker","slug":"docker","count":6,"path":"api/tags/docker.json"},{"name":"hbase","slug":"hbase","count":1,"path":"api/tags/hbase.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"kafka学习","uid":"61a9c9a9f7385f264375e290c4106594","slug":"kafka/kafka学习","date":"2023-02-02T08:21:26.000Z","updated":"2023-05-18T00:42:31.544Z","comments":true,"path":"api/articles/kafka/kafka学习.json","cover":null,"text":"安装启动ZooKeeper（单机模式）1.下载解压镜像地址下载zookeeper，tar -zxvf 解压至&#x2F;opt2.配置环境变量 vim &#x2F;etc&#x2F;profile export ZOOKEEPER_HOME&#x3D;&#x2F;opt&#x2F...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"kafka","slug":"kafka","count":1,"path":"api/categories/kafka.json"},{"name":"zookeeper","slug":"kafka/zookeeper","count":1,"path":"api/categories/kafka/zookeeper.json"}],"tags":[{"name":"kafka","slug":"kafka","count":2,"path":"api/tags/kafka.json"},{"name":"zookeeper","slug":"zookeeper","count":1,"path":"api/tags/zookeeper.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}