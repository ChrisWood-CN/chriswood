{"total":31,"pageSize":12,"pageCount":3,"data":[{"title":"Nginx日志按天切割","uid":"2daf5b5a74686be842f9f5c6d964e1fb","slug":"nginx/Nginx日志按天切割","date":"2022-10-18T08:20:26.000Z","updated":"2023-03-01T08:45:23.948Z","comments":true,"path":"api/articles/nginx/Nginx日志按天切割.json","cover":null,"text":"Nginx日志按天切割Nginx默认的发布不支持对日志文件按日期或者按日志量来分割，此处实现的功能：在每天凌晨00:00把前⼀天的Nginx⽇志（access.log和error.log）分别重命名为access-yyyy-mm-dd.log和log-xxxx-xx-xx.log...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"Nginx","slug":"Nginx","count":2,"path":"api/categories/Nginx.json"}],"tags":[{"name":"Nginx","slug":"Nginx","count":2,"path":"api/tags/Nginx.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"开发环境配置","uid":"f608ca61f1cd18e3f4abde5dcaf441ba","slug":"common/开发环境配置","date":"2022-10-16T02:36:44.000Z","updated":"2023-03-01T08:45:23.944Z","comments":true,"path":"api/articles/common/开发环境配置.json","cover":null,"text":"开发环境配置篇nodewindowsnvm for windows GitHub地址: https://github.com/coreybutler/nvm-windows/releases推荐使用nvm-setup.exe 自动创建环境变量NVM_HOME和NVM_SYMLIN...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"python node java","slug":"python-node-java","count":1,"path":"api/tags/python-node-java.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"docker环境部署集群前后端分离项目","uid":"fd6db9879e8a7f6e92c3104daa24218a","slug":"docker/docker环境部署集群前后端分离项目","date":"2022-10-12T08:05:29.000Z","updated":"2023-03-01T08:45:23.944Z","comments":true,"path":"api/articles/docker/docker环境部署集群前后端分离项目.json","cover":null,"text":"docker环境部署集群前后端分离项目一、基础1.Docker虚拟机常用命令1.先更新软件包 scriptyum -y update 2.安装Docker虚拟机 scriptyum install -y docker 3.运行、重启、关闭Docker虚拟机 scriptservi...","link":"","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[{"name":"docker","slug":"docker","count":5,"path":"api/categories/docker.json"}],"tags":[{"name":"docker","slug":"docker","count":5,"path":"api/tags/docker.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Java高并发专题-JUC线程池","uid":"ab71b7b05749a5527c735a9fb6d5af98","slug":"java/concurrent/Java高并发专题-JUC线程池","date":"2022-10-08T08:55:43.000Z","updated":"2023-03-01T08:45:23.944Z","comments":true,"path":"api/articles/java/concurrent/Java高并发专题-JUC线程池.json","cover":null,"text":"线程池Executor框架接口 Executors.newCachedThreadPool() 创建缓存线程池public class ThreadPoolExample1 &#123; public static void main(String[] args) &#123; ...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"Java高并发","slug":"Java高并发","count":1,"path":"api/categories/Java高并发.json"},{"name":"JUC","slug":"Java高并发/JUC","count":1,"path":"api/categories/Java高并发/JUC.json"}],"tags":[{"name":"Java高并发","slug":"Java高并发","count":1,"path":"api/tags/Java高并发.json"},{"name":"JUC","slug":"JUC","count":1,"path":"api/tags/JUC.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"springboot配置文件","uid":"38ca70cafbfd87b7f0418630bd7d0ad1","slug":"springboot/springboot配置文件","date":"2022-10-08T07:55:43.000Z","updated":"2023-02-07T07:03:00.000Z","comments":true,"path":"api/articles/springboot/springboot配置文件.json","cover":null,"text":"springboot配置文件在springboot 项目中一般默认的配置文件是application.properties,但是实际项目中我们一般会使用application.yml文件 yml文件读取顺序存放目录SpringBoot配置文件默认可以放到以下目录中，可以自动读取到...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"springboot","slug":"springboot","count":2,"path":"api/categories/springboot.json"},{"name":"springboot配置","slug":"springboot/springboot配置","count":2,"path":"api/categories/springboot/springboot配置.json"}],"tags":[{"name":"springboot","slug":"springboot","count":2,"path":"api/tags/springboot.json"},{"name":"springboot配置","slug":"springboot配置","count":2,"path":"api/tags/springboot配置.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Mysql基础","uid":"e92c64341ee2ef385eda6a1d1f832be9","slug":"mysql/base/Mysql基础","date":"2022-10-01T04:55:09.000Z","updated":"2023-03-01T08:45:23.948Z","comments":true,"path":"api/articles/mysql/base/Mysql基础.json","cover":null,"text":"Mysql常见数据库 MYSQL：开源免费的数据库，小型的数据库.已经被Oracle收购了.MySQL6.x版本也开始收费。 Oracle：收费的大型数据库，Oracle公司的产品。Oracle收购SUN公司，收购MYSQL。 DB2 ：IBM公司的数据库产品,收费的。常应用在银...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"Mysql","slug":"Mysql","count":1,"path":"api/categories/Mysql.json"}],"tags":[{"name":"Mysql","slug":"Mysql","count":1,"path":"api/tags/Mysql.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Node基础十二","uid":"c5c39a45409b6c5284d037b63eb17322","slug":"node/base/Node基础十二","date":"2022-10-01T04:32:50.000Z","updated":"2023-03-01T08:45:23.948Z","comments":true,"path":"api/articles/node/base/Node基础十二.json","cover":[],"text":"十二.数据库MySQL认识数据库1.1. 为什么要使用数据库任何的软件系统都需要存放大量的数据，这些数据通常是非常复杂和庞大的： 比如用户信息包括姓名、年龄、性别、地址、身份证号、出生日期等等； 比如商品信息包括商品的名称、描述、价格（原价）、分类标签、商品图片等等； 比如歌曲信...","link":"","photos":[],"count_time":{"symbolsCount":"39k","symbolsTime":"35 mins."},"categories":[{"name":"Node","slug":"Node","count":12,"path":"api/categories/Node.json"}],"tags":[{"name":"Node Node基础系列","slug":"Node-Node基础系列","count":12,"path":"api/tags/Node-Node基础系列.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Node基础十一","uid":"52153482f8bb5490978c774dade2918c","slug":"node/base/Node基础十一","date":"2022-10-01T04:31:50.000Z","updated":"2023-03-01T08:45:23.948Z","comments":true,"path":"api/articles/node/base/Node基础十一.json","cover":[],"text":"十一.koa开发web服务器Koa初体验1.1. 认识Koa前面我们已经学习了express，另外一个非常流行的Node Web服务器框架就是Koa。 Koa官方的介绍： koa：next generation web framework for node.js； koa：nod...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"Node","slug":"Node","count":12,"path":"api/categories/Node.json"}],"tags":[{"name":"Node Node基础系列","slug":"Node-Node基础系列","count":12,"path":"api/tags/Node-Node基础系列.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Node基础十","uid":"c2943d2fce9c96d8a973d43b491afc6a","slug":"node/base/Node基础十","date":"2022-10-01T04:30:50.000Z","updated":"2023-03-01T08:45:23.948Z","comments":true,"path":"api/articles/node/base/Node基础十.json","cover":[],"text":"十.express开发web服务器Express初体验1.1. 认识Web框架前面我们已经学习了使用http内置模块来搭建Web服务器，为什么还要使用框架？ 原生http在进行很多处理时，会较为复杂； 有URL判断、Method判断、参数处理、逻辑代码处理等，都需要我们自己来处理...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"Node","slug":"Node","count":12,"path":"api/categories/Node.json"}],"tags":[{"name":"Node Node基础系列","slug":"Node-Node基础系列","count":12,"path":"api/tags/Node-Node基础系列.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Node基础九","uid":"b171402bc406b8e8ddf1dcd5f712137e","slug":"node/base/Node基础九","date":"2022-10-01T04:29:50.000Z","updated":"2023-03-01T08:45:23.948Z","comments":true,"path":"api/articles/node/base/Node基础九.json","cover":[],"text":"九.http开发web服务器 什么是Web服务器？ 当应用程序（客户端）需要某一个资源时，可以向一个台服务器，通过Http请求获取到这个资源；提供服务器的这个服务器，就是一个Web服务器； Web服务器 目前有很多开源的Web服务器：Nginx、Apache（静态）、Apache...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"Node","slug":"Node","count":12,"path":"api/categories/Node.json"}],"tags":[{"name":"Node Node基础系列","slug":"Node-Node基础系列","count":12,"path":"api/tags/Node-Node基础系列.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Node基础八","uid":"adefcce4d4f2d80811a82b2ac8c91417","slug":"node/base/Node基础八","date":"2022-10-01T04:28:50.000Z","updated":"2023-03-01T08:45:23.948Z","comments":true,"path":"api/articles/node/base/Node基础八.json","cover":[],"text":"八. 深入事件循环事件循环是什么？事实上我把事件循环理解成我们编写的JavaScript和浏览器或者Node之间的一个桥梁。 浏览器的事件循环是一个我们编写的JavaScript代码和浏览器API调用(setTimeout&#x2F;AJAX&#x2F;监听事件等)的一个桥梁, ...","link":"","photos":[],"count_time":{"symbolsCount":"9.1k","symbolsTime":"8 mins."},"categories":[{"name":"Node","slug":"Node","count":12,"path":"api/categories/Node.json"}],"tags":[{"name":"Node Node基础系列","slug":"Node-Node基础系列","count":12,"path":"api/tags/Node-Node基础系列.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Node基础七","uid":"9cc987ed6425e4445f09c1cfe9b13abf","slug":"node/base/Node基础七","date":"2022-10-01T04:27:50.000Z","updated":"2023-03-01T08:45:23.948Z","comments":true,"path":"api/articles/node/base/Node基础七.json","cover":[],"text":"七.脚手架开发目前前端工程化开发过程中，我们会使用各种各样的脚手架，vue-cli、create-react-app，当然也包括webpack、gulp、rollup、vite等工具。 这些工具是怎么开发出来的呢？当我们执行一个命令时，它们做了什么事情？是怎么样完成的一系列操作？...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"Node","slug":"Node","count":12,"path":"api/categories/Node.json"}],"tags":[{"name":"Node Node基础系列","slug":"Node-Node基础系列","count":12,"path":"api/tags/Node-Node基础系列.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}