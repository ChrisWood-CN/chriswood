{"name":"Java高并发","slug":"Java高并发","count":1,"postlist":[{"title":"Java高并发专题-JUC线程池","uid":"ab71b7b05749a5527c735a9fb6d5af98","slug":"java/concurrent/Java高并发专题-JUC线程池","date":"2022-10-08T08:55:43.000Z","updated":"2023-06-09T05:39:02.811Z","comments":true,"path":"api/articles/java/concurrent/Java高并发专题-JUC线程池.json","keywords":"chriswood blogs sharing","cover":null,"text":"线程池Executor框架接口 Executors.newCachedThreadPool() 创建缓存线程池public class ThreadPoolExample1 &#123; public static void main(String[] args) &#123; ...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"Java","slug":"Java","count":2,"path":"api/categories/Java.json"}],"tags":[{"name":"Java高并发","slug":"Java高并发","count":1,"path":"api/tags/Java高并发.json"},{"name":"JUC","slug":"JUC","count":1,"path":"api/tags/JUC.json"}],"author":{"name":"ChrisWood","slug":"blog-author","avatar":"https://chriswood-blog.oss-cn-shanghai.aliyuncs.com/me/avatar.png","link":"/","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/chriswoodcn","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}