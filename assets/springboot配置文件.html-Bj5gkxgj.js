import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,b as e}from"./app-Di2jApqi.js";const n={},t=e(`<h2 id="springboot配置文件" tabindex="-1"><a class="header-anchor" href="#springboot配置文件"><span>springboot配置文件</span></a></h2><p>在springboot 项目中一般默认的配置文件是application.properties,但是实际项目中我们一般会使用application.yml文件</p><h3 id="yml文件读取顺序" tabindex="-1"><a class="header-anchor" href="#yml文件读取顺序"><span>yml文件读取顺序</span></a></h3><h4 id="存放目录" tabindex="-1"><a class="header-anchor" href="#存放目录"><span>存放目录</span></a></h4><p>SpringBoot配置文件默认可以放到以下目录中，可以自动读取到：</p><ul><li>项目根目录中config目录下</li><li>项目根目录下</li><li>项目resources目录中config目录下</li><li>项目的resources目录下</li></ul><h4 id="读取顺序" tabindex="-1"><a class="header-anchor" href="#读取顺序"><span>读取顺序</span></a></h4><p>在不同的目录中存在多个配置文件，它的读取顺序是： 1、config/application.properties（项目根目录中config目录下） 2、config/application.yml 3、application.properties（项目根目录下） 4、application.yml 5、resources/config/application.properties（项目resources目录中config目录下） 6、resources/config/application.yml 7、resources/application.properties（项目的resources目录下） 8、resources/application.yml</p><blockquote><p>注意：1、如果同一个目录下，有application.yml也有application.properties，默认先读取application.properties。 2、如果同一个配置属性，在多个配置文件都配置了，默认使用第1个读取到的，后面读取的不覆盖前面读取到的。 3、创建SpringBoot项目时，一般的配置文件放置在“项目的resources目录下</p></blockquote><h3 id="yml文件读取方式" tabindex="-1"><a class="header-anchor" href="#yml文件读取方式"><span>yml文件读取方式</span></a></h3><h4 id="yml文件规则" tabindex="-1"><a class="header-anchor" href="#yml文件规则"><span>yml文件规则</span></a></h4><ul><li>yml文件的好处，天然的树状结构，一目了然，实质上跟properties是差不多</li><li>不支持tab缩进</li><li>可以使用 &quot;-小写字母&quot; 或 &quot;_小写字母&quot;来 代替 &quot;大写字母&quot;,如 userName 与 user-name ,user_name 含义是一样的,key: value 格式书写 key,后面跟着冒号,再后面跟着一个空格,然后是值</li></ul><h4 id="几种数据格式的表示方式" tabindex="-1"><a class="header-anchor" href="#几种数据格式的表示方式"><span>几种数据格式的表示方式</span></a></h4><h5 id="_1-普通的值-数字-字符串-布尔" tabindex="-1"><a class="header-anchor" href="#_1-普通的值-数字-字符串-布尔"><span>1.普通的值（数字，字符串，布尔）</span></a></h5><p>key: value ,如:</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">age</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">18</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">zhangsan</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意：字符串默认不用加上单引号或者双引号； &quot;&quot;：双引号不会转义字符串里面的特殊字符；特殊字符会作为本身想表示的意思 name: &quot;zhangsan \\n lisi&quot;：输出；zhangsan 换行 lisi &#39;&#39;：单引号会转义特殊字符，特殊字符最终只是一个普通的字符串数据 name: ‘zhangsan \\n lisi’：输出；zhangsan \\n lisi</p></blockquote><h5 id="_2-对象、map-属性和值-键值对" tabindex="-1"><a class="header-anchor" href="#_2-对象、map-属性和值-键值对"><span>2.对象、Map（属性和值）（键值对）</span></a></h5><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">person</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  age</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">18</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">mysgk</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">刘德华</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  age</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">10</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-数组-list、set" tabindex="-1"><a class="header-anchor" href="#_3-数组-list、set"><span>3.数组（List、Set）</span></a></h5><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">hands</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">left</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">right</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">列表1,列表2,列表3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: [ </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">集合1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">集合2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">集合3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> ]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="读取配置的方式" tabindex="-1"><a class="header-anchor" href="#读取配置的方式"><span>读取配置的方式</span></a></h4><h5 id="_1-value" tabindex="-1"><a class="header-anchor" href="#_1-value"><span>1.@Value</span></a></h5><p>直接在对应的变量上添加@Value注解即可，此时配置的key可以不与变量名相同</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  port</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">8081</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">Value</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;\${server.port}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> serverPort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-configurationproperties" tabindex="-1"><a class="header-anchor" href="#_2-configurationproperties"><span>2.@ConfigurationProperties</span></a></h5><p>新增一个Student类，同时添加@ConfigurationProperties注解</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">student</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">刘德华</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  age</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">40</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">Data</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">ConfigurationProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">prefix</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;student&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> Student</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">    String</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> age</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-environment" tabindex="-1"><a class="header-anchor" href="#_3-environment"><span>3.@Environment</span></a></h5><p>用的很少，了解即可</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">  msg</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">aaa</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">Autowired</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">private</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> Environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> env</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">    System</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">env</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;test.msg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,34),l=[t];function h(p,r){return a(),s("div",null,l)}const o=i(n,[["render",h],["__file","springboot配置文件.html.vue"]]),g=JSON.parse('{"path":"/zh/posts/springboot/springboot%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.html","title":"springboot配置文件","lang":"zh-CN","frontmatter":{"title":"springboot配置文件","date":"2022-10-08T15:55:43.000Z","updated":"2023-02-07T15:03:00.000Z","categories":"springboot","tags":["springboot","springboot配置"],"description":"springboot配置文件 在springboot 项目中一般默认的配置文件是application.properties,但是实际项目中我们一般会使用application.yml文件 yml文件读取顺序 存放目录 SpringBoot配置文件默认可以放到以下目录中，可以自动读取到： 项目根目录中config目录下 项目根目录下 项目resourc...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/zh/posts/springboot/springboot%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.html"}],["meta",{"property":"og:site_name","content":"博客"}],["meta",{"property":"og:title","content":"springboot配置文件"}],["meta",{"property":"og:description","content":"springboot配置文件 在springboot 项目中一般默认的配置文件是application.properties,但是实际项目中我们一般会使用application.yml文件 yml文件读取顺序 存放目录 SpringBoot配置文件默认可以放到以下目录中，可以自动读取到： 项目根目录中config目录下 项目根目录下 项目resourc..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-19T08:58:34.000Z"}],["meta",{"property":"article:author","content":"chriswoodcn"}],["meta",{"property":"article:tag","content":"springboot"}],["meta",{"property":"article:tag","content":"springboot配置"}],["meta",{"property":"article:published_time","content":"2022-10-08T15:55:43.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-19T08:58:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"springboot配置文件\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-10-08T15:55:43.000Z\\",\\"dateModified\\":\\"2024-06-19T08:58:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"chriswoodcn\\"}]}"]]},"headers":[{"level":2,"title":"springboot配置文件","slug":"springboot配置文件","link":"#springboot配置文件","children":[{"level":3,"title":"yml文件读取顺序","slug":"yml文件读取顺序","link":"#yml文件读取顺序","children":[]},{"level":3,"title":"yml文件读取方式","slug":"yml文件读取方式","link":"#yml文件读取方式","children":[]}]}],"git":{"createdTime":1718787514000,"updatedTime":1718787514000,"contributors":[{"name":"chriswoodcn","email":"chriswoodcn@aliyun.com","commits":1}]},"readingTime":{"minutes":2.31,"words":692},"filePathRelative":"zh/posts/springboot/springboot配置文件.md","localizedDate":"2022年10月8日","excerpt":"<h2>springboot配置文件</h2>\\n<p>在springboot 项目中一般默认的配置文件是application.properties,但是实际项目中我们一般会使用application.yml文件</p>\\n<h3>yml文件读取顺序</h3>\\n<h4>存放目录</h4>\\n<p>SpringBoot配置文件默认可以放到以下目录中，可以自动读取到：</p>\\n<ul>\\n<li>项目根目录中config目录下</li>\\n<li>项目根目录下</li>\\n<li>项目resources目录中config目录下</li>\\n<li>项目的resources目录下</li>\\n</ul>\\n<h4>读取顺序</h4>","autoDesc":true}');export{o as comp,g as data};
